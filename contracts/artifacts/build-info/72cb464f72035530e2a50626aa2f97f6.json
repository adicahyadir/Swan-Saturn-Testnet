{
	"id": "72cb464f72035530e2a50626aa2f97f6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/EnigmaticAuraNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\ncontract EnigmaticAuraNFT is ERC721, Ownable {\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _tokenIdCounter;\r\n\r\n    // Event emitted when a new NFT is minted\r\n    event Minted(address indexed owner, uint256 tokenId);\r\n\r\n    // NFT name and symbol\r\n    string private _name = \"ENIGMATIC AURA\";\r\n    string private _symbol = \"EA\";\r\n\r\n    // Maximum supply of NFTs\r\n    uint256 private _maxSupply = 6666;\r\n\r\n    // Base URI for metadata\r\n    string private _baseTokenURI;\r\n\r\n    // Mapping to track whether a token ID has been minted\r\n    mapping(uint256 => bool) private _mintedTokens;\r\n\r\n    // Additional owners\r\n    mapping(address => bool) private _additionalOwners;\r\n\r\n    modifier onlyAdditionalOwners() {\r\n        require(_additionalOwners[msg.sender] || msg.sender == owner(), \"Not an additional owner\");\r\n        _;\r\n    }\r\n\r\n    constructor(string memory baseTokenURI, address initialOwner) ERC721(_name, _symbol) Ownable(initialOwner) {\r\n        _baseTokenURI = baseTokenURI;\r\n        _addAdditionalOwner(0x6dB77318c4EB74A296E41179A22700F84658fA86);\r\n    }\r\n\r\n    // Mint new NFT\r\n    function mint() external onlyAdditionalOwners {\r\n        require(_tokenIdCounter.current() < _maxSupply, \"Maximum supply reached\");\r\n        uint256 tokenId = _tokenIdCounter.current() + 1;\r\n        _safeMint(msg.sender, tokenId);\r\n        _mintedTokens[tokenId] = true;\r\n        _tokenIdCounter.increment();\r\n        emit Minted(msg.sender, tokenId);\r\n    }\r\n\r\n    // Check if a token has been minted\r\n    function isTokenMinted(uint256 tokenId) external view returns (bool) {\r\n        return _mintedTokens[tokenId];\r\n    }\r\n\r\n    // Set the base URI for metadata\r\n    function setBaseURI(string memory baseTokenURI) external onlyOwner {\r\n        _baseTokenURI = baseTokenURI;\r\n    }\r\n\r\n    // Add additional owner\r\n    function addOwner(address newOwner) external onlyOwner {\r\n        _addAdditionalOwner(newOwner);\r\n    }\r\n\r\n    // Internal function to add additional owner\r\n    function _addAdditionalOwner(address newOwner) internal {\r\n        require(newOwner != address(0), \"Invalid address\");\r\n        _additionalOwners[newOwner] = true;\r\n    }\r\n\r\n    // Function to remove additional owner (only callable by the contract owner)\r\n    function removeOwner(address ownerToRemove) external onlyOwner {\r\n        require(ownerToRemove != owner(), \"Cannot remove contract owner\");\r\n        _additionalOwners[ownerToRemove] = false;\r\n    }\r\n\r\n    // Function to check if an address is an additional owner\r\n    function isAdditionalOwner(address account) external view returns (bool) {\r\n        return _additionalOwners[account];\r\n    }\r\n\r\n    // Override _baseURI() to return the base URI\r\n    function _baseURI() internal view override returns (string memory) {\r\n        return _baseTokenURI;\r\n    }\r\n\r\n    // Function to withdraw Ether from the contract\r\n    function withdraw() external onlyOwner {\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/EnigmaticAuraNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/EnigmaticAuraNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/EnigmaticAuraNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/EnigmaticAuraNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/EnigmaticAuraNFT.sol": {
				"EnigmaticAuraNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "baseTokenURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "addOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdditionalOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "isTokenMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ownerToRemove",
									"type": "address"
								}
							],
							"name": "removeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "baseTokenURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/EnigmaticAuraNFT.sol\":229:3221  contract EnigmaticAuraNFT is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/EnigmaticAuraNFT.sol\":508:547  string private _name = \"ENIGMATIC AURA\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x454e49474d415449432041555241000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x08\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/EnigmaticAuraNFT.sol\":554:583  string private _symbol = \"EA\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x4541000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x09\n  swap1\n  dup2\n  tag_3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"contracts/EnigmaticAuraNFT.sol\":652:656  6666 */\n  0x1a0a\n    /* \"contracts/EnigmaticAuraNFT.sol\":623:656  uint256 private _maxSupply = 6666 */\n  0x0a\n  sstore\n    /* \"contracts/EnigmaticAuraNFT.sol\":1093:1321  constructor(string memory baseTokenURI, address initialOwner) ERC721(_name, _symbol) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"contracts/EnigmaticAuraNFT.sol\":1186:1198  initialOwner */\n  dup1\n    /* \"contracts/EnigmaticAuraNFT.sol\":1162:1167  _name */\n  0x08\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  dup1\n  sload\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  dup1\n  0x1f\n  add\n  0x20\n  dup1\n  swap2\n  div\n  mul\n  0x20\n  add\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  swap3\n  swap2\n  swap1\n  dup2\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup1\n  sload\n  tag_11\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  dup1\n  iszero\n  tag_12\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_13\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  0x20\n  add\n  swap2\n  jump(tag_12)\ntag_13:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_14:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_14\n  jumpi\n  dup3\n  swap1\n  sub\n  0x1f\n  and\n  dup3\n  add\n  swap2\ntag_12:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/EnigmaticAuraNFT.sol\":1169:1176  _symbol */\n  0x09\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  dup1\n  sload\n  tag_15\n  swap1\n  tag_10\n  jump\t// in\ntag_15:\n  dup1\n  0x1f\n  add\n  0x20\n  dup1\n  swap2\n  div\n  mul\n  0x20\n  add\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  swap3\n  swap2\n  swap1\n  dup2\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup1\n  sload\n  tag_16\n  swap1\n  tag_10\n  jump\t// in\ntag_16:\n  dup1\n  iszero\n  tag_17\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_18\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  0x20\n  add\n  swap2\n  jump(tag_17)\ntag_18:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_19:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_19\n  jumpi\n  dup3\n  swap1\n  sub\n  0x1f\n  and\n  dup3\n  add\n  swap2\ntag_17:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_22\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_22:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_23\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_23:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_28\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/EnigmaticAuraNFT.sol\":1227:1239  baseTokenURI */\n  dup2\n    /* \"contracts/EnigmaticAuraNFT.sol\":1211:1224  _baseTokenURI */\n  0x0b\n    /* \"contracts/EnigmaticAuraNFT.sol\":1211:1239  _baseTokenURI = baseTokenURI */\n  swap1\n  dup2\n  tag_31\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_31:\n  pop\n    /* \"contracts/EnigmaticAuraNFT.sol\":1250:1313  _addAdditionalOwner(0x6dB77318c4EB74A296E41179A22700F84658fA86) */\n  tag_32\n    /* \"contracts/EnigmaticAuraNFT.sol\":1270:1312  0x6dB77318c4EB74A296E41179A22700F84658fA86 */\n  0x6db77318c4eb74a296e41179a22700f84658fa86\n    /* \"contracts/EnigmaticAuraNFT.sol\":1250:1269  _addAdditionalOwner */\n  shl(0x20, tag_33)\n    /* \"contracts/EnigmaticAuraNFT.sol\":1250:1313  _addAdditionalOwner(0x6dB77318c4EB74A296E41179A22700F84658fA86) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"contracts/EnigmaticAuraNFT.sol\":1093:1321  constructor(string memory baseTokenURI, address initialOwner) ERC721(_name, _symbol) Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/EnigmaticAuraNFT.sol\":229:3221  contract EnigmaticAuraNFT is ERC721, Ownable {... */\n  jump(tag_34)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_29:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/EnigmaticAuraNFT.sol\":2232:2402  function _addAdditionalOwner(address newOwner) internal {... */\ntag_33:\n    /* \"contracts/EnigmaticAuraNFT.sol\":2327:2328  0 */\n  0x00\n    /* \"contracts/EnigmaticAuraNFT.sol\":2307:2329  newOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/EnigmaticAuraNFT.sol\":2307:2315  newOwner */\n  dup2\n    /* \"contracts/EnigmaticAuraNFT.sol\":2307:2329  newOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/EnigmaticAuraNFT.sol\":2299:2349  require(newOwner != address(0), \"Invalid address\") */\n  tag_37\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_37:\n    /* \"contracts/EnigmaticAuraNFT.sol\":2390:2394  true */\n  0x01\n    /* \"contracts/EnigmaticAuraNFT.sol\":2360:2377  _additionalOwners */\n  0x0d\n    /* \"contracts/EnigmaticAuraNFT.sol\":2360:2387  _additionalOwners[newOwner] */\n  0x00\n    /* \"contracts/EnigmaticAuraNFT.sol\":2378:2386  newOwner */\n  dup4\n    /* \"contracts/EnigmaticAuraNFT.sol\":2360:2387  _additionalOwners[newOwner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/EnigmaticAuraNFT.sol\":2360:2394  _additionalOwners[newOwner] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/EnigmaticAuraNFT.sol\":2232:2402  function _addAdditionalOwner(address newOwner) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_40:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_41:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_42:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_10:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_84:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_86\n  tag_42\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":714:798   */\ntag_85:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_43:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_44:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_45:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_46:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_91\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_45\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1429:1468   */\n  tag_92\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_45\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_47:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_48:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_49:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_96\n    /* \"#utility.yul\":1818:1852   */\n  tag_97\n    /* \"#utility.yul\":1827:1851   */\n  tag_98\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_47\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_50:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_51:\n    /* \"#utility.yul\":2056:2095   */\n  tag_101\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_49\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2117:2208   */\n  tag_102\n    /* \"#utility.yul\":2166:2207   */\n  tag_103\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_50\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_46\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_52:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_53:\n    /* \"#utility.yul\":2377:2409   */\n  tag_106\n  tag_52\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2418:2483   */\n  tag_107\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_51\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_54:\n    /* \"#utility.yul\":2555:2675   */\ntag_109:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_112\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_53\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_109)\ntag_111:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_55:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_115\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_43\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2906:2935   */\n  tag_116\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_44\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_117:\n    /* \"#utility.yul\":3133:3213   */\n  tag_118\n    /* \"#utility.yul\":3189:3211   */\n  tag_119\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_44\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_54\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_114:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_56:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_57:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_122\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_56\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_58:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_124\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_57\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_126\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_40\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_128\n  tag_41\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4038:4094   */\ntag_127:\n    /* \"#utility.yul\":4118:4156   */\n  tag_129\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_10\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4203:4270   */\n  tag_130\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_55\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_132\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_133:\n    /* \"#utility.yul\":5144:5211   */\n  tag_134\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_58\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_131)\n    /* \"#utility.yul\":4365:4983   */\ntag_132:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_135\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_43\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_136:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_136)\ntag_138:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_140\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_57\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_139:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_131:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5309   */\ntag_59:\n    /* \"#utility.yul\":5267:5273   */\n  0x00\n    /* \"#utility.yul\":5300:5302   */\n  0x40\n    /* \"#utility.yul\":5294:5303   */\n  mload\n    /* \"#utility.yul\":5284:5303   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5309   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5315:5432   */\ntag_60:\n    /* \"#utility.yul\":5424:5425   */\n  0x00\n    /* \"#utility.yul\":5421:5422   */\n  dup1\n    /* \"#utility.yul\":5414:5426   */\n  revert\n    /* \"#utility.yul\":5438:5555   */\ntag_61:\n    /* \"#utility.yul\":5547:5548   */\n  0x00\n    /* \"#utility.yul\":5544:5545   */\n  dup1\n    /* \"#utility.yul\":5537:5549   */\n  revert\n    /* \"#utility.yul\":5561:5678   */\ntag_62:\n    /* \"#utility.yul\":5670:5671   */\n  0x00\n    /* \"#utility.yul\":5667:5668   */\n  dup1\n    /* \"#utility.yul\":5660:5672   */\n  revert\n    /* \"#utility.yul\":5684:5801   */\ntag_63:\n    /* \"#utility.yul\":5793:5794   */\n  0x00\n    /* \"#utility.yul\":5790:5791   */\n  dup1\n    /* \"#utility.yul\":5783:5795   */\n  revert\n    /* \"#utility.yul\":5807:5909   */\ntag_64:\n    /* \"#utility.yul\":5848:5854   */\n  0x00\n    /* \"#utility.yul\":5899:5901   */\n  0x1f\n    /* \"#utility.yul\":5895:5902   */\n  not\n    /* \"#utility.yul\":5890:5892   */\n  0x1f\n    /* \"#utility.yul\":5883:5888   */\n  dup4\n    /* \"#utility.yul\":5879:5893   */\n  add\n    /* \"#utility.yul\":5875:5903   */\n  and\n    /* \"#utility.yul\":5865:5903   */\n  swap1\n  pop\n    /* \"#utility.yul\":5807:5909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5915:6196   */\ntag_65:\n    /* \"#utility.yul\":5998:6025   */\n  tag_148\n    /* \"#utility.yul\":6020:6024   */\n  dup3\n    /* \"#utility.yul\":5998:6025   */\n  tag_64\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5990:5996   */\n  dup2\n    /* \"#utility.yul\":5986:6026   */\n  add\n    /* \"#utility.yul\":6128:6134   */\n  dup2\n    /* \"#utility.yul\":6116:6126   */\n  dup2\n    /* \"#utility.yul\":6113:6135   */\n  lt\n    /* \"#utility.yul\":6092:6110   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6080:6090   */\n  dup3\n    /* \"#utility.yul\":6077:6111   */\n  gt\n    /* \"#utility.yul\":6074:6136   */\n  or\n    /* \"#utility.yul\":6071:6159   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6139:6157   */\n  tag_150\n  tag_41\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6071:6159   */\ntag_149:\n    /* \"#utility.yul\":6179:6189   */\n  dup1\n    /* \"#utility.yul\":6175:6177   */\n  0x40\n    /* \"#utility.yul\":6168:6190   */\n  mstore\n    /* \"#utility.yul\":5958:6196   */\n  pop\n    /* \"#utility.yul\":5915:6196   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6202:6331   */\ntag_66:\n    /* \"#utility.yul\":6236:6242   */\n  0x00\n    /* \"#utility.yul\":6263:6283   */\n  tag_152\n  tag_59\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6253:6283   */\n  swap1\n  pop\n    /* \"#utility.yul\":6292:6325   */\n  tag_153\n    /* \"#utility.yul\":6320:6324   */\n  dup3\n    /* \"#utility.yul\":6312:6318   */\n  dup3\n    /* \"#utility.yul\":6292:6325   */\n  tag_65\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6202:6331   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6337:6645   */\ntag_67:\n    /* \"#utility.yul\":6399:6403   */\n  0x00\n    /* \"#utility.yul\":6489:6507   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6481:6487   */\n  dup3\n    /* \"#utility.yul\":6478:6508   */\n  gt\n    /* \"#utility.yul\":6475:6531   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6511:6529   */\n  tag_156\n  tag_41\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6475:6531   */\ntag_155:\n    /* \"#utility.yul\":6549:6578   */\n  tag_157\n    /* \"#utility.yul\":6571:6577   */\n  dup3\n    /* \"#utility.yul\":6549:6578   */\n  tag_64\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6541:6578   */\n  swap1\n  pop\n    /* \"#utility.yul\":6633:6637   */\n  0x20\n    /* \"#utility.yul\":6627:6631   */\n  dup2\n    /* \"#utility.yul\":6623:6638   */\n  add\n    /* \"#utility.yul\":6615:6638   */\n  swap1\n  pop\n    /* \"#utility.yul\":6337:6645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6651:6897   */\ntag_68:\n    /* \"#utility.yul\":6732:6733   */\n  0x00\n    /* \"#utility.yul\":6742:6855   */\ntag_159:\n    /* \"#utility.yul\":6756:6762   */\n  dup4\n    /* \"#utility.yul\":6753:6754   */\n  dup2\n    /* \"#utility.yul\":6750:6763   */\n  lt\n    /* \"#utility.yul\":6742:6855   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":6841:6842   */\n  dup1\n    /* \"#utility.yul\":6836:6839   */\n  dup3\n    /* \"#utility.yul\":6832:6843   */\n  add\n    /* \"#utility.yul\":6826:6844   */\n  mload\n    /* \"#utility.yul\":6822:6823   */\n  dup2\n    /* \"#utility.yul\":6817:6820   */\n  dup5\n    /* \"#utility.yul\":6813:6824   */\n  add\n    /* \"#utility.yul\":6806:6845   */\n  mstore\n    /* \"#utility.yul\":6778:6780   */\n  0x20\n    /* \"#utility.yul\":6775:6776   */\n  dup2\n    /* \"#utility.yul\":6771:6781   */\n  add\n    /* \"#utility.yul\":6766:6781   */\n  swap1\n  pop\n    /* \"#utility.yul\":6742:6855   */\n  jump(tag_159)\ntag_161:\n    /* \"#utility.yul\":6889:6890   */\n  0x00\n    /* \"#utility.yul\":6880:6886   */\n  dup5\n    /* \"#utility.yul\":6875:6878   */\n  dup5\n    /* \"#utility.yul\":6871:6887   */\n  add\n    /* \"#utility.yul\":6864:6891   */\n  mstore\n    /* \"#utility.yul\":6713:6897   */\n  pop\n    /* \"#utility.yul\":6651:6897   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6903:7337   */\ntag_69:\n    /* \"#utility.yul\":6992:6997   */\n  0x00\n    /* \"#utility.yul\":7017:7083   */\n  tag_163\n    /* \"#utility.yul\":7033:7082   */\n  tag_164\n    /* \"#utility.yul\":7075:7081   */\n  dup5\n    /* \"#utility.yul\":7033:7082   */\n  tag_67\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7017:7083   */\n  tag_66\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7008:7083   */\n  swap1\n  pop\n    /* \"#utility.yul\":7106:7112   */\n  dup3\n    /* \"#utility.yul\":7099:7104   */\n  dup2\n    /* \"#utility.yul\":7092:7113   */\n  mstore\n    /* \"#utility.yul\":7144:7148   */\n  0x20\n    /* \"#utility.yul\":7137:7142   */\n  dup2\n    /* \"#utility.yul\":7133:7149   */\n  add\n    /* \"#utility.yul\":7182:7185   */\n  dup5\n    /* \"#utility.yul\":7173:7179   */\n  dup5\n    /* \"#utility.yul\":7168:7171   */\n  dup5\n    /* \"#utility.yul\":7164:7180   */\n  add\n    /* \"#utility.yul\":7161:7186   */\n  gt\n    /* \"#utility.yul\":7158:7270   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":7189:7268   */\n  tag_166\n  tag_63\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7158:7270   */\ntag_165:\n    /* \"#utility.yul\":7279:7331   */\n  tag_167\n    /* \"#utility.yul\":7324:7330   */\n  dup5\n    /* \"#utility.yul\":7319:7322   */\n  dup3\n    /* \"#utility.yul\":7314:7317   */\n  dup6\n    /* \"#utility.yul\":7279:7331   */\n  tag_68\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6998:7337   */\n  pop\n    /* \"#utility.yul\":6903:7337   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7357:7712   */\ntag_70:\n    /* \"#utility.yul\":7424:7429   */\n  0x00\n    /* \"#utility.yul\":7473:7476   */\n  dup3\n    /* \"#utility.yul\":7466:7470   */\n  0x1f\n    /* \"#utility.yul\":7458:7464   */\n  dup4\n    /* \"#utility.yul\":7454:7471   */\n  add\n    /* \"#utility.yul\":7450:7477   */\n  slt\n    /* \"#utility.yul\":7440:7562   */\n  tag_169\n  jumpi\n    /* \"#utility.yul\":7481:7560   */\n  tag_170\n  tag_62\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7440:7562   */\ntag_169:\n    /* \"#utility.yul\":7591:7597   */\n  dup2\n    /* \"#utility.yul\":7585:7598   */\n  mload\n    /* \"#utility.yul\":7616:7706   */\n  tag_171\n    /* \"#utility.yul\":7702:7705   */\n  dup5\n    /* \"#utility.yul\":7694:7700   */\n  dup3\n    /* \"#utility.yul\":7687:7691   */\n  0x20\n    /* \"#utility.yul\":7679:7685   */\n  dup7\n    /* \"#utility.yul\":7675:7692   */\n  add\n    /* \"#utility.yul\":7616:7706   */\n  tag_69\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7607:7706   */\n  swap2\n  pop\n    /* \"#utility.yul\":7430:7712   */\n  pop\n    /* \"#utility.yul\":7357:7712   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7718:7844   */\ntag_71:\n    /* \"#utility.yul\":7755:7762   */\n  0x00\n    /* \"#utility.yul\":7795:7837   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7788:7793   */\n  dup3\n    /* \"#utility.yul\":7784:7838   */\n  and\n    /* \"#utility.yul\":7773:7838   */\n  swap1\n  pop\n    /* \"#utility.yul\":7718:7844   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7850:7946   */\ntag_72:\n    /* \"#utility.yul\":7887:7894   */\n  0x00\n    /* \"#utility.yul\":7916:7940   */\n  tag_174\n    /* \"#utility.yul\":7934:7939   */\n  dup3\n    /* \"#utility.yul\":7916:7940   */\n  tag_71\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7905:7940   */\n  swap1\n  pop\n    /* \"#utility.yul\":7850:7946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7952:8074   */\ntag_73:\n    /* \"#utility.yul\":8025:8049   */\n  tag_176\n    /* \"#utility.yul\":8043:8048   */\n  dup2\n    /* \"#utility.yul\":8025:8049   */\n  tag_72\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8018:8023   */\n  dup2\n    /* \"#utility.yul\":8015:8050   */\n  eq\n    /* \"#utility.yul\":8005:8068   */\n  tag_177\n  jumpi\n    /* \"#utility.yul\":8064:8065   */\n  0x00\n    /* \"#utility.yul\":8061:8062   */\n  dup1\n    /* \"#utility.yul\":8054:8066   */\n  revert\n    /* \"#utility.yul\":8005:8068   */\ntag_177:\n    /* \"#utility.yul\":7952:8074   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8080:8223   */\ntag_74:\n    /* \"#utility.yul\":8137:8142   */\n  0x00\n    /* \"#utility.yul\":8168:8174   */\n  dup2\n    /* \"#utility.yul\":8162:8175   */\n  mload\n    /* \"#utility.yul\":8153:8175   */\n  swap1\n  pop\n    /* \"#utility.yul\":8184:8217   */\n  tag_179\n    /* \"#utility.yul\":8211:8216   */\n  dup2\n    /* \"#utility.yul\":8184:8217   */\n  tag_73\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8080:8223   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8229:8909   */\ntag_6:\n    /* \"#utility.yul\":8318:8324   */\n  0x00\n    /* \"#utility.yul\":8326:8332   */\n  dup1\n    /* \"#utility.yul\":8375:8377   */\n  0x40\n    /* \"#utility.yul\":8363:8372   */\n  dup4\n    /* \"#utility.yul\":8354:8361   */\n  dup6\n    /* \"#utility.yul\":8350:8373   */\n  sub\n    /* \"#utility.yul\":8346:8378   */\n  slt\n    /* \"#utility.yul\":8343:8462   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":8381:8460   */\n  tag_182\n  tag_60\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8343:8462   */\ntag_181:\n    /* \"#utility.yul\":8522:8523   */\n  0x00\n    /* \"#utility.yul\":8511:8520   */\n  dup4\n    /* \"#utility.yul\":8507:8524   */\n  add\n    /* \"#utility.yul\":8501:8525   */\n  mload\n    /* \"#utility.yul\":8552:8570   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8544:8550   */\n  dup2\n    /* \"#utility.yul\":8541:8571   */\n  gt\n    /* \"#utility.yul\":8538:8655   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":8574:8653   */\n  tag_184\n  tag_61\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8538:8655   */\ntag_183:\n    /* \"#utility.yul\":8679:8753   */\n  tag_185\n    /* \"#utility.yul\":8745:8752   */\n  dup6\n    /* \"#utility.yul\":8736:8742   */\n  dup3\n    /* \"#utility.yul\":8725:8734   */\n  dup7\n    /* \"#utility.yul\":8721:8743   */\n  add\n    /* \"#utility.yul\":8679:8753   */\n  tag_70\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":8669:8753   */\n  swap3\n  pop\n    /* \"#utility.yul\":8472:8763   */\n  pop\n    /* \"#utility.yul\":8802:8804   */\n  0x20\n    /* \"#utility.yul\":8828:8892   */\n  tag_186\n    /* \"#utility.yul\":8884:8891   */\n  dup6\n    /* \"#utility.yul\":8875:8881   */\n  dup3\n    /* \"#utility.yul\":8864:8873   */\n  dup7\n    /* \"#utility.yul\":8860:8882   */\n  add\n    /* \"#utility.yul\":8828:8892   */\n  tag_74\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8818:8892   */\n  swap2\n  pop\n    /* \"#utility.yul\":8773:8902   */\n  pop\n    /* \"#utility.yul\":8229:8909   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8915:9033   */\ntag_75:\n    /* \"#utility.yul\":9002:9026   */\n  tag_188\n    /* \"#utility.yul\":9020:9025   */\n  dup2\n    /* \"#utility.yul\":9002:9026   */\n  tag_72\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8997:9000   */\n  dup3\n    /* \"#utility.yul\":8990:9027   */\n  mstore\n    /* \"#utility.yul\":8915:9033   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9039:9261   */\ntag_27:\n    /* \"#utility.yul\":9132:9136   */\n  0x00\n    /* \"#utility.yul\":9170:9172   */\n  0x20\n    /* \"#utility.yul\":9159:9168   */\n  dup3\n    /* \"#utility.yul\":9155:9173   */\n  add\n    /* \"#utility.yul\":9147:9173   */\n  swap1\n  pop\n    /* \"#utility.yul\":9183:9254   */\n  tag_190\n    /* \"#utility.yul\":9251:9252   */\n  0x00\n    /* \"#utility.yul\":9240:9249   */\n  dup4\n    /* \"#utility.yul\":9236:9253   */\n  add\n    /* \"#utility.yul\":9227:9233   */\n  dup5\n    /* \"#utility.yul\":9183:9254   */\n  tag_75\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9039:9261   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9267:9436   */\ntag_76:\n    /* \"#utility.yul\":9351:9362   */\n  0x00\n    /* \"#utility.yul\":9385:9391   */\n  dup3\n    /* \"#utility.yul\":9380:9383   */\n  dup3\n    /* \"#utility.yul\":9373:9392   */\n  mstore\n    /* \"#utility.yul\":9425:9429   */\n  0x20\n    /* \"#utility.yul\":9420:9423   */\n  dup3\n    /* \"#utility.yul\":9416:9430   */\n  add\n    /* \"#utility.yul\":9401:9430   */\n  swap1\n  pop\n    /* \"#utility.yul\":9267:9436   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9442:9607   */\ntag_77:\n    /* \"#utility.yul\":9582:9599   */\n  0x496e76616c696420616464726573730000000000000000000000000000000000\n    /* \"#utility.yul\":9578:9579   */\n  0x00\n    /* \"#utility.yul\":9570:9576   */\n  dup3\n    /* \"#utility.yul\":9566:9580   */\n  add\n    /* \"#utility.yul\":9559:9600   */\n  mstore\n    /* \"#utility.yul\":9442:9607   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9613:9979   */\ntag_78:\n    /* \"#utility.yul\":9755:9758   */\n  0x00\n    /* \"#utility.yul\":9776:9843   */\n  tag_194\n    /* \"#utility.yul\":9840:9842   */\n  0x0f\n    /* \"#utility.yul\":9835:9838   */\n  dup4\n    /* \"#utility.yul\":9776:9843   */\n  tag_76\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9769:9843   */\n  swap2\n  pop\n    /* \"#utility.yul\":9852:9945   */\n  tag_195\n    /* \"#utility.yul\":9941:9944   */\n  dup3\n    /* \"#utility.yul\":9852:9945   */\n  tag_77\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9970:9972   */\n  0x20\n    /* \"#utility.yul\":9965:9968   */\n  dup3\n    /* \"#utility.yul\":9961:9973   */\n  add\n    /* \"#utility.yul\":9954:9973   */\n  swap1\n  pop\n    /* \"#utility.yul\":9613:9979   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9985:10404   */\ntag_39:\n    /* \"#utility.yul\":10151:10155   */\n  0x00\n    /* \"#utility.yul\":10189:10191   */\n  0x20\n    /* \"#utility.yul\":10178:10187   */\n  dup3\n    /* \"#utility.yul\":10174:10192   */\n  add\n    /* \"#utility.yul\":10166:10192   */\n  swap1\n  pop\n    /* \"#utility.yul\":10238:10247   */\n  dup2\n    /* \"#utility.yul\":10232:10236   */\n  dup2\n    /* \"#utility.yul\":10228:10248   */\n  sub\n    /* \"#utility.yul\":10224:10225   */\n  0x00\n    /* \"#utility.yul\":10213:10222   */\n  dup4\n    /* \"#utility.yul\":10209:10226   */\n  add\n    /* \"#utility.yul\":10202:10249   */\n  mstore\n    /* \"#utility.yul\":10266:10397   */\n  tag_197\n    /* \"#utility.yul\":10392:10396   */\n  dup2\n    /* \"#utility.yul\":10266:10397   */\n  tag_78\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":10258:10397   */\n  swap1\n  pop\n    /* \"#utility.yul\":9985:10404   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/EnigmaticAuraNFT.sol\":229:3221  contract EnigmaticAuraNFT is ERC721, Ownable {... */\ntag_34:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/EnigmaticAuraNFT.sol\":229:3221  contract EnigmaticAuraNFT is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7065cb48\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc8b7ec3d\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x7065cb48\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8f96a7cb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x173825d9\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x173825d9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/EnigmaticAuraNFT.sol\":1350:1708  function mint() external onlyAdditionalOwners {... */\n    tag_7:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/EnigmaticAuraNFT.sol\":2492:2690  function removeOwner(address ownerToRemove) external onlyOwner {... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/EnigmaticAuraNFT.sol\":3112:3218  function withdraw() external onlyOwner {... */\n    tag_10:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/EnigmaticAuraNFT.sol\":1920:2034  function setBaseURI(string memory baseTokenURI) external onlyOwner {... */\n    tag_12:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EnigmaticAuraNFT.sol\":2071:2174  function addOwner(address newOwner) external onlyOwner {... */\n    tag_14:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EnigmaticAuraNFT.sol\":1757:1874  function isTokenMinted(uint256 tokenId) external view returns (bool) {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_20:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_21:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EnigmaticAuraNFT.sol\":2761:2886  function isAdditionalOwner(address account) external view returns (bool) {... */\n    tag_23:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_24:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_117\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_118\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_123\n      jump\t// in\n    tag_124:\n      dup1\n      iszero\n      tag_125\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_126\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_125)\n    tag_126:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_127:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_127\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_129:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EnigmaticAuraNFT.sol\":1350:1708  function mint() external onlyAdditionalOwners {... */\n    tag_50:\n        /* \"contracts/EnigmaticAuraNFT.sol\":983:1000  _additionalOwners */\n      0x0d\n        /* \"contracts/EnigmaticAuraNFT.sol\":983:1012  _additionalOwners[msg.sender] */\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":1001:1011  msg.sender */\n      caller\n        /* \"contracts/EnigmaticAuraNFT.sol\":983:1012  _additionalOwners[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EnigmaticAuraNFT.sol\":983:1037  _additionalOwners[msg.sender] || msg.sender == owner() */\n      dup1\n      tag_139\n      jumpi\n      pop\n        /* \"contracts/EnigmaticAuraNFT.sol\":1030:1037  owner() */\n      tag_140\n        /* \"contracts/EnigmaticAuraNFT.sol\":1030:1035  owner */\n      tag_83\n        /* \"contracts/EnigmaticAuraNFT.sol\":1030:1037  owner() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/EnigmaticAuraNFT.sol\":1016:1037  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EnigmaticAuraNFT.sol\":1016:1026  msg.sender */\n      caller\n        /* \"contracts/EnigmaticAuraNFT.sol\":1016:1037  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/EnigmaticAuraNFT.sol\":983:1037  _additionalOwners[msg.sender] || msg.sender == owner() */\n    tag_139:\n        /* \"contracts/EnigmaticAuraNFT.sol\":975:1065  require(_additionalOwners[msg.sender] || msg.sender == owner(), \"Not an additional owner\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/EnigmaticAuraNFT.sol\":1443:1453  _maxSupply */\n      sload(0x0a)\n        /* \"contracts/EnigmaticAuraNFT.sol\":1415:1440  _tokenIdCounter.current() */\n      tag_145\n        /* \"contracts/EnigmaticAuraNFT.sol\":1415:1430  _tokenIdCounter */\n      0x07\n        /* \"contracts/EnigmaticAuraNFT.sol\":1415:1438  _tokenIdCounter.current */\n      tag_146\n        /* \"contracts/EnigmaticAuraNFT.sol\":1415:1440  _tokenIdCounter.current() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/EnigmaticAuraNFT.sol\":1415:1453  _tokenIdCounter.current() < _maxSupply */\n      lt\n        /* \"contracts/EnigmaticAuraNFT.sol\":1407:1480  require(_tokenIdCounter.current() < _maxSupply, \"Maximum supply reached\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/EnigmaticAuraNFT.sol\":1491:1506  uint256 tokenId */\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":1537:1538  1 */\n      0x01\n        /* \"contracts/EnigmaticAuraNFT.sol\":1509:1534  _tokenIdCounter.current() */\n      tag_150\n        /* \"contracts/EnigmaticAuraNFT.sol\":1509:1524  _tokenIdCounter */\n      0x07\n        /* \"contracts/EnigmaticAuraNFT.sol\":1509:1532  _tokenIdCounter.current */\n      tag_146\n        /* \"contracts/EnigmaticAuraNFT.sol\":1509:1534  _tokenIdCounter.current() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/EnigmaticAuraNFT.sol\":1509:1538  _tokenIdCounter.current() + 1 */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"contracts/EnigmaticAuraNFT.sol\":1491:1538  uint256 tokenId = _tokenIdCounter.current() + 1 */\n      swap1\n      pop\n        /* \"contracts/EnigmaticAuraNFT.sol\":1549:1579  _safeMint(msg.sender, tokenId) */\n      tag_153\n        /* \"contracts/EnigmaticAuraNFT.sol\":1559:1569  msg.sender */\n      caller\n        /* \"contracts/EnigmaticAuraNFT.sol\":1571:1578  tokenId */\n      dup3\n        /* \"contracts/EnigmaticAuraNFT.sol\":1549:1558  _safeMint */\n      tag_154\n        /* \"contracts/EnigmaticAuraNFT.sol\":1549:1579  _safeMint(msg.sender, tokenId) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/EnigmaticAuraNFT.sol\":1615:1619  true */\n      0x01\n        /* \"contracts/EnigmaticAuraNFT.sol\":1590:1603  _mintedTokens */\n      0x0c\n        /* \"contracts/EnigmaticAuraNFT.sol\":1590:1612  _mintedTokens[tokenId] */\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":1604:1611  tokenId */\n      dup4\n        /* \"contracts/EnigmaticAuraNFT.sol\":1590:1612  _mintedTokens[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":1590:1619  _mintedTokens[tokenId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EnigmaticAuraNFT.sol\":1630:1657  _tokenIdCounter.increment() */\n      tag_155\n        /* \"contracts/EnigmaticAuraNFT.sol\":1630:1645  _tokenIdCounter */\n      0x07\n        /* \"contracts/EnigmaticAuraNFT.sol\":1630:1655  _tokenIdCounter.increment */\n      tag_156\n        /* \"contracts/EnigmaticAuraNFT.sol\":1630:1657  _tokenIdCounter.increment() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/EnigmaticAuraNFT.sol\":1680:1690  msg.sender */\n      caller\n        /* \"contracts/EnigmaticAuraNFT.sol\":1673:1700  Minted(msg.sender, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe\n        /* \"contracts/EnigmaticAuraNFT.sol\":1692:1699  tokenId */\n      dup3\n        /* \"contracts/EnigmaticAuraNFT.sol\":1673:1700  Minted(msg.sender, tokenId) */\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/EnigmaticAuraNFT.sol\":1396:1708  {... */\n      pop\n        /* \"contracts/EnigmaticAuraNFT.sol\":1350:1708  function mint() external onlyAdditionalOwners {... */\n      jump\t// out\n        /* \"contracts/EnigmaticAuraNFT.sol\":2492:2690  function removeOwner(address ownerToRemove) external onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"contracts/EnigmaticAuraNFT.sol\":2591:2598  owner() */\n      tag_162\n        /* \"contracts/EnigmaticAuraNFT.sol\":2591:2596  owner */\n      tag_83\n        /* \"contracts/EnigmaticAuraNFT.sol\":2591:2598  owner() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/EnigmaticAuraNFT.sol\":2574:2598  ownerToRemove != owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EnigmaticAuraNFT.sol\":2574:2587  ownerToRemove */\n      dup2\n        /* \"contracts/EnigmaticAuraNFT.sol\":2574:2598  ownerToRemove != owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/EnigmaticAuraNFT.sol\":2566:2631  require(ownerToRemove != owner(), \"Cannot remove contract owner\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"contracts/EnigmaticAuraNFT.sol\":2677:2682  false */\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":2642:2659  _additionalOwners */\n      0x0d\n        /* \"contracts/EnigmaticAuraNFT.sol\":2642:2674  _additionalOwners[ownerToRemove] */\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":2660:2673  ownerToRemove */\n      dup4\n        /* \"contracts/EnigmaticAuraNFT.sol\":2642:2674  _additionalOwners[ownerToRemove] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":2642:2682  _additionalOwners[ownerToRemove] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EnigmaticAuraNFT.sol\":2492:2690  function removeOwner(address ownerToRemove) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EnigmaticAuraNFT.sol\":3112:3218  function withdraw() external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/EnigmaticAuraNFT.sol\":3170:3177  owner() */\n      tag_178\n        /* \"contracts/EnigmaticAuraNFT.sol\":3170:3175  owner */\n      tag_83\n        /* \"contracts/EnigmaticAuraNFT.sol\":3170:3177  owner() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/EnigmaticAuraNFT.sol\":3162:3187  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EnigmaticAuraNFT.sol\":3162:3210  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/EnigmaticAuraNFT.sol\":3188:3209  address(this).balance */\n      selfbalance\n        /* \"contracts/EnigmaticAuraNFT.sol\":3162:3210  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n        /* \"contracts/EnigmaticAuraNFT.sol\":3112:3218  function withdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EnigmaticAuraNFT.sol\":1920:2034  function setBaseURI(string memory baseTokenURI) external onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/EnigmaticAuraNFT.sol\":2014:2026  baseTokenURI */\n      dup1\n        /* \"contracts/EnigmaticAuraNFT.sol\":1998:2011  _baseTokenURI */\n      0x0b\n        /* \"contracts/EnigmaticAuraNFT.sol\":1998:2026  _baseTokenURI = baseTokenURI */\n      swap1\n      dup2\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      pop\n        /* \"contracts/EnigmaticAuraNFT.sol\":1920:2034  function setBaseURI(string memory baseTokenURI) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/EnigmaticAuraNFT.sol\":2071:2174  function addOwner(address newOwner) external onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/EnigmaticAuraNFT.sol\":2137:2166  _addAdditionalOwner(newOwner) */\n      tag_193\n        /* \"contracts/EnigmaticAuraNFT.sol\":2157:2165  newOwner */\n      dup2\n        /* \"contracts/EnigmaticAuraNFT.sol\":2137:2156  _addAdditionalOwner */\n      tag_194\n        /* \"contracts/EnigmaticAuraNFT.sol\":2137:2166  _addAdditionalOwner(newOwner) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/EnigmaticAuraNFT.sol\":2071:2174  function addOwner(address newOwner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EnigmaticAuraNFT.sol\":1757:1874  function isTokenMinted(uint256 tokenId) external view returns (bool) {... */\n    tag_87:\n        /* \"contracts/EnigmaticAuraNFT.sol\":1820:1824  bool */\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":1844:1857  _mintedTokens */\n      0x0c\n        /* \"contracts/EnigmaticAuraNFT.sol\":1844:1866  _mintedTokens[tokenId] */\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":1858:1865  tokenId */\n      dup4\n        /* \"contracts/EnigmaticAuraNFT.sol\":1844:1866  _mintedTokens[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EnigmaticAuraNFT.sol\":1837:1866  return _mintedTokens[tokenId] */\n      swap1\n      pop\n        /* \"contracts/EnigmaticAuraNFT.sol\":1757:1874  function isTokenMinted(uint256 tokenId) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_123\n      jump\t// in\n    tag_206:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_207\n      swap1\n      tag_123\n      jump\t// in\n    tag_207:\n      dup1\n      iszero\n      tag_208\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_209\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_208)\n    tag_209:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_210:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_210\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_58\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_220:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_223\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_224)\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_227\n      swap3\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/EnigmaticAuraNFT.sol\":2761:2886  function isAdditionalOwner(address account) external view returns (bool) {... */\n    tag_106:\n        /* \"contracts/EnigmaticAuraNFT.sol\":2828:2832  bool */\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":2852:2869  _additionalOwners */\n      0x0d\n        /* \"contracts/EnigmaticAuraNFT.sol\":2852:2878  _additionalOwners[account] */\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":2870:2877  account */\n      dup4\n        /* \"contracts/EnigmaticAuraNFT.sol\":2852:2878  _additionalOwners[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EnigmaticAuraNFT.sol\":2845:2878  return _additionalOwners[account] */\n      swap1\n      pop\n        /* \"contracts/EnigmaticAuraNFT.sol\":2761:2886  function isAdditionalOwner(address account) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EnigmaticAuraNFT.sol\":2232:2402  function _addAdditionalOwner(address newOwner) internal {... */\n    tag_194:\n        /* \"contracts/EnigmaticAuraNFT.sol\":2327:2328  0 */\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":2307:2329  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EnigmaticAuraNFT.sol\":2307:2315  newOwner */\n      dup2\n        /* \"contracts/EnigmaticAuraNFT.sol\":2307:2329  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/EnigmaticAuraNFT.sol\":2299:2349  require(newOwner != address(0), \"Invalid address\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"contracts/EnigmaticAuraNFT.sol\":2390:2394  true */\n      0x01\n        /* \"contracts/EnigmaticAuraNFT.sol\":2360:2377  _additionalOwners */\n      0x0d\n        /* \"contracts/EnigmaticAuraNFT.sol\":2360:2387  _additionalOwners[newOwner] */\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":2378:2386  newOwner */\n      dup4\n        /* \"contracts/EnigmaticAuraNFT.sol\":2360:2387  _additionalOwners[newOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/EnigmaticAuraNFT.sol\":2360:2394  _additionalOwners[newOwner] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EnigmaticAuraNFT.sol\":2232:2402  function _addAdditionalOwner(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_275\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_281\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_282\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      0x01\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_284\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_289\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_288)\n    tag_289:\n      0x60\n      swap2\n      pop\n    tag_288:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EnigmaticAuraNFT.sol\":2945:3051  function _baseURI() internal view override returns (string memory) {... */\n    tag_222:\n        /* \"contracts/EnigmaticAuraNFT.sol\":2997:3010  string memory */\n      0x60\n        /* \"contracts/EnigmaticAuraNFT.sol\":3030:3043  _baseTokenURI */\n      0x0b\n        /* \"contracts/EnigmaticAuraNFT.sol\":3023:3043  return _baseTokenURI */\n      dup1\n      sload\n      tag_297\n      swap1\n      tag_123\n      jump\t// in\n    tag_297:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_298\n      swap1\n      tag_123\n      jump\t// in\n    tag_298:\n      dup1\n      iszero\n      tag_299\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_300\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_299)\n    tag_300:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_301:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_301\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_299:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/EnigmaticAuraNFT.sol\":2945:3051  function _baseURI() internal view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_303\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_304\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_305\n      jumpi\n      tag_306\n      tag_307\n      jump\t// in\n    tag_306:\n    tag_305:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_308\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_308:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_311\n      jumpi\n      tag_312\n      tag_313\n      jump\t// in\n    tag_312:\n    tag_311:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_309\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_317\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_319\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_320\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_321\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_322\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap3\n      swap2\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_341\n      jumpi\n      tag_342\n      tag_313\n      jump\t// in\n    tag_342:\n    tag_341:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_344\n      jumpi\n      tag_345\n      tag_313\n      jump\t// in\n    tag_345:\n    tag_344:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_347\n      jumpi\n      tag_348\n      tag_313\n      jump\t// in\n    tag_348:\n    tag_347:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_350\n      jumpi\n      tag_351\n      tag_313\n      jump\t// in\n    tag_351:\n    tag_350:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_353\n      jumpi\n      tag_354\n      tag_313\n      jump\t// in\n    tag_354:\n    tag_353:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_356\n      jumpi\n      tag_357\n      tag_313\n      jump\t// in\n    tag_357:\n    tag_356:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_358\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_362\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_366\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_367\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_368\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_369\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_370\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_369:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_371:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_372:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_373:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_374:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_375:\n        /* \"#utility.yul\":561:584   */\n      tag_443\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_374\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_444:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_376:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_446\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_375\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_449\n      tag_372\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":833:952   */\n    tag_448:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_450\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_376\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_377:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_378:\n        /* \"#utility.yul\":1268:1289   */\n      tag_453\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_377\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_455\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_378\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_379:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_380:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_381:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_459:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_459)\n    tag_461:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_382:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_383:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_464\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_379\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":2329:2400   */\n      tag_465\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_380\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_466\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_381\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":2499:2528   */\n      tag_467\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_382\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_38:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_469\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_383\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_384:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_385:\n        /* \"#utility.yul\":3016:3040   */\n      tag_472\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_384\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_473:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_386:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_475\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_385\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_41:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_478\n      tag_372\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":3292:3411   */\n    tag_477:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_479\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_386\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_387:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_388:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_482\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_387\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_389:\n        /* \"#utility.yul\":3872:3896   */\n      tag_484\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_388\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_44:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_486\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_389\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_390:\n        /* \"#utility.yul\":4210:4234   */\n      tag_488\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_388\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_489:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_391:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_491\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_390\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_47:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_494\n      tag_372\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":4503:4622   */\n    tag_493:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_495\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_391\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_496\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_386\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5219   */\n    tag_53:\n        /* \"#utility.yul\":4949:4955   */\n      0x00\n        /* \"#utility.yul\":4998:5000   */\n      0x20\n        /* \"#utility.yul\":4986:4995   */\n      dup3\n        /* \"#utility.yul\":4977:4984   */\n      dup5\n        /* \"#utility.yul\":4973:4996   */\n      sub\n        /* \"#utility.yul\":4969:5001   */\n      slt\n        /* \"#utility.yul\":4966:5085   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":5004:5083   */\n      tag_499\n      tag_372\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":4966:5085   */\n    tag_498:\n        /* \"#utility.yul\":5124:5125   */\n      0x00\n        /* \"#utility.yul\":5149:5202   */\n      tag_500\n        /* \"#utility.yul\":5194:5201   */\n      dup5\n        /* \"#utility.yul\":5185:5191   */\n      dup3\n        /* \"#utility.yul\":5174:5183   */\n      dup6\n        /* \"#utility.yul\":5170:5192   */\n      add\n        /* \"#utility.yul\":5149:5202   */\n      tag_391\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":5139:5202   */\n      swap2\n      pop\n        /* \"#utility.yul\":5095:5212   */\n      pop\n        /* \"#utility.yul\":4890:5219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5225:5844   */\n    tag_57:\n        /* \"#utility.yul\":5302:5308   */\n      0x00\n        /* \"#utility.yul\":5310:5316   */\n      dup1\n        /* \"#utility.yul\":5318:5324   */\n      0x00\n        /* \"#utility.yul\":5367:5369   */\n      0x60\n        /* \"#utility.yul\":5355:5364   */\n      dup5\n        /* \"#utility.yul\":5346:5353   */\n      dup7\n        /* \"#utility.yul\":5342:5365   */\n      sub\n        /* \"#utility.yul\":5338:5370   */\n      slt\n        /* \"#utility.yul\":5335:5454   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":5373:5452   */\n      tag_503\n      tag_372\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":5335:5454   */\n    tag_502:\n        /* \"#utility.yul\":5493:5494   */\n      0x00\n        /* \"#utility.yul\":5518:5571   */\n      tag_504\n        /* \"#utility.yul\":5563:5570   */\n      dup7\n        /* \"#utility.yul\":5554:5560   */\n      dup3\n        /* \"#utility.yul\":5543:5552   */\n      dup8\n        /* \"#utility.yul\":5539:5561   */\n      add\n        /* \"#utility.yul\":5518:5571   */\n      tag_391\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":5508:5571   */\n      swap4\n      pop\n        /* \"#utility.yul\":5464:5581   */\n      pop\n        /* \"#utility.yul\":5620:5622   */\n      0x20\n        /* \"#utility.yul\":5646:5699   */\n      tag_505\n        /* \"#utility.yul\":5691:5698   */\n      dup7\n        /* \"#utility.yul\":5682:5688   */\n      dup3\n        /* \"#utility.yul\":5671:5680   */\n      dup8\n        /* \"#utility.yul\":5667:5689   */\n      add\n        /* \"#utility.yul\":5646:5699   */\n      tag_391\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":5636:5699   */\n      swap3\n      pop\n        /* \"#utility.yul\":5591:5709   */\n      pop\n        /* \"#utility.yul\":5748:5750   */\n      0x40\n        /* \"#utility.yul\":5774:5827   */\n      tag_506\n        /* \"#utility.yul\":5819:5826   */\n      dup7\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup8\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_386\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5719:5837   */\n      pop\n        /* \"#utility.yul\":5225:5844   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5850:5967   */\n    tag_392:\n        /* \"#utility.yul\":5959:5960   */\n      0x00\n        /* \"#utility.yul\":5956:5957   */\n      dup1\n        /* \"#utility.yul\":5949:5961   */\n      revert\n        /* \"#utility.yul\":5973:6090   */\n    tag_393:\n        /* \"#utility.yul\":6082:6083   */\n      0x00\n        /* \"#utility.yul\":6079:6080   */\n      dup1\n        /* \"#utility.yul\":6072:6084   */\n      revert\n        /* \"#utility.yul\":6096:6276   */\n    tag_307:\n        /* \"#utility.yul\":6144:6221   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6141:6142   */\n      0x00\n        /* \"#utility.yul\":6134:6222   */\n      mstore\n        /* \"#utility.yul\":6241:6245   */\n      0x41\n        /* \"#utility.yul\":6238:6239   */\n      0x04\n        /* \"#utility.yul\":6231:6246   */\n      mstore\n        /* \"#utility.yul\":6265:6269   */\n      0x24\n        /* \"#utility.yul\":6262:6263   */\n      0x00\n        /* \"#utility.yul\":6255:6270   */\n      revert\n        /* \"#utility.yul\":6282:6563   */\n    tag_394:\n        /* \"#utility.yul\":6365:6392   */\n      tag_511\n        /* \"#utility.yul\":6387:6391   */\n      dup3\n        /* \"#utility.yul\":6365:6392   */\n      tag_382\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":6357:6363   */\n      dup2\n        /* \"#utility.yul\":6353:6393   */\n      add\n        /* \"#utility.yul\":6495:6501   */\n      dup2\n        /* \"#utility.yul\":6483:6493   */\n      dup2\n        /* \"#utility.yul\":6480:6502   */\n      lt\n        /* \"#utility.yul\":6459:6477   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6447:6457   */\n      dup3\n        /* \"#utility.yul\":6444:6478   */\n      gt\n        /* \"#utility.yul\":6441:6503   */\n      or\n        /* \"#utility.yul\":6438:6526   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":6506:6524   */\n      tag_513\n      tag_307\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":6438:6526   */\n    tag_512:\n        /* \"#utility.yul\":6546:6556   */\n      dup1\n        /* \"#utility.yul\":6542:6544   */\n      0x40\n        /* \"#utility.yul\":6535:6557   */\n      mstore\n        /* \"#utility.yul\":6325:6563   */\n      pop\n        /* \"#utility.yul\":6282:6563   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6569:6698   */\n    tag_395:\n        /* \"#utility.yul\":6603:6609   */\n      0x00\n        /* \"#utility.yul\":6630:6650   */\n      tag_515\n      tag_371\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":6620:6650   */\n      swap1\n      pop\n        /* \"#utility.yul\":6659:6692   */\n      tag_516\n        /* \"#utility.yul\":6687:6691   */\n      dup3\n        /* \"#utility.yul\":6679:6685   */\n      dup3\n        /* \"#utility.yul\":6659:6692   */\n      tag_394\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":6569:6698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6704:7012   */\n    tag_396:\n        /* \"#utility.yul\":6766:6770   */\n      0x00\n        /* \"#utility.yul\":6856:6874   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6848:6854   */\n      dup3\n        /* \"#utility.yul\":6845:6875   */\n      gt\n        /* \"#utility.yul\":6842:6898   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":6878:6896   */\n      tag_519\n      tag_307\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":6842:6898   */\n    tag_518:\n        /* \"#utility.yul\":6916:6945   */\n      tag_520\n        /* \"#utility.yul\":6938:6944   */\n      dup3\n        /* \"#utility.yul\":6916:6945   */\n      tag_382\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":6908:6945   */\n      swap1\n      pop\n        /* \"#utility.yul\":7000:7004   */\n      0x20\n        /* \"#utility.yul\":6994:6998   */\n      dup2\n        /* \"#utility.yul\":6990:7005   */\n      add\n        /* \"#utility.yul\":6982:7005   */\n      swap1\n      pop\n        /* \"#utility.yul\":6704:7012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7018:7164   */\n    tag_397:\n        /* \"#utility.yul\":7115:7121   */\n      dup3\n        /* \"#utility.yul\":7110:7113   */\n      dup2\n        /* \"#utility.yul\":7105:7108   */\n      dup4\n        /* \"#utility.yul\":7092:7122   */\n      calldatacopy\n        /* \"#utility.yul\":7156:7157   */\n      0x00\n        /* \"#utility.yul\":7147:7153   */\n      dup4\n        /* \"#utility.yul\":7142:7145   */\n      dup4\n        /* \"#utility.yul\":7138:7154   */\n      add\n        /* \"#utility.yul\":7131:7158   */\n      mstore\n        /* \"#utility.yul\":7018:7164   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7170:7595   */\n    tag_398:\n        /* \"#utility.yul\":7248:7253   */\n      0x00\n        /* \"#utility.yul\":7273:7339   */\n      tag_523\n        /* \"#utility.yul\":7289:7338   */\n      tag_524\n        /* \"#utility.yul\":7331:7337   */\n      dup5\n        /* \"#utility.yul\":7289:7338   */\n      tag_396\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":7273:7339   */\n      tag_395\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":7264:7339   */\n      swap1\n      pop\n        /* \"#utility.yul\":7362:7368   */\n      dup3\n        /* \"#utility.yul\":7355:7360   */\n      dup2\n        /* \"#utility.yul\":7348:7369   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x20\n        /* \"#utility.yul\":7393:7398   */\n      dup2\n        /* \"#utility.yul\":7389:7405   */\n      add\n        /* \"#utility.yul\":7438:7441   */\n      dup5\n        /* \"#utility.yul\":7429:7435   */\n      dup5\n        /* \"#utility.yul\":7424:7427   */\n      dup5\n        /* \"#utility.yul\":7420:7436   */\n      add\n        /* \"#utility.yul\":7417:7442   */\n      gt\n        /* \"#utility.yul\":7414:7526   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":7445:7524   */\n      tag_526\n      tag_393\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":7414:7526   */\n    tag_525:\n        /* \"#utility.yul\":7535:7589   */\n      tag_527\n        /* \"#utility.yul\":7582:7588   */\n      dup5\n        /* \"#utility.yul\":7577:7580   */\n      dup3\n        /* \"#utility.yul\":7572:7575   */\n      dup6\n        /* \"#utility.yul\":7535:7589   */\n      tag_397\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":7254:7595   */\n      pop\n        /* \"#utility.yul\":7170:7595   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7615:7955   */\n    tag_399:\n        /* \"#utility.yul\":7671:7676   */\n      0x00\n        /* \"#utility.yul\":7720:7723   */\n      dup3\n        /* \"#utility.yul\":7713:7717   */\n      0x1f\n        /* \"#utility.yul\":7705:7711   */\n      dup4\n        /* \"#utility.yul\":7701:7718   */\n      add\n        /* \"#utility.yul\":7697:7724   */\n      slt\n        /* \"#utility.yul\":7687:7809   */\n      tag_529\n      jumpi\n        /* \"#utility.yul\":7728:7807   */\n      tag_530\n      tag_392\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":7687:7809   */\n    tag_529:\n        /* \"#utility.yul\":7845:7851   */\n      dup2\n        /* \"#utility.yul\":7832:7852   */\n      calldataload\n        /* \"#utility.yul\":7870:7949   */\n      tag_531\n        /* \"#utility.yul\":7945:7948   */\n      dup5\n        /* \"#utility.yul\":7937:7943   */\n      dup3\n        /* \"#utility.yul\":7930:7934   */\n      0x20\n        /* \"#utility.yul\":7922:7928   */\n      dup7\n        /* \"#utility.yul\":7918:7935   */\n      add\n        /* \"#utility.yul\":7870:7949   */\n      tag_398\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":7861:7949   */\n      swap2\n      pop\n        /* \"#utility.yul\":7677:7955   */\n      pop\n        /* \"#utility.yul\":7615:7955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7961:8470   */\n    tag_66:\n        /* \"#utility.yul\":8030:8036   */\n      0x00\n        /* \"#utility.yul\":8079:8081   */\n      0x20\n        /* \"#utility.yul\":8067:8076   */\n      dup3\n        /* \"#utility.yul\":8058:8065   */\n      dup5\n        /* \"#utility.yul\":8054:8077   */\n      sub\n        /* \"#utility.yul\":8050:8082   */\n      slt\n        /* \"#utility.yul\":8047:8166   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":8085:8164   */\n      tag_534\n      tag_372\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":8047:8166   */\n    tag_533:\n        /* \"#utility.yul\":8233:8234   */\n      0x00\n        /* \"#utility.yul\":8222:8231   */\n      dup3\n        /* \"#utility.yul\":8218:8235   */\n      add\n        /* \"#utility.yul\":8205:8236   */\n      calldataload\n        /* \"#utility.yul\":8263:8281   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8255:8261   */\n      dup2\n        /* \"#utility.yul\":8252:8282   */\n      gt\n        /* \"#utility.yul\":8249:8366   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":8285:8364   */\n      tag_536\n      tag_373\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":8249:8366   */\n    tag_535:\n        /* \"#utility.yul\":8390:8453   */\n      tag_537\n        /* \"#utility.yul\":8445:8452   */\n      dup5\n        /* \"#utility.yul\":8436:8442   */\n      dup3\n        /* \"#utility.yul\":8425:8434   */\n      dup6\n        /* \"#utility.yul\":8421:8443   */\n      add\n        /* \"#utility.yul\":8390:8453   */\n      tag_399\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":8380:8453   */\n      swap2\n      pop\n        /* \"#utility.yul\":8176:8463   */\n      pop\n        /* \"#utility.yul\":7961:8470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8476:8594   */\n    tag_400:\n        /* \"#utility.yul\":8563:8587   */\n      tag_539\n        /* \"#utility.yul\":8581:8586   */\n      dup2\n        /* \"#utility.yul\":8563:8587   */\n      tag_384\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":8558:8561   */\n      dup3\n        /* \"#utility.yul\":8551:8588   */\n      mstore\n        /* \"#utility.yul\":8476:8594   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8600:8822   */\n    tag_79:\n        /* \"#utility.yul\":8693:8697   */\n      0x00\n        /* \"#utility.yul\":8731:8733   */\n      0x20\n        /* \"#utility.yul\":8720:8729   */\n      dup3\n        /* \"#utility.yul\":8716:8734   */\n      add\n        /* \"#utility.yul\":8708:8734   */\n      swap1\n      pop\n        /* \"#utility.yul\":8744:8815   */\n      tag_541\n        /* \"#utility.yul\":8812:8813   */\n      0x00\n        /* \"#utility.yul\":8801:8810   */\n      dup4\n        /* \"#utility.yul\":8797:8814   */\n      add\n        /* \"#utility.yul\":8788:8794   */\n      dup5\n        /* \"#utility.yul\":8744:8815   */\n      tag_400\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":8600:8822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8828:8944   */\n    tag_401:\n        /* \"#utility.yul\":8898:8919   */\n      tag_543\n        /* \"#utility.yul\":8913:8918   */\n      dup2\n        /* \"#utility.yul\":8898:8919   */\n      tag_377\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":8891:8896   */\n      dup2\n        /* \"#utility.yul\":8888:8920   */\n      eq\n        /* \"#utility.yul\":8878:8938   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":8934:8935   */\n      0x00\n        /* \"#utility.yul\":8931:8932   */\n      dup1\n        /* \"#utility.yul\":8924:8936   */\n      revert\n        /* \"#utility.yul\":8878:8938   */\n    tag_544:\n        /* \"#utility.yul\":8828:8944   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8950:9083   */\n    tag_402:\n        /* \"#utility.yul\":8993:8998   */\n      0x00\n        /* \"#utility.yul\":9031:9037   */\n      dup2\n        /* \"#utility.yul\":9018:9038   */\n      calldataload\n        /* \"#utility.yul\":9009:9038   */\n      swap1\n      pop\n        /* \"#utility.yul\":9047:9077   */\n      tag_546\n        /* \"#utility.yul\":9071:9076   */\n      dup2\n        /* \"#utility.yul\":9047:9077   */\n      tag_401\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":8950:9083   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9089:9557   */\n    tag_94:\n        /* \"#utility.yul\":9154:9160   */\n      0x00\n        /* \"#utility.yul\":9162:9168   */\n      dup1\n        /* \"#utility.yul\":9211:9213   */\n      0x40\n        /* \"#utility.yul\":9199:9208   */\n      dup4\n        /* \"#utility.yul\":9190:9197   */\n      dup6\n        /* \"#utility.yul\":9186:9209   */\n      sub\n        /* \"#utility.yul\":9182:9214   */\n      slt\n        /* \"#utility.yul\":9179:9298   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_549\n      tag_372\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":9179:9298   */\n    tag_548:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_550\n        /* \"#utility.yul\":9407:9414   */\n      dup6\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup7\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_391\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":9352:9415   */\n      swap3\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9540   */\n      tag_551\n        /* \"#utility.yul\":9532:9539   */\n      dup6\n        /* \"#utility.yul\":9523:9529   */\n      dup3\n        /* \"#utility.yul\":9512:9521   */\n      dup7\n        /* \"#utility.yul\":9508:9530   */\n      add\n        /* \"#utility.yul\":9490:9540   */\n      tag_402\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":9480:9540   */\n      swap2\n      pop\n        /* \"#utility.yul\":9435:9550   */\n      pop\n        /* \"#utility.yul\":9089:9557   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9563:9870   */\n    tag_403:\n        /* \"#utility.yul\":9624:9628   */\n      0x00\n        /* \"#utility.yul\":9714:9732   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9706:9712   */\n      dup3\n        /* \"#utility.yul\":9703:9733   */\n      gt\n        /* \"#utility.yul\":9700:9756   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":9736:9754   */\n      tag_554\n      tag_307\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":9700:9756   */\n    tag_553:\n        /* \"#utility.yul\":9774:9803   */\n      tag_555\n        /* \"#utility.yul\":9796:9802   */\n      dup3\n        /* \"#utility.yul\":9774:9803   */\n      tag_382\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":9766:9803   */\n      swap1\n      pop\n        /* \"#utility.yul\":9858:9862   */\n      0x20\n        /* \"#utility.yul\":9852:9856   */\n      dup2\n        /* \"#utility.yul\":9848:9863   */\n      add\n        /* \"#utility.yul\":9840:9863   */\n      swap1\n      pop\n        /* \"#utility.yul\":9563:9870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9876:10299   */\n    tag_404:\n        /* \"#utility.yul\":9953:9958   */\n      0x00\n        /* \"#utility.yul\":9978:10043   */\n      tag_557\n        /* \"#utility.yul\":9994:10042   */\n      tag_558\n        /* \"#utility.yul\":10035:10041   */\n      dup5\n        /* \"#utility.yul\":9994:10042   */\n      tag_403\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":9978:10043   */\n      tag_395\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":9969:10043   */\n      swap1\n      pop\n        /* \"#utility.yul\":10066:10072   */\n      dup3\n        /* \"#utility.yul\":10059:10064   */\n      dup2\n        /* \"#utility.yul\":10052:10073   */\n      mstore\n        /* \"#utility.yul\":10104:10108   */\n      0x20\n        /* \"#utility.yul\":10097:10102   */\n      dup2\n        /* \"#utility.yul\":10093:10109   */\n      add\n        /* \"#utility.yul\":10142:10145   */\n      dup5\n        /* \"#utility.yul\":10133:10139   */\n      dup5\n        /* \"#utility.yul\":10128:10131   */\n      dup5\n        /* \"#utility.yul\":10124:10140   */\n      add\n        /* \"#utility.yul\":10121:10146   */\n      gt\n        /* \"#utility.yul\":10118:10230   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":10149:10228   */\n      tag_560\n      tag_393\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":10118:10230   */\n    tag_559:\n        /* \"#utility.yul\":10239:10293   */\n      tag_561\n        /* \"#utility.yul\":10286:10292   */\n      dup5\n        /* \"#utility.yul\":10281:10284   */\n      dup3\n        /* \"#utility.yul\":10276:10279   */\n      dup6\n        /* \"#utility.yul\":10239:10293   */\n      tag_397\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":9959:10299   */\n      pop\n        /* \"#utility.yul\":9876:10299   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10318:10656   */\n    tag_405:\n        /* \"#utility.yul\":10373:10378   */\n      0x00\n        /* \"#utility.yul\":10422:10425   */\n      dup3\n        /* \"#utility.yul\":10415:10419   */\n      0x1f\n        /* \"#utility.yul\":10407:10413   */\n      dup4\n        /* \"#utility.yul\":10403:10420   */\n      add\n        /* \"#utility.yul\":10399:10426   */\n      slt\n        /* \"#utility.yul\":10389:10511   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":10430:10509   */\n      tag_564\n      tag_392\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":10389:10511   */\n    tag_563:\n        /* \"#utility.yul\":10547:10553   */\n      dup2\n        /* \"#utility.yul\":10534:10554   */\n      calldataload\n        /* \"#utility.yul\":10572:10650   */\n      tag_565\n        /* \"#utility.yul\":10646:10649   */\n      dup5\n        /* \"#utility.yul\":10638:10644   */\n      dup3\n        /* \"#utility.yul\":10631:10635   */\n      0x20\n        /* \"#utility.yul\":10623:10629   */\n      dup7\n        /* \"#utility.yul\":10619:10636   */\n      add\n        /* \"#utility.yul\":10572:10650   */\n      tag_404\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":10563:10650   */\n      swap2\n      pop\n        /* \"#utility.yul\":10379:10656   */\n      pop\n        /* \"#utility.yul\":10318:10656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10662:11605   */\n    tag_98:\n        /* \"#utility.yul\":10757:10763   */\n      0x00\n        /* \"#utility.yul\":10765:10771   */\n      dup1\n        /* \"#utility.yul\":10773:10779   */\n      0x00\n        /* \"#utility.yul\":10781:10787   */\n      dup1\n        /* \"#utility.yul\":10830:10833   */\n      0x80\n        /* \"#utility.yul\":10818:10827   */\n      dup6\n        /* \"#utility.yul\":10809:10816   */\n      dup8\n        /* \"#utility.yul\":10805:10828   */\n      sub\n        /* \"#utility.yul\":10801:10834   */\n      slt\n        /* \"#utility.yul\":10798:10918   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":10837:10916   */\n      tag_568\n      tag_372\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":10798:10918   */\n    tag_567:\n        /* \"#utility.yul\":10957:10958   */\n      0x00\n        /* \"#utility.yul\":10982:11035   */\n      tag_569\n        /* \"#utility.yul\":11027:11034   */\n      dup8\n        /* \"#utility.yul\":11018:11024   */\n      dup3\n        /* \"#utility.yul\":11007:11016   */\n      dup9\n        /* \"#utility.yul\":11003:11025   */\n      add\n        /* \"#utility.yul\":10982:11035   */\n      tag_391\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":10972:11035   */\n      swap5\n      pop\n        /* \"#utility.yul\":10928:11045   */\n      pop\n        /* \"#utility.yul\":11084:11086   */\n      0x20\n        /* \"#utility.yul\":11110:11163   */\n      tag_570\n        /* \"#utility.yul\":11155:11162   */\n      dup8\n        /* \"#utility.yul\":11146:11152   */\n      dup3\n        /* \"#utility.yul\":11135:11144   */\n      dup9\n        /* \"#utility.yul\":11131:11153   */\n      add\n        /* \"#utility.yul\":11110:11163   */\n      tag_391\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":11100:11163   */\n      swap4\n      pop\n        /* \"#utility.yul\":11055:11173   */\n      pop\n        /* \"#utility.yul\":11212:11214   */\n      0x40\n        /* \"#utility.yul\":11238:11291   */\n      tag_571\n        /* \"#utility.yul\":11283:11290   */\n      dup8\n        /* \"#utility.yul\":11274:11280   */\n      dup3\n        /* \"#utility.yul\":11263:11272   */\n      dup9\n        /* \"#utility.yul\":11259:11281   */\n      add\n        /* \"#utility.yul\":11238:11291   */\n      tag_386\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":11228:11291   */\n      swap3\n      pop\n        /* \"#utility.yul\":11183:11301   */\n      pop\n        /* \"#utility.yul\":11368:11370   */\n      0x60\n        /* \"#utility.yul\":11357:11366   */\n      dup6\n        /* \"#utility.yul\":11353:11371   */\n      add\n        /* \"#utility.yul\":11340:11372   */\n      calldataload\n        /* \"#utility.yul\":11399:11417   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11391:11397   */\n      dup2\n        /* \"#utility.yul\":11388:11418   */\n      gt\n        /* \"#utility.yul\":11385:11502   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":11421:11500   */\n      tag_573\n      tag_373\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":11385:11502   */\n    tag_572:\n        /* \"#utility.yul\":11526:11588   */\n      tag_574\n        /* \"#utility.yul\":11580:11587   */\n      dup8\n        /* \"#utility.yul\":11571:11577   */\n      dup3\n        /* \"#utility.yul\":11560:11569   */\n      dup9\n        /* \"#utility.yul\":11556:11578   */\n      add\n        /* \"#utility.yul\":11526:11588   */\n      tag_405\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":11516:11588   */\n      swap2\n      pop\n        /* \"#utility.yul\":11311:11598   */\n      pop\n        /* \"#utility.yul\":10662:11605   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11611:12085   */\n    tag_110:\n        /* \"#utility.yul\":11679:11685   */\n      0x00\n        /* \"#utility.yul\":11687:11693   */\n      dup1\n        /* \"#utility.yul\":11736:11738   */\n      0x40\n        /* \"#utility.yul\":11724:11733   */\n      dup4\n        /* \"#utility.yul\":11715:11722   */\n      dup6\n        /* \"#utility.yul\":11711:11734   */\n      sub\n        /* \"#utility.yul\":11707:11739   */\n      slt\n        /* \"#utility.yul\":11704:11823   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":11742:11821   */\n      tag_577\n      tag_372\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":11704:11823   */\n    tag_576:\n        /* \"#utility.yul\":11862:11863   */\n      0x00\n        /* \"#utility.yul\":11887:11940   */\n      tag_578\n        /* \"#utility.yul\":11932:11939   */\n      dup6\n        /* \"#utility.yul\":11923:11929   */\n      dup3\n        /* \"#utility.yul\":11912:11921   */\n      dup7\n        /* \"#utility.yul\":11908:11930   */\n      add\n        /* \"#utility.yul\":11887:11940   */\n      tag_391\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":11877:11940   */\n      swap3\n      pop\n        /* \"#utility.yul\":11833:11950   */\n      pop\n        /* \"#utility.yul\":11989:11991   */\n      0x20\n        /* \"#utility.yul\":12015:12068   */\n      tag_579\n        /* \"#utility.yul\":12060:12067   */\n      dup6\n        /* \"#utility.yul\":12051:12057   */\n      dup3\n        /* \"#utility.yul\":12040:12049   */\n      dup7\n        /* \"#utility.yul\":12036:12058   */\n      add\n        /* \"#utility.yul\":12015:12068   */\n      tag_391\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":12005:12068   */\n      swap2\n      pop\n        /* \"#utility.yul\":11960:12078   */\n      pop\n        /* \"#utility.yul\":11611:12085   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12091:12271   */\n    tag_406:\n        /* \"#utility.yul\":12139:12216   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12136:12137   */\n      0x00\n        /* \"#utility.yul\":12129:12217   */\n      mstore\n        /* \"#utility.yul\":12236:12240   */\n      0x22\n        /* \"#utility.yul\":12233:12234   */\n      0x04\n        /* \"#utility.yul\":12226:12241   */\n      mstore\n        /* \"#utility.yul\":12260:12264   */\n      0x24\n        /* \"#utility.yul\":12257:12258   */\n      0x00\n        /* \"#utility.yul\":12250:12265   */\n      revert\n        /* \"#utility.yul\":12277:12597   */\n    tag_123:\n        /* \"#utility.yul\":12321:12327   */\n      0x00\n        /* \"#utility.yul\":12358:12359   */\n      0x02\n        /* \"#utility.yul\":12352:12356   */\n      dup3\n        /* \"#utility.yul\":12348:12360   */\n      div\n        /* \"#utility.yul\":12338:12360   */\n      swap1\n      pop\n        /* \"#utility.yul\":12405:12406   */\n      0x01\n        /* \"#utility.yul\":12399:12403   */\n      dup3\n        /* \"#utility.yul\":12395:12407   */\n      and\n        /* \"#utility.yul\":12426:12444   */\n      dup1\n        /* \"#utility.yul\":12416:12497   */\n      tag_582\n      jumpi\n        /* \"#utility.yul\":12482:12486   */\n      0x7f\n        /* \"#utility.yul\":12474:12480   */\n      dup3\n        /* \"#utility.yul\":12470:12487   */\n      and\n        /* \"#utility.yul\":12460:12487   */\n      swap2\n      pop\n        /* \"#utility.yul\":12416:12497   */\n    tag_582:\n        /* \"#utility.yul\":12544:12546   */\n      0x20\n        /* \"#utility.yul\":12536:12542   */\n      dup3\n        /* \"#utility.yul\":12533:12547   */\n      lt\n        /* \"#utility.yul\":12513:12531   */\n      dup2\n        /* \"#utility.yul\":12510:12548   */\n      sub\n        /* \"#utility.yul\":12507:12591   */\n      tag_583\n      jumpi\n        /* \"#utility.yul\":12563:12581   */\n      tag_584\n      tag_406\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":12507:12591   */\n    tag_583:\n        /* \"#utility.yul\":12328:12597   */\n      pop\n        /* \"#utility.yul\":12277:12597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12603:12776   */\n    tag_407:\n        /* \"#utility.yul\":12743:12768   */\n      0x4e6f7420616e206164646974696f6e616c206f776e6572000000000000000000\n        /* \"#utility.yul\":12739:12740   */\n      0x00\n        /* \"#utility.yul\":12731:12737   */\n      dup3\n        /* \"#utility.yul\":12727:12741   */\n      add\n        /* \"#utility.yul\":12720:12769   */\n      mstore\n        /* \"#utility.yul\":12603:12776   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12782:13148   */\n    tag_408:\n        /* \"#utility.yul\":12924:12927   */\n      0x00\n        /* \"#utility.yul\":12945:13012   */\n      tag_587\n        /* \"#utility.yul\":13009:13011   */\n      0x17\n        /* \"#utility.yul\":13004:13007   */\n      dup4\n        /* \"#utility.yul\":12945:13012   */\n      tag_380\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":12938:13012   */\n      swap2\n      pop\n        /* \"#utility.yul\":13021:13114   */\n      tag_588\n        /* \"#utility.yul\":13110:13113   */\n      dup3\n        /* \"#utility.yul\":13021:13114   */\n      tag_407\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":13139:13141   */\n      0x20\n        /* \"#utility.yul\":13134:13137   */\n      dup3\n        /* \"#utility.yul\":13130:13142   */\n      add\n        /* \"#utility.yul\":13123:13142   */\n      swap1\n      pop\n        /* \"#utility.yul\":12782:13148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13154:13573   */\n    tag_143:\n        /* \"#utility.yul\":13320:13324   */\n      0x00\n        /* \"#utility.yul\":13358:13360   */\n      0x20\n        /* \"#utility.yul\":13347:13356   */\n      dup3\n        /* \"#utility.yul\":13343:13361   */\n      add\n        /* \"#utility.yul\":13335:13361   */\n      swap1\n      pop\n        /* \"#utility.yul\":13407:13416   */\n      dup2\n        /* \"#utility.yul\":13401:13405   */\n      dup2\n        /* \"#utility.yul\":13397:13417   */\n      sub\n        /* \"#utility.yul\":13393:13394   */\n      0x00\n        /* \"#utility.yul\":13382:13391   */\n      dup4\n        /* \"#utility.yul\":13378:13395   */\n      add\n        /* \"#utility.yul\":13371:13418   */\n      mstore\n        /* \"#utility.yul\":13435:13566   */\n      tag_590\n        /* \"#utility.yul\":13561:13565   */\n      dup2\n        /* \"#utility.yul\":13435:13566   */\n      tag_408\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":13427:13566   */\n      swap1\n      pop\n        /* \"#utility.yul\":13154:13573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13579:13751   */\n    tag_409:\n        /* \"#utility.yul\":13719:13743   */\n      0x4d6178696d756d20737570706c79207265616368656400000000000000000000\n        /* \"#utility.yul\":13715:13716   */\n      0x00\n        /* \"#utility.yul\":13707:13713   */\n      dup3\n        /* \"#utility.yul\":13703:13717   */\n      add\n        /* \"#utility.yul\":13696:13744   */\n      mstore\n        /* \"#utility.yul\":13579:13751   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13757:14123   */\n    tag_410:\n        /* \"#utility.yul\":13899:13902   */\n      0x00\n        /* \"#utility.yul\":13920:13987   */\n      tag_593\n        /* \"#utility.yul\":13984:13986   */\n      0x16\n        /* \"#utility.yul\":13979:13982   */\n      dup4\n        /* \"#utility.yul\":13920:13987   */\n      tag_380\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":13913:13987   */\n      swap2\n      pop\n        /* \"#utility.yul\":13996:14089   */\n      tag_594\n        /* \"#utility.yul\":14085:14088   */\n      dup3\n        /* \"#utility.yul\":13996:14089   */\n      tag_409\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":14114:14116   */\n      0x20\n        /* \"#utility.yul\":14109:14112   */\n      dup3\n        /* \"#utility.yul\":14105:14117   */\n      add\n        /* \"#utility.yul\":14098:14117   */\n      swap1\n      pop\n        /* \"#utility.yul\":13757:14123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14129:14548   */\n    tag_149:\n        /* \"#utility.yul\":14295:14299   */\n      0x00\n        /* \"#utility.yul\":14333:14335   */\n      0x20\n        /* \"#utility.yul\":14322:14331   */\n      dup3\n        /* \"#utility.yul\":14318:14336   */\n      add\n        /* \"#utility.yul\":14310:14336   */\n      swap1\n      pop\n        /* \"#utility.yul\":14382:14391   */\n      dup2\n        /* \"#utility.yul\":14376:14380   */\n      dup2\n        /* \"#utility.yul\":14372:14392   */\n      sub\n        /* \"#utility.yul\":14368:14369   */\n      0x00\n        /* \"#utility.yul\":14357:14366   */\n      dup4\n        /* \"#utility.yul\":14353:14370   */\n      add\n        /* \"#utility.yul\":14346:14393   */\n      mstore\n        /* \"#utility.yul\":14410:14541   */\n      tag_596\n        /* \"#utility.yul\":14536:14540   */\n      dup2\n        /* \"#utility.yul\":14410:14541   */\n      tag_410\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":14402:14541   */\n      swap1\n      pop\n        /* \"#utility.yul\":14129:14548   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14554:14734   */\n    tag_411:\n        /* \"#utility.yul\":14602:14679   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14599:14600   */\n      0x00\n        /* \"#utility.yul\":14592:14680   */\n      mstore\n        /* \"#utility.yul\":14699:14703   */\n      0x11\n        /* \"#utility.yul\":14696:14697   */\n      0x04\n        /* \"#utility.yul\":14689:14704   */\n      mstore\n        /* \"#utility.yul\":14723:14727   */\n      0x24\n        /* \"#utility.yul\":14720:14721   */\n      0x00\n        /* \"#utility.yul\":14713:14728   */\n      revert\n        /* \"#utility.yul\":14740:14931   */\n    tag_152:\n        /* \"#utility.yul\":14780:14783   */\n      0x00\n        /* \"#utility.yul\":14799:14819   */\n      tag_599\n        /* \"#utility.yul\":14817:14818   */\n      dup3\n        /* \"#utility.yul\":14799:14819   */\n      tag_384\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":14794:14819   */\n      swap2\n      pop\n        /* \"#utility.yul\":14833:14853   */\n      tag_600\n        /* \"#utility.yul\":14851:14852   */\n      dup4\n        /* \"#utility.yul\":14833:14853   */\n      tag_384\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":14828:14853   */\n      swap3\n      pop\n        /* \"#utility.yul\":14876:14877   */\n      dup3\n        /* \"#utility.yul\":14873:14874   */\n      dup3\n        /* \"#utility.yul\":14869:14878   */\n      add\n        /* \"#utility.yul\":14862:14878   */\n      swap1\n      pop\n        /* \"#utility.yul\":14897:14900   */\n      dup1\n        /* \"#utility.yul\":14894:14895   */\n      dup3\n        /* \"#utility.yul\":14891:14901   */\n      gt\n        /* \"#utility.yul\":14888:14924   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":14904:14922   */\n      tag_602\n      tag_411\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":14888:14924   */\n    tag_601:\n        /* \"#utility.yul\":14740:14931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14937:15115   */\n    tag_412:\n        /* \"#utility.yul\":15077:15107   */\n      0x43616e6e6f742072656d6f766520636f6e7472616374206f776e657200000000\n        /* \"#utility.yul\":15073:15074   */\n      0x00\n        /* \"#utility.yul\":15065:15071   */\n      dup3\n        /* \"#utility.yul\":15061:15075   */\n      add\n        /* \"#utility.yul\":15054:15108   */\n      mstore\n        /* \"#utility.yul\":14937:15115   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15121:15487   */\n    tag_413:\n        /* \"#utility.yul\":15263:15266   */\n      0x00\n        /* \"#utility.yul\":15284:15351   */\n      tag_605\n        /* \"#utility.yul\":15348:15350   */\n      0x1c\n        /* \"#utility.yul\":15343:15346   */\n      dup4\n        /* \"#utility.yul\":15284:15351   */\n      tag_380\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":15277:15351   */\n      swap2\n      pop\n        /* \"#utility.yul\":15360:15453   */\n      tag_606\n        /* \"#utility.yul\":15449:15452   */\n      dup3\n        /* \"#utility.yul\":15360:15453   */\n      tag_412\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":15478:15480   */\n      0x20\n        /* \"#utility.yul\":15473:15476   */\n      dup3\n        /* \"#utility.yul\":15469:15481   */\n      add\n        /* \"#utility.yul\":15462:15481   */\n      swap1\n      pop\n        /* \"#utility.yul\":15121:15487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15493:15912   */\n    tag_165:\n        /* \"#utility.yul\":15659:15663   */\n      0x00\n        /* \"#utility.yul\":15697:15699   */\n      0x20\n        /* \"#utility.yul\":15686:15695   */\n      dup3\n        /* \"#utility.yul\":15682:15700   */\n      add\n        /* \"#utility.yul\":15674:15700   */\n      swap1\n      pop\n        /* \"#utility.yul\":15746:15755   */\n      dup2\n        /* \"#utility.yul\":15740:15744   */\n      dup2\n        /* \"#utility.yul\":15736:15756   */\n      sub\n        /* \"#utility.yul\":15732:15733   */\n      0x00\n        /* \"#utility.yul\":15721:15730   */\n      dup4\n        /* \"#utility.yul\":15717:15734   */\n      add\n        /* \"#utility.yul\":15710:15757   */\n      mstore\n        /* \"#utility.yul\":15774:15905   */\n      tag_608\n        /* \"#utility.yul\":15900:15904   */\n      dup2\n        /* \"#utility.yul\":15774:15905   */\n      tag_413\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":15766:15905   */\n      swap1\n      pop\n        /* \"#utility.yul\":15493:15912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15918:16360   */\n    tag_174:\n        /* \"#utility.yul\":16067:16071   */\n      0x00\n        /* \"#utility.yul\":16105:16107   */\n      0x60\n        /* \"#utility.yul\":16094:16103   */\n      dup3\n        /* \"#utility.yul\":16090:16108   */\n      add\n        /* \"#utility.yul\":16082:16108   */\n      swap1\n      pop\n        /* \"#utility.yul\":16118:16189   */\n      tag_610\n        /* \"#utility.yul\":16186:16187   */\n      0x00\n        /* \"#utility.yul\":16175:16184   */\n      dup4\n        /* \"#utility.yul\":16171:16188   */\n      add\n        /* \"#utility.yul\":16162:16168   */\n      dup7\n        /* \"#utility.yul\":16118:16189   */\n      tag_389\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":16199:16271   */\n      tag_611\n        /* \"#utility.yul\":16267:16269   */\n      0x20\n        /* \"#utility.yul\":16256:16265   */\n      dup4\n        /* \"#utility.yul\":16252:16270   */\n      add\n        /* \"#utility.yul\":16243:16249   */\n      dup6\n        /* \"#utility.yul\":16199:16271   */\n      tag_400\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":16281:16353   */\n      tag_612\n        /* \"#utility.yul\":16349:16351   */\n      0x40\n        /* \"#utility.yul\":16338:16347   */\n      dup4\n        /* \"#utility.yul\":16334:16352   */\n      add\n        /* \"#utility.yul\":16325:16331   */\n      dup5\n        /* \"#utility.yul\":16281:16353   */\n      tag_389\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":15918:16360   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16366:16507   */\n    tag_414:\n        /* \"#utility.yul\":16415:16419   */\n      0x00\n        /* \"#utility.yul\":16438:16441   */\n      dup2\n        /* \"#utility.yul\":16430:16441   */\n      swap1\n      pop\n        /* \"#utility.yul\":16461:16464   */\n      dup2\n        /* \"#utility.yul\":16458:16459   */\n      0x00\n        /* \"#utility.yul\":16451:16465   */\n      mstore\n        /* \"#utility.yul\":16495:16499   */\n      0x20\n        /* \"#utility.yul\":16492:16493   */\n      0x00\n        /* \"#utility.yul\":16482:16500   */\n      keccak256\n        /* \"#utility.yul\":16474:16500   */\n      swap1\n      pop\n        /* \"#utility.yul\":16366:16507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16513:16606   */\n    tag_415:\n        /* \"#utility.yul\":16550:16556   */\n      0x00\n        /* \"#utility.yul\":16597:16599   */\n      0x20\n        /* \"#utility.yul\":16592:16594   */\n      0x1f\n        /* \"#utility.yul\":16585:16590   */\n      dup4\n        /* \"#utility.yul\":16581:16595   */\n      add\n        /* \"#utility.yul\":16577:16600   */\n      div\n        /* \"#utility.yul\":16567:16600   */\n      swap1\n      pop\n        /* \"#utility.yul\":16513:16606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16612:16719   */\n    tag_416:\n        /* \"#utility.yul\":16656:16664   */\n      0x00\n        /* \"#utility.yul\":16706:16711   */\n      dup3\n        /* \"#utility.yul\":16700:16704   */\n      dup3\n        /* \"#utility.yul\":16696:16712   */\n      shl\n        /* \"#utility.yul\":16675:16712   */\n      swap1\n      pop\n        /* \"#utility.yul\":16612:16719   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16725:17118   */\n    tag_417:\n        /* \"#utility.yul\":16794:16800   */\n      0x00\n        /* \"#utility.yul\":16844:16845   */\n      0x08\n        /* \"#utility.yul\":16832:16842   */\n      dup4\n        /* \"#utility.yul\":16828:16846   */\n      mul\n        /* \"#utility.yul\":16867:16964   */\n      tag_617\n        /* \"#utility.yul\":16897:16963   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16886:16895   */\n      dup3\n        /* \"#utility.yul\":16867:16964   */\n      tag_416\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":16985:17024   */\n      tag_618\n        /* \"#utility.yul\":17015:17023   */\n      dup7\n        /* \"#utility.yul\":17004:17013   */\n      dup4\n        /* \"#utility.yul\":16985:17024   */\n      tag_416\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":16973:17024   */\n      swap6\n      pop\n        /* \"#utility.yul\":17057:17061   */\n      dup1\n        /* \"#utility.yul\":17053:17062   */\n      not\n        /* \"#utility.yul\":17046:17051   */\n      dup5\n        /* \"#utility.yul\":17042:17063   */\n      and\n        /* \"#utility.yul\":17033:17063   */\n      swap4\n      pop\n        /* \"#utility.yul\":17106:17110   */\n      dup1\n        /* \"#utility.yul\":17096:17104   */\n      dup7\n        /* \"#utility.yul\":17092:17111   */\n      and\n        /* \"#utility.yul\":17085:17090   */\n      dup5\n        /* \"#utility.yul\":17082:17112   */\n      or\n        /* \"#utility.yul\":17072:17112   */\n      swap3\n      pop\n        /* \"#utility.yul\":16801:17118   */\n      pop\n      pop\n        /* \"#utility.yul\":16725:17118   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17124:17184   */\n    tag_418:\n        /* \"#utility.yul\":17152:17155   */\n      0x00\n        /* \"#utility.yul\":17173:17178   */\n      dup2\n        /* \"#utility.yul\":17166:17178   */\n      swap1\n      pop\n        /* \"#utility.yul\":17124:17184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17190:17332   */\n    tag_419:\n        /* \"#utility.yul\":17240:17249   */\n      0x00\n        /* \"#utility.yul\":17273:17326   */\n      tag_621\n        /* \"#utility.yul\":17291:17325   */\n      tag_622\n        /* \"#utility.yul\":17300:17324   */\n      tag_623\n        /* \"#utility.yul\":17318:17323   */\n      dup5\n        /* \"#utility.yul\":17300:17324   */\n      tag_384\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":17291:17325   */\n      tag_418\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":17273:17326   */\n      tag_384\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":17260:17326   */\n      swap1\n      pop\n        /* \"#utility.yul\":17190:17332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17338:17413   */\n    tag_420:\n        /* \"#utility.yul\":17381:17384   */\n      0x00\n        /* \"#utility.yul\":17402:17407   */\n      dup2\n        /* \"#utility.yul\":17395:17407   */\n      swap1\n      pop\n        /* \"#utility.yul\":17338:17413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17419:17688   */\n    tag_421:\n        /* \"#utility.yul\":17529:17568   */\n      tag_626\n        /* \"#utility.yul\":17560:17567   */\n      dup4\n        /* \"#utility.yul\":17529:17568   */\n      tag_419\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":17590:17681   */\n      tag_627\n        /* \"#utility.yul\":17639:17680   */\n      tag_628\n        /* \"#utility.yul\":17663:17679   */\n      dup3\n        /* \"#utility.yul\":17639:17680   */\n      tag_420\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":17631:17637   */\n      dup5\n        /* \"#utility.yul\":17624:17628   */\n      dup5\n        /* \"#utility.yul\":17618:17629   */\n      sload\n        /* \"#utility.yul\":17590:17681   */\n      tag_417\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":17584:17588   */\n      dup3\n        /* \"#utility.yul\":17577:17682   */\n      sstore\n        /* \"#utility.yul\":17495:17688   */\n      pop\n        /* \"#utility.yul\":17419:17688   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17694:17767   */\n    tag_422:\n        /* \"#utility.yul\":17739:17742   */\n      0x00\n        /* \"#utility.yul\":17694:17767   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17773:17962   */\n    tag_423:\n        /* \"#utility.yul\":17850:17882   */\n      tag_631\n      tag_422\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":17891:17956   */\n      tag_632\n        /* \"#utility.yul\":17949:17955   */\n      dup2\n        /* \"#utility.yul\":17941:17947   */\n      dup5\n        /* \"#utility.yul\":17935:17939   */\n      dup5\n        /* \"#utility.yul\":17891:17956   */\n      tag_421\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":17826:17962   */\n      pop\n        /* \"#utility.yul\":17773:17962   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17968:18154   */\n    tag_424:\n        /* \"#utility.yul\":18028:18148   */\n    tag_634:\n        /* \"#utility.yul\":18045:18048   */\n      dup2\n        /* \"#utility.yul\":18038:18043   */\n      dup2\n        /* \"#utility.yul\":18035:18049   */\n      lt\n        /* \"#utility.yul\":18028:18148   */\n      iszero\n      tag_636\n      jumpi\n        /* \"#utility.yul\":18099:18138   */\n      tag_637\n        /* \"#utility.yul\":18136:18137   */\n      0x00\n        /* \"#utility.yul\":18129:18134   */\n      dup3\n        /* \"#utility.yul\":18099:18138   */\n      tag_423\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":18072:18073   */\n      0x01\n        /* \"#utility.yul\":18065:18070   */\n      dup2\n        /* \"#utility.yul\":18061:18074   */\n      add\n        /* \"#utility.yul\":18052:18074   */\n      swap1\n      pop\n        /* \"#utility.yul\":18028:18148   */\n      jump(tag_634)\n    tag_636:\n        /* \"#utility.yul\":17968:18154   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18160:18703   */\n    tag_425:\n        /* \"#utility.yul\":18261:18263   */\n      0x1f\n        /* \"#utility.yul\":18256:18259   */\n      dup3\n        /* \"#utility.yul\":18253:18264   */\n      gt\n        /* \"#utility.yul\":18250:18696   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":18295:18333   */\n      tag_640\n        /* \"#utility.yul\":18327:18332   */\n      dup2\n        /* \"#utility.yul\":18295:18333   */\n      tag_414\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":18379:18408   */\n      tag_641\n        /* \"#utility.yul\":18397:18407   */\n      dup5\n        /* \"#utility.yul\":18379:18408   */\n      tag_415\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":18369:18377   */\n      dup2\n        /* \"#utility.yul\":18365:18409   */\n      add\n        /* \"#utility.yul\":18562:18564   */\n      0x20\n        /* \"#utility.yul\":18550:18560   */\n      dup6\n        /* \"#utility.yul\":18547:18565   */\n      lt\n        /* \"#utility.yul\":18544:18593   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":18583:18591   */\n      dup2\n        /* \"#utility.yul\":18568:18591   */\n      swap1\n      pop\n        /* \"#utility.yul\":18544:18593   */\n    tag_642:\n        /* \"#utility.yul\":18606:18686   */\n      tag_643\n        /* \"#utility.yul\":18662:18684   */\n      tag_644\n        /* \"#utility.yul\":18680:18683   */\n      dup6\n        /* \"#utility.yul\":18662:18684   */\n      tag_415\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":18652:18660   */\n      dup4\n        /* \"#utility.yul\":18648:18685   */\n      add\n        /* \"#utility.yul\":18635:18646   */\n      dup3\n        /* \"#utility.yul\":18606:18686   */\n      tag_424\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":18265:18696   */\n      pop\n      pop\n        /* \"#utility.yul\":18250:18696   */\n    tag_639:\n        /* \"#utility.yul\":18160:18703   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18709:18826   */\n    tag_426:\n        /* \"#utility.yul\":18763:18771   */\n      0x00\n        /* \"#utility.yul\":18813:18818   */\n      dup3\n        /* \"#utility.yul\":18807:18811   */\n      dup3\n        /* \"#utility.yul\":18803:18819   */\n      shr\n        /* \"#utility.yul\":18782:18819   */\n      swap1\n      pop\n        /* \"#utility.yul\":18709:18826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18832:19001   */\n    tag_427:\n        /* \"#utility.yul\":18876:18882   */\n      0x00\n        /* \"#utility.yul\":18909:18960   */\n      tag_647\n        /* \"#utility.yul\":18957:18958   */\n      0x00\n        /* \"#utility.yul\":18953:18959   */\n      not\n        /* \"#utility.yul\":18945:18950   */\n      dup5\n        /* \"#utility.yul\":18942:18943   */\n      0x08\n        /* \"#utility.yul\":18938:18951   */\n      mul\n        /* \"#utility.yul\":18909:18960   */\n      tag_426\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":18905:18961   */\n      not\n        /* \"#utility.yul\":18990:18994   */\n      dup1\n        /* \"#utility.yul\":18984:18988   */\n      dup4\n        /* \"#utility.yul\":18980:18995   */\n      and\n        /* \"#utility.yul\":18970:18995   */\n      swap2\n      pop\n        /* \"#utility.yul\":18883:19001   */\n      pop\n        /* \"#utility.yul\":18832:19001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19006:19301   */\n    tag_428:\n        /* \"#utility.yul\":19082:19086   */\n      0x00\n        /* \"#utility.yul\":19228:19257   */\n      tag_649\n        /* \"#utility.yul\":19253:19256   */\n      dup4\n        /* \"#utility.yul\":19247:19251   */\n      dup4\n        /* \"#utility.yul\":19228:19257   */\n      tag_427\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":19220:19257   */\n      swap2\n      pop\n        /* \"#utility.yul\":19290:19293   */\n      dup3\n        /* \"#utility.yul\":19287:19288   */\n      0x02\n        /* \"#utility.yul\":19283:19294   */\n      mul\n        /* \"#utility.yul\":19277:19281   */\n      dup3\n        /* \"#utility.yul\":19274:19295   */\n      or\n        /* \"#utility.yul\":19266:19295   */\n      swap1\n      pop\n        /* \"#utility.yul\":19006:19301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19306:20701   */\n    tag_187:\n        /* \"#utility.yul\":19423:19460   */\n      tag_651\n        /* \"#utility.yul\":19456:19459   */\n      dup3\n        /* \"#utility.yul\":19423:19460   */\n      tag_379\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":19525:19543   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19517:19523   */\n      dup2\n        /* \"#utility.yul\":19514:19544   */\n      gt\n        /* \"#utility.yul\":19511:19567   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":19547:19565   */\n      tag_653\n      tag_307\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":19511:19567   */\n    tag_652:\n        /* \"#utility.yul\":19591:19629   */\n      tag_654\n        /* \"#utility.yul\":19623:19627   */\n      dup3\n        /* \"#utility.yul\":19617:19628   */\n      sload\n        /* \"#utility.yul\":19591:19629   */\n      tag_123\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":19676:19743   */\n      tag_655\n        /* \"#utility.yul\":19736:19742   */\n      dup3\n        /* \"#utility.yul\":19728:19734   */\n      dup3\n        /* \"#utility.yul\":19722:19726   */\n      dup6\n        /* \"#utility.yul\":19676:19743   */\n      tag_425\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":19770:19771   */\n      0x00\n        /* \"#utility.yul\":19794:19798   */\n      0x20\n        /* \"#utility.yul\":19781:19798   */\n      swap1\n      pop\n        /* \"#utility.yul\":19826:19828   */\n      0x1f\n        /* \"#utility.yul\":19818:19824   */\n      dup4\n        /* \"#utility.yul\":19815:19829   */\n      gt\n        /* \"#utility.yul\":19843:19844   */\n      0x01\n        /* \"#utility.yul\":19838:20456   */\n      dup2\n      eq\n      tag_657\n      jumpi\n        /* \"#utility.yul\":20500:20501   */\n      0x00\n        /* \"#utility.yul\":20517:20523   */\n      dup5\n        /* \"#utility.yul\":20514:20591   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":20566:20575   */\n      dup3\n        /* \"#utility.yul\":20561:20564   */\n      dup8\n        /* \"#utility.yul\":20557:20576   */\n      add\n        /* \"#utility.yul\":20551:20577   */\n      mload\n        /* \"#utility.yul\":20542:20577   */\n      swap1\n      pop\n        /* \"#utility.yul\":20514:20591   */\n    tag_658:\n        /* \"#utility.yul\":20617:20684   */\n      tag_659\n        /* \"#utility.yul\":20677:20683   */\n      dup6\n        /* \"#utility.yul\":20670:20675   */\n      dup3\n        /* \"#utility.yul\":20617:20684   */\n      tag_428\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":20611:20615   */\n      dup7\n        /* \"#utility.yul\":20604:20685   */\n      sstore\n        /* \"#utility.yul\":20473:20695   */\n      pop\n        /* \"#utility.yul\":19808:20695   */\n      jump(tag_656)\n        /* \"#utility.yul\":19838:20456   */\n    tag_657:\n        /* \"#utility.yul\":19890:19894   */\n      0x1f\n        /* \"#utility.yul\":19886:19895   */\n      not\n        /* \"#utility.yul\":19878:19884   */\n      dup5\n        /* \"#utility.yul\":19874:19896   */\n      and\n        /* \"#utility.yul\":19924:19961   */\n      tag_660\n        /* \"#utility.yul\":19956:19960   */\n      dup7\n        /* \"#utility.yul\":19924:19961   */\n      tag_414\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":19983:19984   */\n      0x00\n        /* \"#utility.yul\":19997:20205   */\n    tag_661:\n        /* \"#utility.yul\":20011:20018   */\n      dup3\n        /* \"#utility.yul\":20008:20009   */\n      dup2\n        /* \"#utility.yul\":20005:20019   */\n      lt\n        /* \"#utility.yul\":19997:20205   */\n      iszero\n      tag_663\n      jumpi\n        /* \"#utility.yul\":20090:20099   */\n      dup5\n        /* \"#utility.yul\":20085:20088   */\n      dup10\n        /* \"#utility.yul\":20081:20100   */\n      add\n        /* \"#utility.yul\":20075:20101   */\n      mload\n        /* \"#utility.yul\":20067:20073   */\n      dup3\n        /* \"#utility.yul\":20060:20102   */\n      sstore\n        /* \"#utility.yul\":20141:20142   */\n      0x01\n        /* \"#utility.yul\":20133:20139   */\n      dup3\n        /* \"#utility.yul\":20129:20143   */\n      add\n        /* \"#utility.yul\":20119:20143   */\n      swap2\n      pop\n        /* \"#utility.yul\":20188:20190   */\n      0x20\n        /* \"#utility.yul\":20177:20186   */\n      dup6\n        /* \"#utility.yul\":20173:20191   */\n      add\n        /* \"#utility.yul\":20160:20191   */\n      swap5\n      pop\n        /* \"#utility.yul\":20034:20038   */\n      0x20\n        /* \"#utility.yul\":20031:20032   */\n      dup2\n        /* \"#utility.yul\":20027:20039   */\n      add\n        /* \"#utility.yul\":20022:20039   */\n      swap1\n      pop\n        /* \"#utility.yul\":19997:20205   */\n      jump(tag_661)\n    tag_663:\n        /* \"#utility.yul\":20233:20239   */\n      dup7\n        /* \"#utility.yul\":20224:20231   */\n      dup4\n        /* \"#utility.yul\":20221:20240   */\n      lt\n        /* \"#utility.yul\":20218:20397   */\n      iszero\n      tag_664\n      jumpi\n        /* \"#utility.yul\":20291:20300   */\n      dup5\n        /* \"#utility.yul\":20286:20289   */\n      dup10\n        /* \"#utility.yul\":20282:20301   */\n      add\n        /* \"#utility.yul\":20276:20302   */\n      mload\n        /* \"#utility.yul\":20334:20382   */\n      tag_665\n        /* \"#utility.yul\":20376:20380   */\n      0x1f\n        /* \"#utility.yul\":20368:20374   */\n      dup10\n        /* \"#utility.yul\":20364:20381   */\n      and\n        /* \"#utility.yul\":20353:20362   */\n      dup3\n        /* \"#utility.yul\":20334:20382   */\n      tag_427\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":20326:20332   */\n      dup4\n        /* \"#utility.yul\":20319:20383   */\n      sstore\n        /* \"#utility.yul\":20241:20397   */\n      pop\n        /* \"#utility.yul\":20218:20397   */\n    tag_664:\n        /* \"#utility.yul\":20443:20444   */\n      0x01\n        /* \"#utility.yul\":20439:20440   */\n      0x02\n        /* \"#utility.yul\":20431:20437   */\n      dup9\n        /* \"#utility.yul\":20427:20441   */\n      mul\n        /* \"#utility.yul\":20423:20445   */\n      add\n        /* \"#utility.yul\":20417:20421   */\n      dup9\n        /* \"#utility.yul\":20410:20446   */\n      sstore\n        /* \"#utility.yul\":19845:20456   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19808:20695   */\n    tag_656:\n      pop\n        /* \"#utility.yul\":19398:20701   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19306:20701   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20707:20855   */\n    tag_429:\n        /* \"#utility.yul\":20809:20820   */\n      0x00\n        /* \"#utility.yul\":20846:20849   */\n      dup2\n        /* \"#utility.yul\":20831:20849   */\n      swap1\n      pop\n        /* \"#utility.yul\":20707:20855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20861:21251   */\n    tag_430:\n        /* \"#utility.yul\":20967:20970   */\n      0x00\n        /* \"#utility.yul\":20995:21034   */\n      tag_668\n        /* \"#utility.yul\":21028:21033   */\n      dup3\n        /* \"#utility.yul\":20995:21034   */\n      tag_379\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":21050:21139   */\n      tag_669\n        /* \"#utility.yul\":21132:21138   */\n      dup2\n        /* \"#utility.yul\":21127:21130   */\n      dup6\n        /* \"#utility.yul\":21050:21139   */\n      tag_429\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":21043:21139   */\n      swap4\n      pop\n        /* \"#utility.yul\":21148:21213   */\n      tag_670\n        /* \"#utility.yul\":21206:21212   */\n      dup2\n        /* \"#utility.yul\":21201:21204   */\n      dup6\n        /* \"#utility.yul\":21194:21198   */\n      0x20\n        /* \"#utility.yul\":21187:21192   */\n      dup7\n        /* \"#utility.yul\":21183:21199   */\n      add\n        /* \"#utility.yul\":21148:21213   */\n      tag_381\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":21238:21244   */\n      dup1\n        /* \"#utility.yul\":21233:21236   */\n      dup5\n        /* \"#utility.yul\":21229:21245   */\n      add\n        /* \"#utility.yul\":21222:21245   */\n      swap2\n      pop\n        /* \"#utility.yul\":20971:21251   */\n      pop\n        /* \"#utility.yul\":20861:21251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21257:21692   */\n    tag_228:\n        /* \"#utility.yul\":21437:21440   */\n      0x00\n        /* \"#utility.yul\":21459:21554   */\n      tag_672\n        /* \"#utility.yul\":21550:21553   */\n      dup3\n        /* \"#utility.yul\":21541:21547   */\n      dup6\n        /* \"#utility.yul\":21459:21554   */\n      tag_430\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":21452:21554   */\n      swap2\n      pop\n        /* \"#utility.yul\":21571:21666   */\n      tag_673\n        /* \"#utility.yul\":21662:21665   */\n      dup3\n        /* \"#utility.yul\":21653:21659   */\n      dup5\n        /* \"#utility.yul\":21571:21666   */\n      tag_430\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":21564:21666   */\n      swap2\n      pop\n        /* \"#utility.yul\":21683:21686   */\n      dup2\n        /* \"#utility.yul\":21676:21686   */\n      swap1\n      pop\n        /* \"#utility.yul\":21257:21692   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21698:21863   */\n    tag_431:\n        /* \"#utility.yul\":21838:21855   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":21834:21835   */\n      0x00\n        /* \"#utility.yul\":21826:21832   */\n      dup3\n        /* \"#utility.yul\":21822:21836   */\n      add\n        /* \"#utility.yul\":21815:21856   */\n      mstore\n        /* \"#utility.yul\":21698:21863   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21869:22235   */\n    tag_432:\n        /* \"#utility.yul\":22011:22014   */\n      0x00\n        /* \"#utility.yul\":22032:22099   */\n      tag_676\n        /* \"#utility.yul\":22096:22098   */\n      0x0f\n        /* \"#utility.yul\":22091:22094   */\n      dup4\n        /* \"#utility.yul\":22032:22099   */\n      tag_380\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":22025:22099   */\n      swap2\n      pop\n        /* \"#utility.yul\":22108:22201   */\n      tag_677\n        /* \"#utility.yul\":22197:22200   */\n      dup3\n        /* \"#utility.yul\":22108:22201   */\n      tag_431\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":22226:22228   */\n      0x20\n        /* \"#utility.yul\":22221:22224   */\n      dup3\n        /* \"#utility.yul\":22217:22229   */\n      add\n        /* \"#utility.yul\":22210:22229   */\n      swap1\n      pop\n        /* \"#utility.yul\":21869:22235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22241:22660   */\n    tag_270:\n        /* \"#utility.yul\":22407:22411   */\n      0x00\n        /* \"#utility.yul\":22445:22447   */\n      0x20\n        /* \"#utility.yul\":22434:22443   */\n      dup3\n        /* \"#utility.yul\":22430:22448   */\n      add\n        /* \"#utility.yul\":22422:22448   */\n      swap1\n      pop\n        /* \"#utility.yul\":22494:22503   */\n      dup2\n        /* \"#utility.yul\":22488:22492   */\n      dup2\n        /* \"#utility.yul\":22484:22504   */\n      sub\n        /* \"#utility.yul\":22480:22481   */\n      0x00\n        /* \"#utility.yul\":22469:22478   */\n      dup4\n        /* \"#utility.yul\":22465:22482   */\n      add\n        /* \"#utility.yul\":22458:22505   */\n      mstore\n        /* \"#utility.yul\":22522:22653   */\n      tag_679\n        /* \"#utility.yul\":22648:22652   */\n      dup2\n        /* \"#utility.yul\":22522:22653   */\n      tag_432\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":22514:22653   */\n      swap1\n      pop\n        /* \"#utility.yul\":22241:22660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22666:22764   */\n    tag_433:\n        /* \"#utility.yul\":22717:22723   */\n      0x00\n        /* \"#utility.yul\":22751:22756   */\n      dup2\n        /* \"#utility.yul\":22745:22757   */\n      mload\n        /* \"#utility.yul\":22735:22757   */\n      swap1\n      pop\n        /* \"#utility.yul\":22666:22764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22770:22938   */\n    tag_434:\n        /* \"#utility.yul\":22853:22864   */\n      0x00\n        /* \"#utility.yul\":22887:22893   */\n      dup3\n        /* \"#utility.yul\":22882:22885   */\n      dup3\n        /* \"#utility.yul\":22875:22894   */\n      mstore\n        /* \"#utility.yul\":22927:22931   */\n      0x20\n        /* \"#utility.yul\":22922:22925   */\n      dup3\n        /* \"#utility.yul\":22918:22932   */\n      add\n        /* \"#utility.yul\":22903:22932   */\n      swap1\n      pop\n        /* \"#utility.yul\":22770:22938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22944:23317   */\n    tag_435:\n        /* \"#utility.yul\":23030:23033   */\n      0x00\n        /* \"#utility.yul\":23058:23096   */\n      tag_683\n        /* \"#utility.yul\":23090:23095   */\n      dup3\n        /* \"#utility.yul\":23058:23096   */\n      tag_433\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":23112:23182   */\n      tag_684\n        /* \"#utility.yul\":23175:23181   */\n      dup2\n        /* \"#utility.yul\":23170:23173   */\n      dup6\n        /* \"#utility.yul\":23112:23182   */\n      tag_434\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":23105:23182   */\n      swap4\n      pop\n        /* \"#utility.yul\":23191:23256   */\n      tag_685\n        /* \"#utility.yul\":23249:23255   */\n      dup2\n        /* \"#utility.yul\":23244:23247   */\n      dup6\n        /* \"#utility.yul\":23237:23241   */\n      0x20\n        /* \"#utility.yul\":23230:23235   */\n      dup7\n        /* \"#utility.yul\":23226:23242   */\n      add\n        /* \"#utility.yul\":23191:23256   */\n      tag_381\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":23281:23310   */\n      tag_686\n        /* \"#utility.yul\":23303:23309   */\n      dup2\n        /* \"#utility.yul\":23281:23310   */\n      tag_382\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":23276:23279   */\n      dup5\n        /* \"#utility.yul\":23272:23311   */\n      add\n        /* \"#utility.yul\":23265:23311   */\n      swap2\n      pop\n        /* \"#utility.yul\":23034:23317   */\n      pop\n        /* \"#utility.yul\":22944:23317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23323:23963   */\n    tag_280:\n        /* \"#utility.yul\":23518:23522   */\n      0x00\n        /* \"#utility.yul\":23556:23559   */\n      0x80\n        /* \"#utility.yul\":23545:23554   */\n      dup3\n        /* \"#utility.yul\":23541:23560   */\n      add\n        /* \"#utility.yul\":23533:23560   */\n      swap1\n      pop\n        /* \"#utility.yul\":23570:23641   */\n      tag_688\n        /* \"#utility.yul\":23638:23639   */\n      0x00\n        /* \"#utility.yul\":23627:23636   */\n      dup4\n        /* \"#utility.yul\":23623:23640   */\n      add\n        /* \"#utility.yul\":23614:23620   */\n      dup8\n        /* \"#utility.yul\":23570:23641   */\n      tag_389\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":23651:23723   */\n      tag_689\n        /* \"#utility.yul\":23719:23721   */\n      0x20\n        /* \"#utility.yul\":23708:23717   */\n      dup4\n        /* \"#utility.yul\":23704:23722   */\n      add\n        /* \"#utility.yul\":23695:23701   */\n      dup7\n        /* \"#utility.yul\":23651:23723   */\n      tag_389\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":23733:23805   */\n      tag_690\n        /* \"#utility.yul\":23801:23803   */\n      0x40\n        /* \"#utility.yul\":23790:23799   */\n      dup4\n        /* \"#utility.yul\":23786:23804   */\n      add\n        /* \"#utility.yul\":23777:23783   */\n      dup6\n        /* \"#utility.yul\":23733:23805   */\n      tag_400\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":23852:23861   */\n      dup2\n        /* \"#utility.yul\":23846:23850   */\n      dup2\n        /* \"#utility.yul\":23842:23862   */\n      sub\n        /* \"#utility.yul\":23837:23839   */\n      0x60\n        /* \"#utility.yul\":23826:23835   */\n      dup4\n        /* \"#utility.yul\":23822:23840   */\n      add\n        /* \"#utility.yul\":23815:23863   */\n      mstore\n        /* \"#utility.yul\":23880:23956   */\n      tag_691\n        /* \"#utility.yul\":23951:23955   */\n      dup2\n        /* \"#utility.yul\":23942:23948   */\n      dup5\n        /* \"#utility.yul\":23880:23956   */\n      tag_435\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":23872:23956   */\n      swap1\n      pop\n        /* \"#utility.yul\":23323:23963   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23969:24110   */\n    tag_436:\n        /* \"#utility.yul\":24025:24030   */\n      0x00\n        /* \"#utility.yul\":24056:24062   */\n      dup2\n        /* \"#utility.yul\":24050:24063   */\n      mload\n        /* \"#utility.yul\":24041:24063   */\n      swap1\n      pop\n        /* \"#utility.yul\":24072:24104   */\n      tag_693\n        /* \"#utility.yul\":24098:24103   */\n      dup2\n        /* \"#utility.yul\":24072:24104   */\n      tag_375\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":23969:24110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24116:24465   */\n    tag_283:\n        /* \"#utility.yul\":24185:24191   */\n      0x00\n        /* \"#utility.yul\":24234:24236   */\n      0x20\n        /* \"#utility.yul\":24222:24231   */\n      dup3\n        /* \"#utility.yul\":24213:24220   */\n      dup5\n        /* \"#utility.yul\":24209:24232   */\n      sub\n        /* \"#utility.yul\":24205:24237   */\n      slt\n        /* \"#utility.yul\":24202:24321   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":24240:24319   */\n      tag_696\n      tag_372\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":24202:24321   */\n    tag_695:\n        /* \"#utility.yul\":24360:24361   */\n      0x00\n        /* \"#utility.yul\":24385:24448   */\n      tag_697\n        /* \"#utility.yul\":24440:24447   */\n      dup5\n        /* \"#utility.yul\":24431:24437   */\n      dup3\n        /* \"#utility.yul\":24420:24429   */\n      dup6\n        /* \"#utility.yul\":24416:24438   */\n      add\n        /* \"#utility.yul\":24385:24448   */\n      tag_436\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":24375:24448   */\n      swap2\n      pop\n        /* \"#utility.yul\":24331:24458   */\n      pop\n        /* \"#utility.yul\":24116:24465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24471:24651   */\n    tag_313:\n        /* \"#utility.yul\":24519:24596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24516:24517   */\n      0x00\n        /* \"#utility.yul\":24509:24597   */\n      mstore\n        /* \"#utility.yul\":24616:24620   */\n      0x12\n        /* \"#utility.yul\":24613:24614   */\n      0x04\n        /* \"#utility.yul\":24606:24621   */\n      mstore\n        /* \"#utility.yul\":24640:24644   */\n      0x24\n        /* \"#utility.yul\":24637:24638   */\n      0x00\n        /* \"#utility.yul\":24630:24645   */\n      revert\n        /* \"#utility.yul\":24657:24989   */\n    tag_338:\n        /* \"#utility.yul\":24778:24782   */\n      0x00\n        /* \"#utility.yul\":24816:24818   */\n      0x40\n        /* \"#utility.yul\":24805:24814   */\n      dup3\n        /* \"#utility.yul\":24801:24819   */\n      add\n        /* \"#utility.yul\":24793:24819   */\n      swap1\n      pop\n        /* \"#utility.yul\":24829:24900   */\n      tag_700\n        /* \"#utility.yul\":24897:24898   */\n      0x00\n        /* \"#utility.yul\":24886:24895   */\n      dup4\n        /* \"#utility.yul\":24882:24899   */\n      add\n        /* \"#utility.yul\":24873:24879   */\n      dup6\n        /* \"#utility.yul\":24829:24900   */\n      tag_389\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":24910:24982   */\n      tag_701\n        /* \"#utility.yul\":24978:24980   */\n      0x20\n        /* \"#utility.yul\":24967:24976   */\n      dup4\n        /* \"#utility.yul\":24963:24981   */\n      add\n        /* \"#utility.yul\":24954:24960   */\n      dup5\n        /* \"#utility.yul\":24910:24982   */\n      tag_400\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":24657:24989   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204518b542256653e2823304d81d9c9d36f7d9f5ac04603b37c51489212cc52fc264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3092": {
									"entryPoint": null,
									"id": 3092,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addAdditionalOwner_3196": {
									"entryPoint": 921,
									"id": 3196,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 726,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2182,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1583,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2140,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1177,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1132,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1979,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1983,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1975,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10407:14",
										"nodeType": "YulBlock",
										"src": "0:10407:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:14",
													"nodeType": "YulBlock",
													"src": "66:40:14",
													"statements": [
														{
															"nativeSrc": "77:22:14",
															"nodeType": "YulAssignment",
															"src": "77:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:14"
																},
																"nativeSrc": "87:12:14",
																"nodeType": "YulFunctionCall",
																"src": "87:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:14",
														"nodeType": "YulTypedName",
														"src": "49:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:14",
														"nodeType": "YulTypedName",
														"src": "59:6:14",
														"type": ""
													}
												],
												"src": "7:99:14"
											},
											{
												"body": {
													"nativeSrc": "140:152:14",
													"nodeType": "YulBlock",
													"src": "140:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:14",
																		"nodeType": "YulLiteral",
																		"src": "157:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:14",
																		"nodeType": "YulLiteral",
																		"src": "160:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:14"
																},
																"nativeSrc": "150:88:14",
																"nodeType": "YulFunctionCall",
																"src": "150:88:14"
															},
															"nativeSrc": "150:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:14",
																		"nodeType": "YulLiteral",
																		"src": "254:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:14",
																		"nodeType": "YulLiteral",
																		"src": "257:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:14"
																},
																"nativeSrc": "247:15:14",
																"nodeType": "YulFunctionCall",
																"src": "247:15:14"
															},
															"nativeSrc": "247:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:14",
																		"nodeType": "YulLiteral",
																		"src": "278:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:14",
																		"nodeType": "YulLiteral",
																		"src": "281:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:14"
																},
																"nativeSrc": "271:15:14",
																"nodeType": "YulFunctionCall",
																"src": "271:15:14"
															},
															"nativeSrc": "271:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:14"
											},
											{
												"body": {
													"nativeSrc": "326:152:14",
													"nodeType": "YulBlock",
													"src": "326:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:14",
																		"nodeType": "YulLiteral",
																		"src": "343:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:14",
																		"nodeType": "YulLiteral",
																		"src": "346:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:14"
																},
																"nativeSrc": "336:88:14",
																"nodeType": "YulFunctionCall",
																"src": "336:88:14"
															},
															"nativeSrc": "336:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:14",
																		"nodeType": "YulLiteral",
																		"src": "440:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:14",
																		"nodeType": "YulLiteral",
																		"src": "443:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:14"
																},
																"nativeSrc": "433:15:14",
																"nodeType": "YulFunctionCall",
																"src": "433:15:14"
															},
															"nativeSrc": "433:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:14",
																		"nodeType": "YulLiteral",
																		"src": "464:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:14",
																		"nodeType": "YulLiteral",
																		"src": "467:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:14"
																},
																"nativeSrc": "457:15:14",
																"nodeType": "YulFunctionCall",
																"src": "457:15:14"
															},
															"nativeSrc": "457:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:14"
											},
											{
												"body": {
													"nativeSrc": "535:269:14",
													"nodeType": "YulBlock",
													"src": "535:269:14",
													"statements": [
														{
															"nativeSrc": "545:22:14",
															"nodeType": "YulAssignment",
															"src": "545:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:14",
																		"nodeType": "YulLiteral",
																		"src": "565:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:14"
																},
																"nativeSrc": "555:12:14",
																"nodeType": "YulFunctionCall",
																"src": "555:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:14"
																}
															]
														},
														{
															"nativeSrc": "576:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:14",
																		"nodeType": "YulLiteral",
																		"src": "612:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:14"
																},
																"nativeSrc": "602:12:14",
																"nodeType": "YulFunctionCall",
																"src": "602:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:14",
																	"nodeType": "YulTypedName",
																	"src": "580:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:14",
																"nodeType": "YulBlock",
																"src": "653:51:14",
																"statements": [
																	{
																		"nativeSrc": "667:27:14",
																		"nodeType": "YulAssignment",
																		"src": "667:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:14",
																					"nodeType": "YulLiteral",
																					"src": "689:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:14"
																			},
																			"nativeSrc": "677:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:14"
																},
																"nativeSrc": "626:26:14",
																"nodeType": "YulFunctionCall",
																"src": "626:26:14"
															},
															"nativeSrc": "623:81:14",
															"nodeType": "YulIf",
															"src": "623:81:14"
														},
														{
															"body": {
																"nativeSrc": "756:42:14",
																"nodeType": "YulBlock",
																"src": "756:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:14"
																			},
																			"nativeSrc": "770:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:14"
																		},
																		"nativeSrc": "770:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:14",
																				"nodeType": "YulLiteral",
																				"src": "751:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:14"
																		},
																		"nativeSrc": "740:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:14"
																},
																"nativeSrc": "717:38:14",
																"nodeType": "YulFunctionCall",
																"src": "717:38:14"
															},
															"nativeSrc": "714:84:14",
															"nodeType": "YulIf",
															"src": "714:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:14",
														"nodeType": "YulTypedName",
														"src": "519:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:14",
														"nodeType": "YulTypedName",
														"src": "528:6:14",
														"type": ""
													}
												],
												"src": "484:320:14"
											},
											{
												"body": {
													"nativeSrc": "864:87:14",
													"nodeType": "YulBlock",
													"src": "864:87:14",
													"statements": [
														{
															"nativeSrc": "874:11:14",
															"nodeType": "YulAssignment",
															"src": "874:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:14",
																"nodeType": "YulIdentifier",
																"src": "882:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:14",
																		"nodeType": "YulLiteral",
																		"src": "902:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:14"
																},
																"nativeSrc": "895:14:14",
																"nodeType": "YulFunctionCall",
																"src": "895:14:14"
															},
															"nativeSrc": "895:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:14"
														},
														{
															"nativeSrc": "918:26:14",
															"nodeType": "YulAssignment",
															"src": "918:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:14",
																		"nodeType": "YulLiteral",
																		"src": "936:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:14",
																		"nodeType": "YulLiteral",
																		"src": "939:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:14"
																},
																"nativeSrc": "926:18:14",
																"nodeType": "YulFunctionCall",
																"src": "926:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:14",
														"nodeType": "YulTypedName",
														"src": "851:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:14",
														"nodeType": "YulTypedName",
														"src": "859:4:14",
														"type": ""
													}
												],
												"src": "810:141:14"
											},
											{
												"body": {
													"nativeSrc": "1001:49:14",
													"nodeType": "YulBlock",
													"src": "1001:49:14",
													"statements": [
														{
															"nativeSrc": "1011:33:14",
															"nodeType": "YulAssignment",
															"src": "1011:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:14"
																		},
																		"nativeSrc": "1025:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:14"
																},
																"nativeSrc": "1021:23:14",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:14",
														"nodeType": "YulTypedName",
														"src": "984:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:14",
														"nodeType": "YulTypedName",
														"src": "994:6:14",
														"type": ""
													}
												],
												"src": "957:93:14"
											},
											{
												"body": {
													"nativeSrc": "1109:54:14",
													"nodeType": "YulBlock",
													"src": "1109:54:14",
													"statements": [
														{
															"nativeSrc": "1119:37:14",
															"nodeType": "YulAssignment",
															"src": "1119:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:14"
																},
																"nativeSrc": "1140:16:14",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:14",
														"nodeType": "YulTypedName",
														"src": "1084:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:14",
														"nodeType": "YulTypedName",
														"src": "1090:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:14",
														"nodeType": "YulTypedName",
														"src": "1100:8:14",
														"type": ""
													}
												],
												"src": "1056:107:14"
											},
											{
												"body": {
													"nativeSrc": "1245:317:14",
													"nodeType": "YulBlock",
													"src": "1245:317:14",
													"statements": [
														{
															"nativeSrc": "1255:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:14"
																},
																"nativeSrc": "1272:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:14",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:14",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:14"
																},
																"nativeSrc": "1311:97:14",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:14",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:14",
															"nodeType": "YulAssignment",
															"src": "1417:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:14"
																},
																"nativeSrc": "1429:39:14",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:14"
																}
															]
														},
														{
															"nativeSrc": "1477:30:14",
															"nodeType": "YulAssignment",
															"src": "1477:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:14"
																		},
																		"nativeSrc": "1497:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:14"
																},
																"nativeSrc": "1486:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:14"
																}
															]
														},
														{
															"nativeSrc": "1516:40:14",
															"nodeType": "YulAssignment",
															"src": "1516:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:14"
																		},
																		"nativeSrc": "1536:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:14"
																},
																"nativeSrc": "1526:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:14",
														"nodeType": "YulTypedName",
														"src": "1206:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:14",
														"nodeType": "YulTypedName",
														"src": "1213:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:14",
														"nodeType": "YulTypedName",
														"src": "1225:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:14",
														"nodeType": "YulTypedName",
														"src": "1238:6:14",
														"type": ""
													}
												],
												"src": "1169:393:14"
											},
											{
												"body": {
													"nativeSrc": "1613:32:14",
													"nodeType": "YulBlock",
													"src": "1613:32:14",
													"statements": [
														{
															"nativeSrc": "1623:16:14",
															"nodeType": "YulAssignment",
															"src": "1623:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:14",
																"nodeType": "YulIdentifier",
																"src": "1634:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:14",
														"nodeType": "YulTypedName",
														"src": "1595:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:14",
														"nodeType": "YulTypedName",
														"src": "1605:7:14",
														"type": ""
													}
												],
												"src": "1568:77:14"
											},
											{
												"body": {
													"nativeSrc": "1683:28:14",
													"nodeType": "YulBlock",
													"src": "1683:28:14",
													"statements": [
														{
															"nativeSrc": "1693:12:14",
															"nodeType": "YulAssignment",
															"src": "1693:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:14",
																"nodeType": "YulIdentifier",
																"src": "1700:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:14",
														"nodeType": "YulTypedName",
														"src": "1669:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:14",
														"nodeType": "YulTypedName",
														"src": "1679:3:14",
														"type": ""
													}
												],
												"src": "1651:60:14"
											},
											{
												"body": {
													"nativeSrc": "1777:82:14",
													"nodeType": "YulBlock",
													"src": "1777:82:14",
													"statements": [
														{
															"nativeSrc": "1787:66:14",
															"nodeType": "YulAssignment",
															"src": "1787:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:14"
																				},
																				"nativeSrc": "1827:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:14"
																		},
																		"nativeSrc": "1818:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:14"
																},
																"nativeSrc": "1800:53:14",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:14",
														"nodeType": "YulTypedName",
														"src": "1757:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:14",
														"nodeType": "YulTypedName",
														"src": "1767:9:14",
														"type": ""
													}
												],
												"src": "1717:142:14"
											},
											{
												"body": {
													"nativeSrc": "1912:28:14",
													"nodeType": "YulBlock",
													"src": "1912:28:14",
													"statements": [
														{
															"nativeSrc": "1922:12:14",
															"nodeType": "YulAssignment",
															"src": "1922:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:14",
																"nodeType": "YulIdentifier",
																"src": "1929:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:14",
														"nodeType": "YulTypedName",
														"src": "1898:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:14",
														"nodeType": "YulTypedName",
														"src": "1908:3:14",
														"type": ""
													}
												],
												"src": "1865:75:14"
											},
											{
												"body": {
													"nativeSrc": "2022:193:14",
													"nodeType": "YulBlock",
													"src": "2022:193:14",
													"statements": [
														{
															"nativeSrc": "2032:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:14"
																},
																"nativeSrc": "2056:39:14",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:14",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:14"
																				},
																				"nativeSrc": "2145:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:14"
																				},
																				"nativeSrc": "2166:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:14"
																		},
																		"nativeSrc": "2117:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:14"
																},
																"nativeSrc": "2104:105:14",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:14"
															},
															"nativeSrc": "2104:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:14",
														"nodeType": "YulTypedName",
														"src": "1999:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:14",
														"nodeType": "YulTypedName",
														"src": "2005:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:14",
														"nodeType": "YulTypedName",
														"src": "2013:7:14",
														"type": ""
													}
												],
												"src": "1946:269:14"
											},
											{
												"body": {
													"nativeSrc": "2270:24:14",
													"nodeType": "YulBlock",
													"src": "2270:24:14",
													"statements": [
														{
															"nativeSrc": "2280:8:14",
															"nodeType": "YulAssignment",
															"src": "2280:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:14",
																"nodeType": "YulLiteral",
																"src": "2287:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:14",
														"nodeType": "YulTypedName",
														"src": "2266:3:14",
														"type": ""
													}
												],
												"src": "2221:73:14"
											},
											{
												"body": {
													"nativeSrc": "2353:136:14",
													"nodeType": "YulBlock",
													"src": "2353:136:14",
													"statements": [
														{
															"nativeSrc": "2363:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:14"
																},
																"nativeSrc": "2377:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:14"
																},
																"nativeSrc": "2418:65:14",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:14"
															},
															"nativeSrc": "2418:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:14",
														"nodeType": "YulTypedName",
														"src": "2339:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:14",
														"nodeType": "YulTypedName",
														"src": "2345:6:14",
														"type": ""
													}
												],
												"src": "2300:189:14"
											},
											{
												"body": {
													"nativeSrc": "2545:136:14",
													"nodeType": "YulBlock",
													"src": "2545:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:14",
																"nodeType": "YulBlock",
																"src": "2612:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:14"
																			},
																			"nativeSrc": "2626:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:14"
																		},
																		"nativeSrc": "2626:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:14"
																},
																"nativeSrc": "2562:14:14",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:14"
															},
															"nativeSrc": "2555:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:14",
																"nodeType": "YulBlock",
																"src": "2577:26:14",
																"statements": [
																	{
																		"nativeSrc": "2579:22:14",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:14"
																			},
																			"nativeSrc": "2588:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:14",
																"nodeType": "YulBlock",
																"src": "2559:2:14",
																"statements": []
															},
															"src": "2555:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:14",
														"nodeType": "YulTypedName",
														"src": "2533:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:14",
														"nodeType": "YulTypedName",
														"src": "2540:3:14",
														"type": ""
													}
												],
												"src": "2495:186:14"
											},
											{
												"body": {
													"nativeSrc": "2766:464:14",
													"nodeType": "YulBlock",
													"src": "2766:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:14",
																"nodeType": "YulBlock",
																"src": "2792:431:14",
																"statements": [
																	{
																		"nativeSrc": "2806:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:14"
																			},
																			"nativeSrc": "2822:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:14",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:14"
																					},
																					"nativeSrc": "2906:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:14"
																			},
																			"nativeSrc": "2892:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:14",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:14",
																			"nodeType": "YulBlock",
																			"src": "3093:27:14",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:14",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:14",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:14"
																			},
																			"nativeSrc": "3074:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:14"
																		},
																		"nativeSrc": "3071:49:14",
																		"nodeType": "YulIf",
																		"src": "3071:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:14"
																							},
																							"nativeSrc": "3189:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:14"
																					},
																					"nativeSrc": "3175:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:14"
																			},
																			"nativeSrc": "3133:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:14"
																		},
																		"nativeSrc": "3133:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:14"
																},
																"nativeSrc": "2780:11:14",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:14"
															},
															"nativeSrc": "2777:446:14",
															"nodeType": "YulIf",
															"src": "2777:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:14",
														"nodeType": "YulTypedName",
														"src": "2742:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:14",
														"nodeType": "YulTypedName",
														"src": "2749:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:14",
														"nodeType": "YulTypedName",
														"src": "2754:10:14",
														"type": ""
													}
												],
												"src": "2687:543:14"
											},
											{
												"body": {
													"nativeSrc": "3299:54:14",
													"nodeType": "YulBlock",
													"src": "3299:54:14",
													"statements": [
														{
															"nativeSrc": "3309:37:14",
															"nodeType": "YulAssignment",
															"src": "3309:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:14"
																},
																"nativeSrc": "3330:16:14",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:14",
														"nodeType": "YulTypedName",
														"src": "3274:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:14",
														"nodeType": "YulTypedName",
														"src": "3280:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:14",
														"nodeType": "YulTypedName",
														"src": "3290:8:14",
														"type": ""
													}
												],
												"src": "3236:117:14"
											},
											{
												"body": {
													"nativeSrc": "3410:118:14",
													"nodeType": "YulBlock",
													"src": "3410:118:14",
													"statements": [
														{
															"nativeSrc": "3420:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:14",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:14"
																				},
																				"nativeSrc": "3465:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:14",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:14"
																				},
																				"nativeSrc": "3480:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:14"
																		},
																		"nativeSrc": "3436:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:14"
																},
																"nativeSrc": "3432:56:14",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:14",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:14",
															"nodeType": "YulAssignment",
															"src": "3497:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:14"
																},
																"nativeSrc": "3507:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:14",
														"nodeType": "YulTypedName",
														"src": "3387:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:14",
														"nodeType": "YulTypedName",
														"src": "3393:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:14",
														"nodeType": "YulTypedName",
														"src": "3403:6:14",
														"type": ""
													}
												],
												"src": "3359:169:14"
											},
											{
												"body": {
													"nativeSrc": "3614:214:14",
													"nodeType": "YulBlock",
													"src": "3614:214:14",
													"statements": [
														{
															"nativeSrc": "3747:37:14",
															"nodeType": "YulAssignment",
															"src": "3747:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:14"
																},
																"nativeSrc": "3755:29:14",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:14"
																}
															]
														},
														{
															"nativeSrc": "3793:29:14",
															"nodeType": "YulAssignment",
															"src": "3793:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:14"
																		},
																		"nativeSrc": "3810:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:14"
																},
																"nativeSrc": "3801:21:14",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:14",
														"nodeType": "YulTypedName",
														"src": "3595:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:14",
														"nodeType": "YulTypedName",
														"src": "3601:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:14",
														"nodeType": "YulTypedName",
														"src": "3609:4:14",
														"type": ""
													}
												],
												"src": "3533:295:14"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:14",
													"nodeType": "YulBlock",
													"src": "3925:1303:14",
													"statements": [
														{
															"nativeSrc": "3936:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:14"
																},
																"nativeSrc": "3950:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:14",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:14",
																"nodeType": "YulBlock",
																"src": "4072:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:14"
																			},
																			"nativeSrc": "4074:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:14"
																		},
																		"nativeSrc": "4074:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:14",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:14"
																},
																"nativeSrc": "4041:30:14",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:14"
															},
															"nativeSrc": "4038:56:14",
															"nodeType": "YulIf",
															"src": "4038:56:14"
														},
														{
															"nativeSrc": "4104:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:14"
																		},
																		"nativeSrc": "4144:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:14"
																},
																"nativeSrc": "4118:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:14",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:14"
																},
																"nativeSrc": "4203:67:14",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:14"
															},
															"nativeSrc": "4203:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:14"
														},
														{
															"nativeSrc": "4280:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:14",
																"nodeType": "YulLiteral",
																"src": "4297:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:14",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:14",
															"nodeType": "YulAssignment",
															"src": "4308:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:14",
																"nodeType": "YulLiteral",
																"src": "4321:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:14",
																		"nodeType": "YulBlock",
																		"src": "4372:611:14",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:14",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:14"
																							},
																							"nativeSrc": "4413:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:14"
																					},
																					"nativeSrc": "4401:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:14",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:14"
																					},
																					"nativeSrc": "4451:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:14",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:14",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:14",
																					"nodeType": "YulBlock",
																					"src": "4569:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:14"
																												},
																												"nativeSrc": "4608:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:14"
																										},
																										"nativeSrc": "4602:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:14"
																								},
																								"nativeSrc": "4587:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:14"
																							},
																							"nativeSrc": "4587:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:14"
																						},
																						{
																							"nativeSrc": "4646:24:14",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:14",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:14"
																								},
																								"nativeSrc": "4656:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:14",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:14",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:14"
																								},
																								"nativeSrc": "4700:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:14"
																					},
																					"nativeSrc": "4532:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:14"
																				},
																				"nativeSrc": "4524:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:14",
																					"nodeType": "YulBlock",
																					"src": "4547:21:14",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:14",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:14",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:14"
																								},
																								"nativeSrc": "4554:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:14",
																					"nodeType": "YulBlock",
																					"src": "4528:3:14",
																					"statements": []
																				},
																				"src": "4524:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:14",
																					"nodeType": "YulBlock",
																					"src": "4768:156:14",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:14"
																										},
																										"nativeSrc": "4809:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:14"
																								},
																								"nativeSrc": "4803:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:14",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:14",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:14"
																												},
																												"nativeSrc": "4891:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:14"
																										},
																										"nativeSrc": "4861:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:14"
																								},
																								"nativeSrc": "4846:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:14"
																							},
																							"nativeSrc": "4846:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:14"
																					},
																					"nativeSrc": "4748:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:14"
																				},
																				"nativeSrc": "4745:179:14",
																				"nodeType": "YulIf",
																				"src": "4745:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:14",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:14"
																									},
																									"nativeSrc": "4954:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:14",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:14"
																							},
																							"nativeSrc": "4950:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:14"
																					},
																					"nativeSrc": "4937:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:14"
																				},
																				"nativeSrc": "4937:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:14"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:14",
																	"nodeType": "YulCase",
																	"src": "4365:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:14",
																		"nodeType": "YulBlock",
																		"src": "5000:222:14",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:14",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:14",
																					"nodeType": "YulBlock",
																					"src": "5051:67:14",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:14",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:14"
																										},
																										"nativeSrc": "5084:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:14"
																								},
																								"nativeSrc": "5078:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:14"
																				},
																				"nativeSrc": "5041:77:14",
																				"nodeType": "YulIf",
																				"src": "5041:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:14"
																							},
																							"nativeSrc": "5144:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:14"
																					},
																					"nativeSrc": "5131:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:14"
																				},
																				"nativeSrc": "5131:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:14"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:14",
																	"nodeType": "YulCase",
																	"src": "4992:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:14"
																},
																"nativeSrc": "4342:14:14",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:14"
															},
															"nativeSrc": "4335:887:14",
															"nodeType": "YulSwitch",
															"src": "4335:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:14",
														"nodeType": "YulTypedName",
														"src": "3914:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:14",
														"nodeType": "YulTypedName",
														"src": "3920:3:14",
														"type": ""
													}
												],
												"src": "3833:1395:14"
											},
											{
												"body": {
													"nativeSrc": "5274:35:14",
													"nodeType": "YulBlock",
													"src": "5274:35:14",
													"statements": [
														{
															"nativeSrc": "5284:19:14",
															"nodeType": "YulAssignment",
															"src": "5284:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5300:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5300:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5294:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5294:5:14"
																},
																"nativeSrc": "5294:9:14",
																"nodeType": "YulFunctionCall",
																"src": "5294:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5284:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5284:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "5234:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5267:6:14",
														"nodeType": "YulTypedName",
														"src": "5267:6:14",
														"type": ""
													}
												],
												"src": "5234:75:14"
											},
											{
												"body": {
													"nativeSrc": "5404:28:14",
													"nodeType": "YulBlock",
													"src": "5404:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5421:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5421:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5424:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5424:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5414:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:14"
																},
																"nativeSrc": "5414:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5414:12:14"
															},
															"nativeSrc": "5414:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "5414:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "5315:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5315:117:14"
											},
											{
												"body": {
													"nativeSrc": "5527:28:14",
													"nodeType": "YulBlock",
													"src": "5527:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5544:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5544:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5547:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5547:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5537:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:14"
																},
																"nativeSrc": "5537:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5537:12:14"
															},
															"nativeSrc": "5537:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "5537:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "5438:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5438:117:14"
											},
											{
												"body": {
													"nativeSrc": "5650:28:14",
													"nodeType": "YulBlock",
													"src": "5650:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5667:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5670:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5670:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5660:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:14"
																},
																"nativeSrc": "5660:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5660:12:14"
															},
															"nativeSrc": "5660:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "5660:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5561:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:117:14"
											},
											{
												"body": {
													"nativeSrc": "5773:28:14",
													"nodeType": "YulBlock",
													"src": "5773:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5790:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5790:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5793:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5793:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5783:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:14"
																},
																"nativeSrc": "5783:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5783:12:14"
															},
															"nativeSrc": "5783:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "5783:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5684:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5684:117:14"
											},
											{
												"body": {
													"nativeSrc": "5855:54:14",
													"nodeType": "YulBlock",
													"src": "5855:54:14",
													"statements": [
														{
															"nativeSrc": "5865:38:14",
															"nodeType": "YulAssignment",
															"src": "5865:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5883:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5883:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5890:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5890:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5879:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5879:3:14"
																		},
																		"nativeSrc": "5879:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5879:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5899:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5899:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5895:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:14"
																		},
																		"nativeSrc": "5895:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5895:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5875:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:14"
																},
																"nativeSrc": "5875:28:14",
																"nodeType": "YulFunctionCall",
																"src": "5875:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5865:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5865:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5807:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5838:5:14",
														"nodeType": "YulTypedName",
														"src": "5838:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5848:6:14",
														"nodeType": "YulTypedName",
														"src": "5848:6:14",
														"type": ""
													}
												],
												"src": "5807:102:14"
											},
											{
												"body": {
													"nativeSrc": "5958:238:14",
													"nodeType": "YulBlock",
													"src": "5958:238:14",
													"statements": [
														{
															"nativeSrc": "5968:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5968:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5990:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5990:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6020:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6020:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5998:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "5998:21:14"
																		},
																		"nativeSrc": "5998:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5998:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5986:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5986:3:14"
																},
																"nativeSrc": "5986:40:14",
																"nodeType": "YulFunctionCall",
																"src": "5986:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5972:10:14",
																	"nodeType": "YulTypedName",
																	"src": "5972:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6137:22:14",
																"nodeType": "YulBlock",
																"src": "6137:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6139:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6139:16:14"
																			},
																			"nativeSrc": "6139:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6139:18:14"
																		},
																		"nativeSrc": "6139:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6139:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6080:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "6080:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6092:18:14",
																				"nodeType": "YulLiteral",
																				"src": "6092:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6077:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6077:2:14"
																		},
																		"nativeSrc": "6077:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6077:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6116:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "6116:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6128:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6128:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6113:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6113:2:14"
																		},
																		"nativeSrc": "6113:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6113:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6074:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6074:2:14"
																},
																"nativeSrc": "6074:62:14",
																"nodeType": "YulFunctionCall",
																"src": "6074:62:14"
															},
															"nativeSrc": "6071:88:14",
															"nodeType": "YulIf",
															"src": "6071:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6175:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6175:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6179:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "6179:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6168:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6168:6:14"
																},
																"nativeSrc": "6168:22:14",
																"nodeType": "YulFunctionCall",
																"src": "6168:22:14"
															},
															"nativeSrc": "6168:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "6168:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5915:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5944:6:14",
														"nodeType": "YulTypedName",
														"src": "5944:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5952:4:14",
														"nodeType": "YulTypedName",
														"src": "5952:4:14",
														"type": ""
													}
												],
												"src": "5915:281:14"
											},
											{
												"body": {
													"nativeSrc": "6243:88:14",
													"nodeType": "YulBlock",
													"src": "6243:88:14",
													"statements": [
														{
															"nativeSrc": "6253:30:14",
															"nodeType": "YulAssignment",
															"src": "6253:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6263:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "6263:18:14"
																},
																"nativeSrc": "6263:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6263:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6253:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6253:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6312:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6312:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6320:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6320:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6292:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "6292:19:14"
																},
																"nativeSrc": "6292:33:14",
																"nodeType": "YulFunctionCall",
																"src": "6292:33:14"
															},
															"nativeSrc": "6292:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "6292:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6202:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6227:4:14",
														"nodeType": "YulTypedName",
														"src": "6227:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6236:6:14",
														"nodeType": "YulTypedName",
														"src": "6236:6:14",
														"type": ""
													}
												],
												"src": "6202:129:14"
											},
											{
												"body": {
													"nativeSrc": "6404:241:14",
													"nodeType": "YulBlock",
													"src": "6404:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6509:22:14",
																"nodeType": "YulBlock",
																"src": "6509:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6511:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6511:16:14"
																			},
																			"nativeSrc": "6511:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6511:18:14"
																		},
																		"nativeSrc": "6511:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6511:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6481:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6481:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6489:18:14",
																		"nodeType": "YulLiteral",
																		"src": "6489:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6478:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6478:2:14"
																},
																"nativeSrc": "6478:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6478:30:14"
															},
															"nativeSrc": "6475:56:14",
															"nodeType": "YulIf",
															"src": "6475:56:14"
														},
														{
															"nativeSrc": "6541:37:14",
															"nodeType": "YulAssignment",
															"src": "6541:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6571:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6549:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "6549:21:14"
																},
																"nativeSrc": "6549:29:14",
																"nodeType": "YulFunctionCall",
																"src": "6549:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6541:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6541:4:14"
																}
															]
														},
														{
															"nativeSrc": "6615:23:14",
															"nodeType": "YulAssignment",
															"src": "6615:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6627:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6627:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6633:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6633:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6623:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6623:3:14"
																},
																"nativeSrc": "6623:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6623:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6615:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6615:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6337:308:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6388:6:14",
														"nodeType": "YulTypedName",
														"src": "6388:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6399:4:14",
														"nodeType": "YulTypedName",
														"src": "6399:4:14",
														"type": ""
													}
												],
												"src": "6337:308:14"
											},
											{
												"body": {
													"nativeSrc": "6713:184:14",
													"nodeType": "YulBlock",
													"src": "6713:184:14",
													"statements": [
														{
															"nativeSrc": "6723:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6723:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "6732:1:14",
																"nodeType": "YulLiteral",
																"src": "6732:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6727:1:14",
																	"nodeType": "YulTypedName",
																	"src": "6727:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6792:63:14",
																"nodeType": "YulBlock",
																"src": "6792:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "6817:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "6817:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6822:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "6822:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6813:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "6813:3:14"
																					},
																					"nativeSrc": "6813:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6813:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "6836:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "6836:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6841:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "6841:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6832:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "6832:3:14"
																							},
																							"nativeSrc": "6832:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6832:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6826:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "6826:5:14"
																					},
																					"nativeSrc": "6826:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6826:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6806:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6806:6:14"
																			},
																			"nativeSrc": "6806:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6806:39:14"
																		},
																		"nativeSrc": "6806:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6806:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6753:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6753:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6756:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6756:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6750:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6750:2:14"
																},
																"nativeSrc": "6750:13:14",
																"nodeType": "YulFunctionCall",
																"src": "6750:13:14"
															},
															"nativeSrc": "6742:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6764:19:14",
																"nodeType": "YulBlock",
																"src": "6764:19:14",
																"statements": [
																	{
																		"nativeSrc": "6766:15:14",
																		"nodeType": "YulAssignment",
																		"src": "6766:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6775:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "6775:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6778:2:14",
																					"nodeType": "YulLiteral",
																					"src": "6778:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6771:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6771:3:14"
																			},
																			"nativeSrc": "6771:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6771:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6766:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "6766:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6746:3:14",
																"nodeType": "YulBlock",
																"src": "6746:3:14",
																"statements": []
															},
															"src": "6742:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6875:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6875:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6880:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6880:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6871:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6871:3:14"
																		},
																		"nativeSrc": "6871:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6871:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6889:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6889:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6864:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6864:6:14"
																},
																"nativeSrc": "6864:27:14",
																"nodeType": "YulFunctionCall",
																"src": "6864:27:14"
															},
															"nativeSrc": "6864:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "6864:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6651:246:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6695:3:14",
														"nodeType": "YulTypedName",
														"src": "6695:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6700:3:14",
														"nodeType": "YulTypedName",
														"src": "6700:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6705:6:14",
														"nodeType": "YulTypedName",
														"src": "6705:6:14",
														"type": ""
													}
												],
												"src": "6651:246:14"
											},
											{
												"body": {
													"nativeSrc": "6998:339:14",
													"nodeType": "YulBlock",
													"src": "6998:339:14",
													"statements": [
														{
															"nativeSrc": "7008:75:14",
															"nodeType": "YulAssignment",
															"src": "7008:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7075:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7075:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "7033:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "7033:41:14"
																		},
																		"nativeSrc": "7033:49:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7033:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7017:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "7017:15:14"
																},
																"nativeSrc": "7017:66:14",
																"nodeType": "YulFunctionCall",
																"src": "7017:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7008:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7008:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7099:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7099:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7106:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7106:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7092:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7092:6:14"
																},
																"nativeSrc": "7092:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7092:21:14"
															},
															"nativeSrc": "7092:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7092:21:14"
														},
														{
															"nativeSrc": "7122:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7122:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7137:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7137:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7144:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7144:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7133:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7133:3:14"
																},
																"nativeSrc": "7133:16:14",
																"nodeType": "YulFunctionCall",
																"src": "7133:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7126:3:14",
																	"nodeType": "YulTypedName",
																	"src": "7126:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7187:83:14",
																"nodeType": "YulBlock",
																"src": "7187:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7189:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7189:77:14"
																			},
																			"nativeSrc": "7189:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7189:79:14"
																		},
																		"nativeSrc": "7189:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7189:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7168:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7168:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7173:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7173:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7164:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7164:3:14"
																		},
																		"nativeSrc": "7164:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7164:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7182:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7182:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7161:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7161:2:14"
																},
																"nativeSrc": "7161:25:14",
																"nodeType": "YulFunctionCall",
																"src": "7161:25:14"
															},
															"nativeSrc": "7158:112:14",
															"nodeType": "YulIf",
															"src": "7158:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7314:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7314:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7319:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7319:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7324:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7324:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7279:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "7279:34:14"
																},
																"nativeSrc": "7279:52:14",
																"nodeType": "YulFunctionCall",
																"src": "7279:52:14"
															},
															"nativeSrc": "7279:52:14",
															"nodeType": "YulExpressionStatement",
															"src": "7279:52:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "6903:434:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6971:3:14",
														"nodeType": "YulTypedName",
														"src": "6971:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6976:6:14",
														"nodeType": "YulTypedName",
														"src": "6976:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6984:3:14",
														"nodeType": "YulTypedName",
														"src": "6984:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6992:5:14",
														"nodeType": "YulTypedName",
														"src": "6992:5:14",
														"type": ""
													}
												],
												"src": "6903:434:14"
											},
											{
												"body": {
													"nativeSrc": "7430:282:14",
													"nodeType": "YulBlock",
													"src": "7430:282:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7479:83:14",
																"nodeType": "YulBlock",
																"src": "7479:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7481:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7481:77:14"
																			},
																			"nativeSrc": "7481:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7481:79:14"
																		},
																		"nativeSrc": "7481:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7481:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7458:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7458:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7466:4:14",
																						"nodeType": "YulLiteral",
																						"src": "7466:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7454:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7454:3:14"
																				},
																				"nativeSrc": "7454:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7454:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7473:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7473:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7450:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:14"
																		},
																		"nativeSrc": "7450:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7450:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7443:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7443:6:14"
																},
																"nativeSrc": "7443:35:14",
																"nodeType": "YulFunctionCall",
																"src": "7443:35:14"
															},
															"nativeSrc": "7440:122:14",
															"nodeType": "YulIf",
															"src": "7440:122:14"
														},
														{
															"nativeSrc": "7571:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7571:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7591:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7591:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7585:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7585:5:14"
																},
																"nativeSrc": "7585:13:14",
																"nodeType": "YulFunctionCall",
																"src": "7585:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7575:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7575:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7607:99:14",
															"nodeType": "YulAssignment",
															"src": "7607:99:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7679:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7679:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7687:4:14",
																				"nodeType": "YulLiteral",
																				"src": "7687:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7675:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7675:3:14"
																		},
																		"nativeSrc": "7675:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7675:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7694:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7694:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7702:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7702:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "7616:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "7616:58:14"
																},
																"nativeSrc": "7616:90:14",
																"nodeType": "YulFunctionCall",
																"src": "7616:90:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7607:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7607:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "7357:355:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7408:6:14",
														"nodeType": "YulTypedName",
														"src": "7408:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7416:3:14",
														"nodeType": "YulTypedName",
														"src": "7416:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7424:5:14",
														"nodeType": "YulTypedName",
														"src": "7424:5:14",
														"type": ""
													}
												],
												"src": "7357:355:14"
											},
											{
												"body": {
													"nativeSrc": "7763:81:14",
													"nodeType": "YulBlock",
													"src": "7763:81:14",
													"statements": [
														{
															"nativeSrc": "7773:65:14",
															"nodeType": "YulAssignment",
															"src": "7773:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7788:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7788:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7795:42:14",
																		"nodeType": "YulLiteral",
																		"src": "7795:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7784:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7784:3:14"
																},
																"nativeSrc": "7784:54:14",
																"nodeType": "YulFunctionCall",
																"src": "7784:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7773:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "7773:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7718:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7745:5:14",
														"nodeType": "YulTypedName",
														"src": "7745:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7755:7:14",
														"nodeType": "YulTypedName",
														"src": "7755:7:14",
														"type": ""
													}
												],
												"src": "7718:126:14"
											},
											{
												"body": {
													"nativeSrc": "7895:51:14",
													"nodeType": "YulBlock",
													"src": "7895:51:14",
													"statements": [
														{
															"nativeSrc": "7905:35:14",
															"nodeType": "YulAssignment",
															"src": "7905:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7934:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7934:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7916:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "7916:17:14"
																},
																"nativeSrc": "7916:24:14",
																"nodeType": "YulFunctionCall",
																"src": "7916:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7905:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "7905:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "7850:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7877:5:14",
														"nodeType": "YulTypedName",
														"src": "7877:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7887:7:14",
														"nodeType": "YulTypedName",
														"src": "7887:7:14",
														"type": ""
													}
												],
												"src": "7850:96:14"
											},
											{
												"body": {
													"nativeSrc": "7995:79:14",
													"nodeType": "YulBlock",
													"src": "7995:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8052:16:14",
																"nodeType": "YulBlock",
																"src": "8052:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8061:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8061:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8064:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8064:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8054:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8054:6:14"
																			},
																			"nativeSrc": "8054:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8054:12:14"
																		},
																		"nativeSrc": "8054:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8054:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8018:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8018:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8043:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "8043:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "8025:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "8025:17:14"
																				},
																				"nativeSrc": "8025:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8025:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8015:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8015:2:14"
																		},
																		"nativeSrc": "8015:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8015:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8008:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8008:6:14"
																},
																"nativeSrc": "8008:43:14",
																"nodeType": "YulFunctionCall",
																"src": "8008:43:14"
															},
															"nativeSrc": "8005:63:14",
															"nodeType": "YulIf",
															"src": "8005:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "7952:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7988:5:14",
														"nodeType": "YulTypedName",
														"src": "7988:5:14",
														"type": ""
													}
												],
												"src": "7952:122:14"
											},
											{
												"body": {
													"nativeSrc": "8143:80:14",
													"nodeType": "YulBlock",
													"src": "8143:80:14",
													"statements": [
														{
															"nativeSrc": "8153:22:14",
															"nodeType": "YulAssignment",
															"src": "8153:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8168:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8168:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8162:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8162:5:14"
																},
																"nativeSrc": "8162:13:14",
																"nodeType": "YulFunctionCall",
																"src": "8162:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8153:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8153:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8211:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "8211:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "8184:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "8184:26:14"
																},
																"nativeSrc": "8184:33:14",
																"nodeType": "YulFunctionCall",
																"src": "8184:33:14"
															},
															"nativeSrc": "8184:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "8184:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "8080:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8121:6:14",
														"nodeType": "YulTypedName",
														"src": "8121:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8129:3:14",
														"nodeType": "YulTypedName",
														"src": "8129:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8137:5:14",
														"nodeType": "YulTypedName",
														"src": "8137:5:14",
														"type": ""
													}
												],
												"src": "8080:143:14"
											},
											{
												"body": {
													"nativeSrc": "8333:576:14",
													"nodeType": "YulBlock",
													"src": "8333:576:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8379:83:14",
																"nodeType": "YulBlock",
																"src": "8379:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8381:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "8381:77:14"
																			},
																			"nativeSrc": "8381:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8381:79:14"
																		},
																		"nativeSrc": "8381:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8381:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8354:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8354:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8363:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8363:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8350:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8350:3:14"
																		},
																		"nativeSrc": "8350:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8350:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8375:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8375:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8346:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8346:3:14"
																},
																"nativeSrc": "8346:32:14",
																"nodeType": "YulFunctionCall",
																"src": "8346:32:14"
															},
															"nativeSrc": "8343:119:14",
															"nodeType": "YulIf",
															"src": "8343:119:14"
														},
														{
															"nativeSrc": "8472:291:14",
															"nodeType": "YulBlock",
															"src": "8472:291:14",
															"statements": [
																{
																	"nativeSrc": "8487:38:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8487:38:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8511:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8511:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8522:1:14",
																						"nodeType": "YulLiteral",
																						"src": "8522:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8507:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8507:3:14"
																				},
																				"nativeSrc": "8507:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8507:17:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8501:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "8501:5:14"
																		},
																		"nativeSrc": "8501:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8501:24:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8491:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8491:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8572:83:14",
																		"nodeType": "YulBlock",
																		"src": "8572:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8574:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "8574:77:14"
																					},
																					"nativeSrc": "8574:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8574:79:14"
																				},
																				"nativeSrc": "8574:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8574:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8544:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8544:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8552:18:14",
																				"nodeType": "YulLiteral",
																				"src": "8552:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8541:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8541:2:14"
																		},
																		"nativeSrc": "8541:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8541:30:14"
																	},
																	"nativeSrc": "8538:117:14",
																	"nodeType": "YulIf",
																	"src": "8538:117:14"
																},
																{
																	"nativeSrc": "8669:84:14",
																	"nodeType": "YulAssignment",
																	"src": "8669:84:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8725:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8725:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8736:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8736:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8721:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8721:3:14"
																				},
																				"nativeSrc": "8721:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8721:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8745:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8745:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "8679:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "8679:41:14"
																		},
																		"nativeSrc": "8679:74:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8679:74:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8669:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8669:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8773:129:14",
															"nodeType": "YulBlock",
															"src": "8773:129:14",
															"statements": [
																{
																	"nativeSrc": "8788:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8788:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8802:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8802:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8792:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8792:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8818:74:14",
																	"nodeType": "YulAssignment",
																	"src": "8818:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8864:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8864:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8875:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8875:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8860:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8860:3:14"
																				},
																				"nativeSrc": "8860:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8860:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8884:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8884:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "8828:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "8828:31:14"
																		},
																		"nativeSrc": "8828:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8828:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8818:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8818:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address_fromMemory",
												"nativeSrc": "8229:680:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8295:9:14",
														"nodeType": "YulTypedName",
														"src": "8295:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8306:7:14",
														"nodeType": "YulTypedName",
														"src": "8306:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8318:6:14",
														"nodeType": "YulTypedName",
														"src": "8318:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8326:6:14",
														"nodeType": "YulTypedName",
														"src": "8326:6:14",
														"type": ""
													}
												],
												"src": "8229:680:14"
											},
											{
												"body": {
													"nativeSrc": "8980:53:14",
													"nodeType": "YulBlock",
													"src": "8980:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8997:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8997:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9020:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "9020:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9002:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "9002:17:14"
																		},
																		"nativeSrc": "9002:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9002:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8990:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8990:6:14"
																},
																"nativeSrc": "8990:37:14",
																"nodeType": "YulFunctionCall",
																"src": "8990:37:14"
															},
															"nativeSrc": "8990:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "8990:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8915:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8968:5:14",
														"nodeType": "YulTypedName",
														"src": "8968:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8975:3:14",
														"nodeType": "YulTypedName",
														"src": "8975:3:14",
														"type": ""
													}
												],
												"src": "8915:118:14"
											},
											{
												"body": {
													"nativeSrc": "9137:124:14",
													"nodeType": "YulBlock",
													"src": "9137:124:14",
													"statements": [
														{
															"nativeSrc": "9147:26:14",
															"nodeType": "YulAssignment",
															"src": "9147:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9159:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9159:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9170:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9170:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9155:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9155:3:14"
																},
																"nativeSrc": "9155:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9155:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9147:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9147:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9227:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9227:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9240:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9240:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9251:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9251:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9236:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9236:3:14"
																		},
																		"nativeSrc": "9236:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9236:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9183:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "9183:43:14"
																},
																"nativeSrc": "9183:71:14",
																"nodeType": "YulFunctionCall",
																"src": "9183:71:14"
															},
															"nativeSrc": "9183:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "9183:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9039:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9109:9:14",
														"nodeType": "YulTypedName",
														"src": "9109:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9121:6:14",
														"nodeType": "YulTypedName",
														"src": "9121:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9132:4:14",
														"nodeType": "YulTypedName",
														"src": "9132:4:14",
														"type": ""
													}
												],
												"src": "9039:222:14"
											},
											{
												"body": {
													"nativeSrc": "9363:73:14",
													"nodeType": "YulBlock",
													"src": "9363:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9380:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9380:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9385:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9385:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9373:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9373:6:14"
																},
																"nativeSrc": "9373:19:14",
																"nodeType": "YulFunctionCall",
																"src": "9373:19:14"
															},
															"nativeSrc": "9373:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "9373:19:14"
														},
														{
															"nativeSrc": "9401:29:14",
															"nodeType": "YulAssignment",
															"src": "9401:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9420:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9420:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9425:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9425:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9416:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9416:3:14"
																},
																"nativeSrc": "9416:14:14",
																"nodeType": "YulFunctionCall",
																"src": "9416:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9401:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "9401:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9267:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9335:3:14",
														"nodeType": "YulTypedName",
														"src": "9335:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9340:6:14",
														"nodeType": "YulTypedName",
														"src": "9340:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9351:11:14",
														"nodeType": "YulTypedName",
														"src": "9351:11:14",
														"type": ""
													}
												],
												"src": "9267:169:14"
											},
											{
												"body": {
													"nativeSrc": "9548:59:14",
													"nodeType": "YulBlock",
													"src": "9548:59:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9570:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9570:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9578:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9578:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9566:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9566:3:14"
																		},
																		"nativeSrc": "9566:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9566:14:14"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "9582:17:14",
																		"nodeType": "YulLiteral",
																		"src": "9582:17:14",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9559:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9559:6:14"
																},
																"nativeSrc": "9559:41:14",
																"nodeType": "YulFunctionCall",
																"src": "9559:41:14"
															},
															"nativeSrc": "9559:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "9559:41:14"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "9442:165:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9540:6:14",
														"nodeType": "YulTypedName",
														"src": "9540:6:14",
														"type": ""
													}
												],
												"src": "9442:165:14"
											},
											{
												"body": {
													"nativeSrc": "9759:220:14",
													"nodeType": "YulBlock",
													"src": "9759:220:14",
													"statements": [
														{
															"nativeSrc": "9769:74:14",
															"nodeType": "YulAssignment",
															"src": "9769:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9835:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9835:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9840:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9840:2:14",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9776:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "9776:58:14"
																},
																"nativeSrc": "9776:67:14",
																"nodeType": "YulFunctionCall",
																"src": "9776:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9769:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9769:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9941:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9941:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "9852:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "9852:88:14"
																},
																"nativeSrc": "9852:93:14",
																"nodeType": "YulFunctionCall",
																"src": "9852:93:14"
															},
															"nativeSrc": "9852:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "9852:93:14"
														},
														{
															"nativeSrc": "9954:19:14",
															"nodeType": "YulAssignment",
															"src": "9954:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9965:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9965:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9970:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9970:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9961:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9961:3:14"
																},
																"nativeSrc": "9961:12:14",
																"nodeType": "YulFunctionCall",
																"src": "9961:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9954:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9954:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9613:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9747:3:14",
														"nodeType": "YulTypedName",
														"src": "9747:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9755:3:14",
														"nodeType": "YulTypedName",
														"src": "9755:3:14",
														"type": ""
													}
												],
												"src": "9613:366:14"
											},
											{
												"body": {
													"nativeSrc": "10156:248:14",
													"nodeType": "YulBlock",
													"src": "10156:248:14",
													"statements": [
														{
															"nativeSrc": "10166:26:14",
															"nodeType": "YulAssignment",
															"src": "10166:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10178:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10178:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10189:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10189:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10174:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10174:3:14"
																},
																"nativeSrc": "10174:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10174:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10166:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10166:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10213:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10213:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10224:1:14",
																				"nodeType": "YulLiteral",
																				"src": "10224:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10209:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10209:3:14"
																		},
																		"nativeSrc": "10209:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10209:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10232:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "10232:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10238:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10238:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10228:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10228:3:14"
																		},
																		"nativeSrc": "10228:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10228:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10202:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10202:6:14"
																},
																"nativeSrc": "10202:47:14",
																"nodeType": "YulFunctionCall",
																"src": "10202:47:14"
															},
															"nativeSrc": "10202:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "10202:47:14"
														},
														{
															"nativeSrc": "10258:139:14",
															"nodeType": "YulAssignment",
															"src": "10258:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10392:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "10392:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10266:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "10266:124:14"
																},
																"nativeSrc": "10266:131:14",
																"nodeType": "YulFunctionCall",
																"src": "10266:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10258:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10258:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9985:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10136:9:14",
														"nodeType": "YulTypedName",
														"src": "10136:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10151:4:14",
														"nodeType": "YulTypedName",
														"src": "10151:4:14",
														"type": ""
													}
												],
												"src": "9985:419:14"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040518060400160405280600e81526020017f454e49474d415449432041555241000000000000000000000000000000000000815250600890816200004a9190620006c6565b506040518060400160405280600281526020017f454100000000000000000000000000000000000000000000000000000000000081525060099081620000919190620006c6565b50611a0a600a55348015620000a4575f80fd5b5060405162003556380380620035568339818101604052810190620000ca919062000963565b8060088054620000da90620004c6565b80601f01602080910402602001604051908101604052809291908181526020018280546200010890620004c6565b8015620001575780601f106200012d5761010080835404028352916020019162000157565b820191905f5260205f20905b8154815290600101906020018083116200013957829003601f168201915b5050505050600980546200016b90620004c6565b80601f01602080910402602001604051908101604052809291908181526020018280546200019990620004c6565b8015620001e85780601f10620001be57610100808354040283529160200191620001e8565b820191905f5260205f20905b815481529060010190602001808311620001ca57829003601f168201915b5050505050815f9081620001fd9190620006c6565b5080600190816200020f9190620006c6565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000285575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200027c9190620009d8565b60405180910390fd5b6200029681620002d660201b60201c565b5081600b9081620002a89190620006c6565b50620002ce736db77318c4eb74a296e41179a22700f84658fa866200039960201b60201c565b505062000a71565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200040a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004019062000a51565b60405180910390fd5b6001600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620004de57607f821691505b602082108103620004f457620004f362000499565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620005587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200051b565b6200056486836200051b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620005ae620005a8620005a2846200057c565b62000585565b6200057c565b9050919050565b5f819050919050565b620005c9836200058e565b620005e1620005d882620005b5565b84845462000527565b825550505050565b5f90565b620005f7620005e9565b62000604818484620005be565b505050565b5b818110156200062b576200061f5f82620005ed565b6001810190506200060a565b5050565b601f8211156200067a576200064481620004fa565b6200064f846200050c565b810160208510156200065f578190505b620006776200066e856200050c565b83018262000609565b50505b505050565b5f82821c905092915050565b5f6200069c5f19846008026200067f565b1980831691505092915050565b5f620006b683836200068b565b9150826002028217905092915050565b620006d18262000462565b67ffffffffffffffff811115620006ed57620006ec6200046c565b5b620006f98254620004c6565b620007068282856200062f565b5f60209050601f8311600181146200073c575f841562000727578287015190505b620007338582620006a9565b865550620007a2565b601f1984166200074c86620004fa565b5f5b8281101562000775578489015182556001820191506020850194506020810190506200074e565b8683101562000795578489015162000791601f8916826200068b565b8355505b6001600288020188555050505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b620007de82620007c3565b810181811067ffffffffffffffff821117156200080057620007ff6200046c565b5b80604052505050565b5f62000814620007aa565b9050620008228282620007d3565b919050565b5f67ffffffffffffffff8211156200084457620008436200046c565b5b6200084f82620007c3565b9050602081019050919050565b5f5b838110156200087b5780820151818401526020810190506200085e565b5f8484015250505050565b5f6200089c620008968462000827565b62000809565b905082815260208101848484011115620008bb57620008ba620007bf565b5b620008c88482856200085c565b509392505050565b5f82601f830112620008e757620008e6620007bb565b5b8151620008f984826020860162000886565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200092d8262000902565b9050919050565b6200093f8162000921565b81146200094a575f80fd5b50565b5f815190506200095d8162000934565b92915050565b5f80604083850312156200097c576200097b620007b3565b5b5f83015167ffffffffffffffff8111156200099c576200099b620007b7565b5b620009aa85828601620008d0565b9250506020620009bd858286016200094d565b9150509250929050565b620009d28162000921565b82525050565b5f602082019050620009ed5f830184620009c7565b92915050565b5f82825260208201905092915050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f62000a39600f83620009f3565b915062000a468262000a03565b602082019050919050565b5f6020820190508181035f83015262000a6a8162000a2b565b9050919050565b612ad78062000a7f5f395ff3fe608060405234801561000f575f80fd5b506004361061014b575f3560e01c80637065cb48116100c1578063a22cb4651161007a578063a22cb4651461035f578063b88d4fde1461037b578063c87b56dd14610397578063c8b7ec3d146103c7578063e985e9c5146103f7578063f2fde38b146104275761014b565b80637065cb481461029d57806370a08231146102b9578063715018a6146102e95780638da5cb5b146102f35780638f96a7cb1461031157806395d89b41146103415761014b565b8063173825d911610113578063173825d9146101f357806323b872dd1461020f5780633ccfd60b1461022b57806342842e0e1461023557806355f804b3146102515780636352211e1461026d5761014b565b806301ffc9a71461014f57806306fdde031461017f578063081812fc1461019d578063095ea7b3146101cd5780631249c58b146101e9575b5f80fd5b61016960048036038101906101649190611e17565b610443565b6040516101769190611e5c565b60405180910390f35b610187610524565b6040516101949190611eff565b60405180910390f35b6101b760048036038101906101b29190611f52565b6105b3565b6040516101c49190611fbc565b60405180910390f35b6101e760048036038101906101e29190611fff565b6105ce565b005b6101f16105e4565b005b61020d6004803603810190610208919061203d565b61079e565b005b61022960048036038101906102249190612068565b610872565b005b610233610971565b005b61024f600480360381019061024a9190612068565b6109c6565b005b61026b600480360381019061026691906121e4565b6109e5565b005b61028760048036038101906102829190611f52565b610a00565b6040516102949190611fbc565b60405180910390f35b6102b760048036038101906102b2919061203d565b610a11565b005b6102d360048036038101906102ce919061203d565b610a25565b6040516102e0919061223a565b60405180910390f35b6102f1610adb565b005b6102fb610aee565b6040516103089190611fbc565b60405180910390f35b61032b60048036038101906103269190611f52565b610b16565b6040516103389190611e5c565b60405180910390f35b610349610b3c565b6040516103569190611eff565b60405180910390f35b6103796004803603810190610374919061227d565b610bcc565b005b61039560048036038101906103909190612359565b610be2565b005b6103b160048036038101906103ac9190611f52565b610bff565b6040516103be9190611eff565b60405180910390f35b6103e160048036038101906103dc919061203d565b610c65565b6040516103ee9190611e5c565b60405180910390f35b610411600480360381019061040c91906123d9565b610cb7565b60405161041e9190611e5c565b60405180910390f35b610441600480360381019061043c919061203d565b610d45565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061050d57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061051d575061051c82610dc9565b5b9050919050565b60605f805461053290612444565b80601f016020809104026020016040519081016040528092919081815260200182805461055e90612444565b80156105a95780601f10610580576101008083540402835291602001916105a9565b820191905f5260205f20905b81548152906001019060200180831161058c57829003601f168201915b5050505050905090565b5f6105bd82610e32565b506105c782610eb8565b9050919050565b6105e082826105db610ef1565b610ef8565b5050565b600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff168061066b575061063c610aee565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6106aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a1906124be565b60405180910390fd5b600a546106b76007610f0a565b106106f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ee90612526565b60405180910390fd5b5f60016107046007610f0a565b61070e9190612571565b905061071a3382610f16565b6001600c5f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555061074d6007610f33565b3373ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe82604051610793919061223a565b60405180910390a250565b6107a6610f47565b6107ae610aee565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361081b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610812906125ee565b60405180910390fd5b5f600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108e2575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016108d99190611fbc565b60405180910390fd5b5f6108f583836108f0610ef1565b610fce565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461096b578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016109629392919061260c565b60405180910390fd5b50505050565b610979610f47565b610981610aee565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156109c3573d5f803e3d5ffd5b50565b6109e083838360405180602001604052805f815250610be2565b505050565b6109ed610f47565b80600b90816109fc91906127de565b5050565b5f610a0a82610e32565b9050919050565b610a19610f47565b610a22816111d9565b50565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a96575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610a8d9190611fbc565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610ae3610f47565b610aec5f61129f565b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f600c5f8381526020019081526020015f205f9054906101000a900460ff169050919050565b606060018054610b4b90612444565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7790612444565b8015610bc25780601f10610b9957610100808354040283529160200191610bc2565b820191905f5260205f20905b815481529060010190602001808311610ba557829003601f168201915b5050505050905090565b610bde610bd7610ef1565b8383611362565b5050565b610bed848484610872565b610bf9848484846114cb565b50505050565b6060610c0a82610e32565b505f610c1461167d565b90505f815111610c325760405180602001604052805f815250610c5d565b80610c3c8461170d565b604051602001610c4d9291906128e7565b6040516020818303038152906040525b915050919050565b5f600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610d4d610f47565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dbd575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610db49190611fbc565b60405180910390fd5b610dc68161129f565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610e3d836117d7565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610eaf57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ea6919061223a565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610f058383836001611810565b505050565b5f815f01549050919050565b610f2f828260405180602001604052805f8152506119cf565b5050565b6001815f015f828254019250508190555050565b610f4f610ef1565b73ffffffffffffffffffffffffffffffffffffffff16610f6d610aee565b73ffffffffffffffffffffffffffffffffffffffff1614610fcc57610f90610ef1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fc39190611fbc565b60405180910390fd5b565b5f80610fd9846117d7565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461101a576110198184866119ea565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110a5576110595f855f80611810565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461112457600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611247576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123e90612954565b60405180910390fd5b6001600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113d257816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016113c99190611fbc565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114be9190611e5c565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611677578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261150e610ef1565b8685856040518563ffffffff1660e01b815260040161153094939291906129c4565b6020604051808303815f875af192505050801561156b57506040513d601f19601f820116820180604052508101906115689190612a22565b60015b6115ec573d805f8114611599576040519150601f19603f3d011682016040523d82523d5f602084013e61159e565b606091505b505f8151036115e457836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115db9190611fbc565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461167557836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161166c9190611fbc565b60405180910390fd5b505b50505050565b6060600b805461168c90612444565b80601f01602080910402602001604051908101604052809291908181526020018280546116b890612444565b80156117035780601f106116da57610100808354040283529160200191611703565b820191905f5260205f20905b8154815290600101906020018083116116e657829003601f168201915b5050505050905090565b60605f600161171b84611aad565b0190505f8167ffffffffffffffff811115611739576117386120c0565b5b6040519080825280601f01601f19166020018201604052801561176b5781602001600182028036833780820191505090505b5090505f82602001820190505b6001156117cc578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816117c1576117c0612a4d565b5b0494505f8503611778575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061184857505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561197a575f61185784610e32565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156118c157508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156118d457506118d28184610cb7565b155b1561191657826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161190d9190611fbc565b60405180910390fd5b811561197857838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6119d98383611bfe565b6119e55f8484846114cb565b505050565b6119f5838383611cf1565b611aa8575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a6957806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a60919061223a565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611a9f929190612a7a565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b09577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611aff57611afe612a4d565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611b46576d04ee2d6d415b85acef81000000008381611b3c57611b3b612a4d565b5b0492506020810190505b662386f26fc100008310611b7557662386f26fc100008381611b6b57611b6a612a4d565b5b0492506010810190505b6305f5e1008310611b9e576305f5e1008381611b9457611b93612a4d565b5b0492506008810190505b6127108310611bc3576127108381611bb957611bb8612a4d565b5b0492506004810190505b60648310611be65760648381611bdc57611bdb612a4d565b5b0492506002810190505b600a8310611bf5576001810190505b80915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c6e575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611c659190611fbc565b60405180910390fd5b5f611c7a83835f610fce565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611cec575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611ce39190611fbc565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611da857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611d695750611d688484610cb7565b5b80611da757508273ffffffffffffffffffffffffffffffffffffffff16611d8f83610eb8565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611df681611dc2565b8114611e00575f80fd5b50565b5f81359050611e1181611ded565b92915050565b5f60208284031215611e2c57611e2b611dba565b5b5f611e3984828501611e03565b91505092915050565b5f8115159050919050565b611e5681611e42565b82525050565b5f602082019050611e6f5f830184611e4d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611eac578082015181840152602081019050611e91565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611ed182611e75565b611edb8185611e7f565b9350611eeb818560208601611e8f565b611ef481611eb7565b840191505092915050565b5f6020820190508181035f830152611f178184611ec7565b905092915050565b5f819050919050565b611f3181611f1f565b8114611f3b575f80fd5b50565b5f81359050611f4c81611f28565b92915050565b5f60208284031215611f6757611f66611dba565b5b5f611f7484828501611f3e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611fa682611f7d565b9050919050565b611fb681611f9c565b82525050565b5f602082019050611fcf5f830184611fad565b92915050565b611fde81611f9c565b8114611fe8575f80fd5b50565b5f81359050611ff981611fd5565b92915050565b5f806040838503121561201557612014611dba565b5b5f61202285828601611feb565b925050602061203385828601611f3e565b9150509250929050565b5f6020828403121561205257612051611dba565b5b5f61205f84828501611feb565b91505092915050565b5f805f6060848603121561207f5761207e611dba565b5b5f61208c86828701611feb565b935050602061209d86828701611feb565b92505060406120ae86828701611f3e565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6120f682611eb7565b810181811067ffffffffffffffff82111715612115576121146120c0565b5b80604052505050565b5f612127611db1565b905061213382826120ed565b919050565b5f67ffffffffffffffff821115612152576121516120c0565b5b61215b82611eb7565b9050602081019050919050565b828183375f83830152505050565b5f61218861218384612138565b61211e565b9050828152602081018484840111156121a4576121a36120bc565b5b6121af848285612168565b509392505050565b5f82601f8301126121cb576121ca6120b8565b5b81356121db848260208601612176565b91505092915050565b5f602082840312156121f9576121f8611dba565b5b5f82013567ffffffffffffffff81111561221657612215611dbe565b5b612222848285016121b7565b91505092915050565b61223481611f1f565b82525050565b5f60208201905061224d5f83018461222b565b92915050565b61225c81611e42565b8114612266575f80fd5b50565b5f8135905061227781612253565b92915050565b5f806040838503121561229357612292611dba565b5b5f6122a085828601611feb565b92505060206122b185828601612269565b9150509250929050565b5f67ffffffffffffffff8211156122d5576122d46120c0565b5b6122de82611eb7565b9050602081019050919050565b5f6122fd6122f8846122bb565b61211e565b905082815260208101848484011115612319576123186120bc565b5b612324848285612168565b509392505050565b5f82601f8301126123405761233f6120b8565b5b81356123508482602086016122eb565b91505092915050565b5f805f806080858703121561237157612370611dba565b5b5f61237e87828801611feb565b945050602061238f87828801611feb565b93505060406123a087828801611f3e565b925050606085013567ffffffffffffffff8111156123c1576123c0611dbe565b5b6123cd8782880161232c565b91505092959194509250565b5f80604083850312156123ef576123ee611dba565b5b5f6123fc85828601611feb565b925050602061240d85828601611feb565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061245b57607f821691505b60208210810361246e5761246d612417565b5b50919050565b7f4e6f7420616e206164646974696f6e616c206f776e65720000000000000000005f82015250565b5f6124a8601783611e7f565b91506124b382612474565b602082019050919050565b5f6020820190508181035f8301526124d58161249c565b9050919050565b7f4d6178696d756d20737570706c792072656163686564000000000000000000005f82015250565b5f612510601683611e7f565b915061251b826124dc565b602082019050919050565b5f6020820190508181035f83015261253d81612504565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61257b82611f1f565b915061258683611f1f565b925082820190508082111561259e5761259d612544565b5b92915050565b7f43616e6e6f742072656d6f766520636f6e7472616374206f776e6572000000005f82015250565b5f6125d8601c83611e7f565b91506125e3826125a4565b602082019050919050565b5f6020820190508181035f830152612605816125cc565b9050919050565b5f60608201905061261f5f830186611fad565b61262c602083018561222b565b6126396040830184611fad565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261269d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612662565b6126a78683612662565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6126e26126dd6126d884611f1f565b6126bf565b611f1f565b9050919050565b5f819050919050565b6126fb836126c8565b61270f612707826126e9565b84845461266e565b825550505050565b5f90565b612723612717565b61272e8184846126f2565b505050565b5b81811015612751576127465f8261271b565b600181019050612734565b5050565b601f8211156127965761276781612641565b61277084612653565b8101602085101561277f578190505b61279361278b85612653565b830182612733565b50505b505050565b5f82821c905092915050565b5f6127b65f198460080261279b565b1980831691505092915050565b5f6127ce83836127a7565b9150826002028217905092915050565b6127e782611e75565b67ffffffffffffffff811115612800576127ff6120c0565b5b61280a8254612444565b612815828285612755565b5f60209050601f831160018114612846575f8415612834578287015190505b61283e85826127c3565b8655506128a5565b601f19841661285486612641565b5f5b8281101561287b57848901518255600182019150602085019450602081019050612856565b868310156128985784890151612894601f8916826127a7565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f6128c182611e75565b6128cb81856128ad565b93506128db818560208601611e8f565b80840191505092915050565b5f6128f282856128b7565b91506128fe82846128b7565b91508190509392505050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f61293e600f83611e7f565b91506129498261290a565b602082019050919050565b5f6020820190508181035f83015261296b81612932565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61299682612972565b6129a0818561297c565b93506129b0818560208601611e8f565b6129b981611eb7565b840191505092915050565b5f6080820190506129d75f830187611fad565b6129e46020830186611fad565b6129f1604083018561222b565b8181036060830152612a03818461298c565b905095945050505050565b5f81519050612a1c81611ded565b92915050565b5f60208284031215612a3757612a36611dba565b5b5f612a4484828501612a0e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f604082019050612a8d5f830185611fad565b612a9a602083018461222b565b939250505056fea26469706673582212204518b542256653e2823304d81d9c9d36f7d9f5ac04603b37c51489212cc52fc264736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x454E49474D415449432041555241000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x6C6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4541000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 SWAP1 DUP2 PUSH3 0x91 SWAP2 SWAP1 PUSH3 0x6C6 JUMP JUMPDEST POP PUSH2 0x1A0A PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xA4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3556 CODESIZE SUB DUP1 PUSH3 0x3556 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xCA SWAP2 SWAP1 PUSH3 0x963 JUMP JUMPDEST DUP1 PUSH1 0x8 DUP1 SLOAD PUSH3 0xDA SWAP1 PUSH3 0x4C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x108 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x157 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x12D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x157 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x139 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH1 0x9 DUP1 SLOAD PUSH3 0x16B SWAP1 PUSH3 0x4C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x199 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x1E8 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x1BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x1E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x1CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x1FD SWAP2 SWAP1 PUSH3 0x6C6 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x20F SWAP2 SWAP1 PUSH3 0x6C6 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x285 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x27C SWAP2 SWAP1 PUSH3 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x296 DUP2 PUSH3 0x2D6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0xB SWAP1 DUP2 PUSH3 0x2A8 SWAP2 SWAP1 PUSH3 0x6C6 JUMP JUMPDEST POP PUSH3 0x2CE PUSH20 0x6DB77318C4EB74A296E41179A22700F84658FA86 PUSH3 0x399 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0xA71 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x401 SWAP1 PUSH3 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4DE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4F4 JUMPI PUSH3 0x4F3 PUSH3 0x499 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x558 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x51B JUMP JUMPDEST PUSH3 0x564 DUP7 DUP4 PUSH3 0x51B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x5AE PUSH3 0x5A8 PUSH3 0x5A2 DUP5 PUSH3 0x57C JUMP JUMPDEST PUSH3 0x585 JUMP JUMPDEST PUSH3 0x57C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5C9 DUP4 PUSH3 0x58E JUMP JUMPDEST PUSH3 0x5E1 PUSH3 0x5D8 DUP3 PUSH3 0x5B5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x527 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x5F7 PUSH3 0x5E9 JUMP JUMPDEST PUSH3 0x604 DUP2 DUP5 DUP5 PUSH3 0x5BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x62B JUMPI PUSH3 0x61F PUSH0 DUP3 PUSH3 0x5ED JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x60A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x67A JUMPI PUSH3 0x644 DUP2 PUSH3 0x4FA JUMP JUMPDEST PUSH3 0x64F DUP5 PUSH3 0x50C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x65F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x677 PUSH3 0x66E DUP6 PUSH3 0x50C JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x609 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x69C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x67F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6B6 DUP4 DUP4 PUSH3 0x68B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x6D1 DUP3 PUSH3 0x462 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6ED JUMPI PUSH3 0x6EC PUSH3 0x46C JUMP JUMPDEST JUMPDEST PUSH3 0x6F9 DUP3 SLOAD PUSH3 0x4C6 JUMP JUMPDEST PUSH3 0x706 DUP3 DUP3 DUP6 PUSH3 0x62F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x73C JUMPI PUSH0 DUP5 ISZERO PUSH3 0x727 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x733 DUP6 DUP3 PUSH3 0x6A9 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x7A2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x74C DUP7 PUSH3 0x4FA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x775 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x74E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x795 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x791 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x68B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7DE DUP3 PUSH3 0x7C3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x800 JUMPI PUSH3 0x7FF PUSH3 0x46C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x814 PUSH3 0x7AA JUMP JUMPDEST SWAP1 POP PUSH3 0x822 DUP3 DUP3 PUSH3 0x7D3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x844 JUMPI PUSH3 0x843 PUSH3 0x46C JUMP JUMPDEST JUMPDEST PUSH3 0x84F DUP3 PUSH3 0x7C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x87B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x85E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x89C PUSH3 0x896 DUP5 PUSH3 0x827 JUMP JUMPDEST PUSH3 0x809 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x8BB JUMPI PUSH3 0x8BA PUSH3 0x7BF JUMP JUMPDEST JUMPDEST PUSH3 0x8C8 DUP5 DUP3 DUP6 PUSH3 0x85C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x8E7 JUMPI PUSH3 0x8E6 PUSH3 0x7BB JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x8F9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x886 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x92D DUP3 PUSH3 0x902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x93F DUP2 PUSH3 0x921 JUMP JUMPDEST DUP2 EQ PUSH3 0x94A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x95D DUP2 PUSH3 0x934 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x97C JUMPI PUSH3 0x97B PUSH3 0x7B3 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x99C JUMPI PUSH3 0x99B PUSH3 0x7B7 JUMP JUMPDEST JUMPDEST PUSH3 0x9AA DUP6 DUP3 DUP7 ADD PUSH3 0x8D0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x9BD DUP6 DUP3 DUP7 ADD PUSH3 0x94D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x9D2 DUP2 PUSH3 0x921 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x9ED PUSH0 DUP4 ADD DUP5 PUSH3 0x9C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0xA39 PUSH1 0xF DUP4 PUSH3 0x9F3 JUMP JUMPDEST SWAP2 POP PUSH3 0xA46 DUP3 PUSH3 0xA03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xA6A DUP2 PUSH3 0xA2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AD7 DUP1 PUSH3 0xA7F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7065CB48 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xC8B7EC3D EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x427 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x7065CB48 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8F96A7CB EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x341 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x173825D9 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x173825D9 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x26D JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH2 0x5E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x233 PUSH2 0x971 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH2 0xADB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FB PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x227D JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x2359 JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x50D JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x51D JUMPI POP PUSH2 0x51C DUP3 PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x532 SWAP1 PUSH2 0x2444 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x55E SWAP1 PUSH2 0x2444 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x580 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5BD DUP3 PUSH2 0xE32 JUMP JUMPDEST POP PUSH2 0x5C7 DUP3 PUSH2 0xEB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E0 DUP3 DUP3 PUSH2 0x5DB PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0xEF8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x66B JUMPI POP PUSH2 0x63C PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A1 SWAP1 PUSH2 0x24BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH2 0x6B7 PUSH1 0x7 PUSH2 0xF0A JUMP JUMPDEST LT PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP1 PUSH2 0x2526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x704 PUSH1 0x7 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP1 POP PUSH2 0x71A CALLER DUP3 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x74D PUSH1 0x7 PUSH2 0xF33 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP3 PUSH1 0x40 MLOAD PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x7A6 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x812 SWAP1 PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x8F5 DUP4 DUP4 PUSH2 0x8F0 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0xFCE JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x96B JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x260C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x981 PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9C3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9E0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xBE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9ED PUSH2 0xF47 JUMP JUMPDEST DUP1 PUSH1 0xB SWAP1 DUP2 PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x27DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA0A DUP3 PUSH2 0xE32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA19 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0xA22 DUP2 PUSH2 0x11D9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA96 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8D SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE3 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0xAEC PUSH0 PUSH2 0x129F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xB4B SWAP1 PUSH2 0x2444 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB77 SWAP1 PUSH2 0x2444 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB99 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBA5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBDE PUSH2 0xBD7 PUSH2 0xEF1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1362 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBED DUP5 DUP5 DUP5 PUSH2 0x872 JUMP JUMPDEST PUSH2 0xBF9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x14CB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC0A DUP3 PUSH2 0xE32 JUMP JUMPDEST POP PUSH0 PUSH2 0xC14 PUSH2 0x167D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xC5D JUMP JUMPDEST DUP1 PUSH2 0xC3C DUP5 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC4D SWAP3 SWAP2 SWAP1 PUSH2 0x28E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD4D PUSH2 0xF47 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC6 DUP2 PUSH2 0x129F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE3D DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEAF JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA6 SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF05 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1810 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF2F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x19CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xF4F PUSH2 0xEF1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF6D PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCC JUMPI PUSH2 0xF90 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFD9 DUP5 PUSH2 0x17D7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x101A JUMPI PUSH2 0x1019 DUP2 DUP5 DUP7 PUSH2 0x19EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10A5 JUMPI PUSH2 0x1059 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1124 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1247 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123E SWAP1 PUSH2 0x2954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D2 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C9 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x14BE SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1677 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x150E PUSH2 0xEF1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1530 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x156B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x15EC JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1599 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x159E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x15E4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1675 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166C SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0x168C SWAP1 PUSH2 0x2444 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16B8 SWAP1 PUSH2 0x2444 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1703 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1703 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x171B DUP5 PUSH2 0x1AAD JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x20C0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x176B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x17CC JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x17C1 JUMPI PUSH2 0x17C0 PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1778 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1848 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x197A JUMPI PUSH0 PUSH2 0x1857 DUP5 PUSH2 0xE32 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x18C1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x18D4 JUMPI POP PUSH2 0x18D2 DUP2 DUP5 PUSH2 0xCB7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1916 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190D SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1978 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19D9 DUP4 DUP4 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x19E5 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x14CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x19F5 DUP4 DUP4 DUP4 PUSH2 0x1CF1 JUMP JUMPDEST PUSH2 0x1AA8 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A69 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A60 SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9F SWAP3 SWAP2 SWAP1 PUSH2 0x2A7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1B09 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1AFF JUMPI PUSH2 0x1AFE PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1B46 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1B3C JUMPI PUSH2 0x1B3B PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1B75 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1B6B JUMPI PUSH2 0x1B6A PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1B9E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1B94 JUMPI PUSH2 0x1B93 PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1BC3 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1BB9 JUMPI PUSH2 0x1BB8 PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1BE6 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1BDC JUMPI PUSH2 0x1BDB PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1BF5 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C6E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C65 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C7A DUP4 DUP4 PUSH0 PUSH2 0xFCE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CEC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE3 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DA8 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1D69 JUMPI POP PUSH2 0x1D68 DUP5 DUP5 PUSH2 0xCB7 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1DA7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D8F DUP4 PUSH2 0xEB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF6 DUP2 PUSH2 0x1DC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E00 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E11 DUP2 PUSH2 0x1DED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E2C JUMPI PUSH2 0x1E2B PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E39 DUP5 DUP3 DUP6 ADD PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E56 DUP2 PUSH2 0x1E42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6F PUSH0 DUP4 ADD DUP5 PUSH2 0x1E4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EAC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E91 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED1 DUP3 PUSH2 0x1E75 JUMP JUMPDEST PUSH2 0x1EDB DUP2 DUP6 PUSH2 0x1E7F JUMP JUMPDEST SWAP4 POP PUSH2 0x1EEB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x1EF4 DUP2 PUSH2 0x1EB7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F17 DUP2 DUP5 PUSH2 0x1EC7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F31 DUP2 PUSH2 0x1F1F JUMP JUMPDEST DUP2 EQ PUSH2 0x1F3B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F4C DUP2 PUSH2 0x1F28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F67 JUMPI PUSH2 0x1F66 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F74 DUP5 DUP3 DUP6 ADD PUSH2 0x1F3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA6 DUP3 PUSH2 0x1F7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB6 DUP2 PUSH2 0x1F9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FCF PUSH0 DUP4 ADD DUP5 PUSH2 0x1FAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FDE DUP2 PUSH2 0x1F9C JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FF9 DUP2 PUSH2 0x1FD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2015 JUMPI PUSH2 0x2014 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2022 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2033 DUP6 DUP3 DUP7 ADD PUSH2 0x1F3E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2052 JUMPI PUSH2 0x2051 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x205F DUP5 DUP3 DUP6 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x208C DUP7 DUP3 DUP8 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x209D DUP7 DUP3 DUP8 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20AE DUP7 DUP3 DUP8 ADD PUSH2 0x1F3E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x20F6 DUP3 PUSH2 0x1EB7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2115 JUMPI PUSH2 0x2114 PUSH2 0x20C0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2127 PUSH2 0x1DB1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2133 DUP3 DUP3 PUSH2 0x20ED JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2152 JUMPI PUSH2 0x2151 PUSH2 0x20C0 JUMP JUMPDEST JUMPDEST PUSH2 0x215B DUP3 PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2188 PUSH2 0x2183 DUP5 PUSH2 0x2138 JUMP JUMPDEST PUSH2 0x211E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21A4 JUMPI PUSH2 0x21A3 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH2 0x21AF DUP5 DUP3 DUP6 PUSH2 0x2168 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21CB JUMPI PUSH2 0x21CA PUSH2 0x20B8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21DB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2176 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F9 JUMPI PUSH2 0x21F8 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2216 JUMPI PUSH2 0x2215 PUSH2 0x1DBE JUMP JUMPDEST JUMPDEST PUSH2 0x2222 DUP5 DUP3 DUP6 ADD PUSH2 0x21B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2234 DUP2 PUSH2 0x1F1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x224D PUSH0 DUP4 ADD DUP5 PUSH2 0x222B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x225C DUP2 PUSH2 0x1E42 JUMP JUMPDEST DUP2 EQ PUSH2 0x2266 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2277 DUP2 PUSH2 0x2253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2293 JUMPI PUSH2 0x2292 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22A0 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22B1 DUP6 DUP3 DUP7 ADD PUSH2 0x2269 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x22D5 JUMPI PUSH2 0x22D4 PUSH2 0x20C0 JUMP JUMPDEST JUMPDEST PUSH2 0x22DE DUP3 PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22FD PUSH2 0x22F8 DUP5 PUSH2 0x22BB JUMP JUMPDEST PUSH2 0x211E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2319 JUMPI PUSH2 0x2318 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH2 0x2324 DUP5 DUP3 DUP6 PUSH2 0x2168 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2340 JUMPI PUSH2 0x233F PUSH2 0x20B8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2350 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2371 JUMPI PUSH2 0x2370 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x237E DUP8 DUP3 DUP9 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x238F DUP8 DUP3 DUP9 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x23A0 DUP8 DUP3 DUP9 ADD PUSH2 0x1F3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23C1 JUMPI PUSH2 0x23C0 PUSH2 0x1DBE JUMP JUMPDEST JUMPDEST PUSH2 0x23CD DUP8 DUP3 DUP9 ADD PUSH2 0x232C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23EF JUMPI PUSH2 0x23EE PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23FC DUP6 DUP3 DUP7 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x240D DUP6 DUP3 DUP7 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x245B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x246E JUMPI PUSH2 0x246D PUSH2 0x2417 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616E206164646974696F6E616C206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24A8 PUSH1 0x17 DUP4 PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP PUSH2 0x24B3 DUP3 PUSH2 0x2474 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24D5 DUP2 PUSH2 0x249C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6178696D756D20737570706C79207265616368656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2510 PUSH1 0x16 DUP4 PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP PUSH2 0x251B DUP3 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x253D DUP2 PUSH2 0x2504 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x257B DUP3 PUSH2 0x1F1F JUMP JUMPDEST SWAP2 POP PUSH2 0x2586 DUP4 PUSH2 0x1F1F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x259E JUMPI PUSH2 0x259D PUSH2 0x2544 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742072656D6F766520636F6E7472616374206F776E657200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25D8 PUSH1 0x1C DUP4 PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP PUSH2 0x25E3 DUP3 PUSH2 0x25A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2605 DUP2 PUSH2 0x25CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x261F PUSH0 DUP4 ADD DUP7 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x262C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x222B JUMP JUMPDEST PUSH2 0x2639 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FAD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x269D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2662 JUMP JUMPDEST PUSH2 0x26A7 DUP7 DUP4 PUSH2 0x2662 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26E2 PUSH2 0x26DD PUSH2 0x26D8 DUP5 PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x26BF JUMP JUMPDEST PUSH2 0x1F1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26FB DUP4 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x270F PUSH2 0x2707 DUP3 PUSH2 0x26E9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x266E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2723 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0x272E DUP2 DUP5 DUP5 PUSH2 0x26F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2751 JUMPI PUSH2 0x2746 PUSH0 DUP3 PUSH2 0x271B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2734 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2796 JUMPI PUSH2 0x2767 DUP2 PUSH2 0x2641 JUMP JUMPDEST PUSH2 0x2770 DUP5 PUSH2 0x2653 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x277F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2793 PUSH2 0x278B DUP6 PUSH2 0x2653 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2733 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27B6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x279B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27CE DUP4 DUP4 PUSH2 0x27A7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E7 DUP3 PUSH2 0x1E75 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2800 JUMPI PUSH2 0x27FF PUSH2 0x20C0 JUMP JUMPDEST JUMPDEST PUSH2 0x280A DUP3 SLOAD PUSH2 0x2444 JUMP JUMPDEST PUSH2 0x2815 DUP3 DUP3 DUP6 PUSH2 0x2755 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2846 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2834 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x283E DUP6 DUP3 PUSH2 0x27C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2854 DUP7 PUSH2 0x2641 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x287B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2856 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2898 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2894 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27A7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28C1 DUP3 PUSH2 0x1E75 JUMP JUMPDEST PUSH2 0x28CB DUP2 DUP6 PUSH2 0x28AD JUMP JUMPDEST SWAP4 POP PUSH2 0x28DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28F2 DUP3 DUP6 PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x28FE DUP3 DUP5 PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x293E PUSH1 0xF DUP4 PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP PUSH2 0x2949 DUP3 PUSH2 0x290A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x296B DUP2 PUSH2 0x2932 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2996 DUP3 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x29A0 DUP2 DUP6 PUSH2 0x297C JUMP JUMPDEST SWAP4 POP PUSH2 0x29B0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x29B9 DUP2 PUSH2 0x1EB7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x29D7 PUSH0 DUP4 ADD DUP8 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x29E4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x29F1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x222B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2A03 DUP2 DUP5 PUSH2 0x298C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A1C DUP2 PUSH2 0x1DED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A37 JUMPI PUSH2 0x2A36 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A44 DUP5 DUP3 DUP6 ADD PUSH2 0x2A0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A8D PUSH0 DUP4 ADD DUP6 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x2A9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x222B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT XOR 0xB5 TIMESTAMP 0x25 PUSH7 0x53E2823304D81D SWAP13 SWAP14 CALLDATASIZE 0xF7 0xD9 CREATE2 0xAC DIV PUSH1 0x3B CALLDATACOPY 0xC5 EQ DUP10 0x21 0x2C 0xC5 0x2F 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "229:2992:13:-:0;;;508:39;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;554:29;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;652:4;623:33;;1093:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1186:12;1162:5;1381:113:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1169:7:13;1381:113:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1227:12:13::2;1211:13;:28;;;;;;:::i;:::-;;1250:63;1270:42;1250:19;;;:63;;:::i;:::-;1093:228:::0;;229:2992;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2232:170:13:-;2327:1;2307:22;;:8;:22;;;2299:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2390:4;2360:17;:27;2378:8;2360:27;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2232:170;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:75::-;5267:6;5300:2;5294:9;5284:19;;5234:75;:::o;5315:117::-;5424:1;5421;5414:12;5438:117;5547:1;5544;5537:12;5561:117;5670:1;5667;5660:12;5684:117;5793:1;5790;5783:12;5807:102;5848:6;5899:2;5895:7;5890:2;5883:5;5879:14;5875:28;5865:38;;5807:102;;;:::o;5915:281::-;5998:27;6020:4;5998:27;:::i;:::-;5990:6;5986:40;6128:6;6116:10;6113:22;6092:18;6080:10;6077:34;6074:62;6071:88;;;6139:18;;:::i;:::-;6071:88;6179:10;6175:2;6168:22;5958:238;5915:281;;:::o;6202:129::-;6236:6;6263:20;;:::i;:::-;6253:30;;6292:33;6320:4;6312:6;6292:33;:::i;:::-;6202:129;;;:::o;6337:308::-;6399:4;6489:18;6481:6;6478:30;6475:56;;;6511:18;;:::i;:::-;6475:56;6549:29;6571:6;6549:29;:::i;:::-;6541:37;;6633:4;6627;6623:15;6615:23;;6337:308;;;:::o;6651:246::-;6732:1;6742:113;6756:6;6753:1;6750:13;6742:113;;;6841:1;6836:3;6832:11;6826:18;6822:1;6817:3;6813:11;6806:39;6778:2;6775:1;6771:10;6766:15;;6742:113;;;6889:1;6880:6;6875:3;6871:16;6864:27;6713:184;6651:246;;;:::o;6903:434::-;6992:5;7017:66;7033:49;7075:6;7033:49;:::i;:::-;7017:66;:::i;:::-;7008:75;;7106:6;7099:5;7092:21;7144:4;7137:5;7133:16;7182:3;7173:6;7168:3;7164:16;7161:25;7158:112;;;7189:79;;:::i;:::-;7158:112;7279:52;7324:6;7319:3;7314;7279:52;:::i;:::-;6998:339;6903:434;;;;;:::o;7357:355::-;7424:5;7473:3;7466:4;7458:6;7454:17;7450:27;7440:122;;7481:79;;:::i;:::-;7440:122;7591:6;7585:13;7616:90;7702:3;7694:6;7687:4;7679:6;7675:17;7616:90;:::i;:::-;7607:99;;7430:282;7357:355;;;;:::o;7718:126::-;7755:7;7795:42;7788:5;7784:54;7773:65;;7718:126;;;:::o;7850:96::-;7887:7;7916:24;7934:5;7916:24;:::i;:::-;7905:35;;7850:96;;;:::o;7952:122::-;8025:24;8043:5;8025:24;:::i;:::-;8018:5;8015:35;8005:63;;8064:1;8061;8054:12;8005:63;7952:122;:::o;8080:143::-;8137:5;8168:6;8162:13;8153:22;;8184:33;8211:5;8184:33;:::i;:::-;8080:143;;;;:::o;8229:680::-;8318:6;8326;8375:2;8363:9;8354:7;8350:23;8346:32;8343:119;;;8381:79;;:::i;:::-;8343:119;8522:1;8511:9;8507:17;8501:24;8552:18;8544:6;8541:30;8538:117;;;8574:79;;:::i;:::-;8538:117;8679:74;8745:7;8736:6;8725:9;8721:22;8679:74;:::i;:::-;8669:84;;8472:291;8802:2;8828:64;8884:7;8875:6;8864:9;8860:22;8828:64;:::i;:::-;8818:74;;8773:129;8229:680;;;;;:::o;8915:118::-;9002:24;9020:5;9002:24;:::i;:::-;8997:3;8990:37;8915:118;;:::o;9039:222::-;9132:4;9170:2;9159:9;9155:18;9147:26;;9183:71;9251:1;9240:9;9236:17;9227:6;9183:71;:::i;:::-;9039:222;;;;:::o;9267:169::-;9351:11;9385:6;9380:3;9373:19;9425:4;9420:3;9416:14;9401:29;;9267:169;;;;:::o;9442:165::-;9582:17;9578:1;9570:6;9566:14;9559:41;9442:165;:::o;9613:366::-;9755:3;9776:67;9840:2;9835:3;9776:67;:::i;:::-;9769:74;;9852:93;9941:3;9852:93;:::i;:::-;9970:2;9965:3;9961:12;9954:19;;9613:366;;;:::o;9985:419::-;10151:4;10189:2;10178:9;10174:18;10166:26;;10238:9;10232:4;10228:20;10224:1;10213:9;10209:17;10202:47;10266:131;10392:4;10266:131;:::i;:::-;10258:139;;9985:419;;;:::o;229:2992:13:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addAdditionalOwner_3196": {
									"entryPoint": 4569,
									"id": 3196,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_approve_1096": {
									"entryPoint": 3832,
									"id": 1096,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1162": {
									"entryPoint": 6160,
									"id": 1162,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_3239": {
									"entryPoint": 5757,
									"id": 3239,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_744": {
									"entryPoint": 6634,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1292": {
									"entryPoint": 5323,
									"id": 1292,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3911,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_671": {
									"entryPoint": 3768,
									"id": 671,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_707": {
									"entryPoint": 7409,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_900": {
									"entryPoint": 7166,
									"id": 900,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1468": {
									"entryPoint": 3825,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_658": {
									"entryPoint": 6103,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1228": {
									"entryPoint": 3634,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_915": {
									"entryPoint": 3862,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_941": {
									"entryPoint": 6607,
									"id": 941,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1199": {
									"entryPoint": 4962,
									"id": 1199,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4767,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_850": {
									"entryPoint": 4046,
									"id": 850,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@addOwner_3174": {
									"entryPoint": 2577,
									"id": 3174,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_505": {
									"entryPoint": 1486,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_413": {
									"entryPoint": 2597,
									"id": 413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_1504": {
									"entryPoint": 3850,
									"id": 1504,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_522": {
									"entryPoint": 1459,
									"id": 522,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1518": {
									"entryPoint": 3891,
									"id": 1518,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isAdditionalOwner_3230": {
									"entryPoint": 3173,
									"id": 3230,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_555": {
									"entryPoint": 3255,
									"id": 555,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isTokenMinted_3150": {
									"entryPoint": 2838,
									"id": 3150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2725": {
									"entryPoint": 6829,
									"id": 2725,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_3138": {
									"entryPoint": 1508,
									"id": 3138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_435": {
									"entryPoint": 1316,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_426": {
									"entryPoint": 2560,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2798,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeOwner_3218": {
									"entryPoint": 1950,
									"id": 3218,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2779,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_619": {
									"entryPoint": 2502,
									"id": 619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_645": {
									"entryPoint": 3042,
									"id": 645,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_538": {
									"entryPoint": 3020,
									"id": 538,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_3162": {
									"entryPoint": 2533,
									"id": 3162,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1838": {
									"entryPoint": 3529,
									"id": 1838,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_385": {
									"entryPoint": 1091,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_444": {
									"entryPoint": 2876,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1628": {
									"entryPoint": 5901,
									"id": 1628,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_480": {
									"entryPoint": 3071,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_601": {
									"entryPoint": 2162,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3397,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_3258": {
									"entryPoint": 2417,
									"id": 3258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8939,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8566,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10471,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10692,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10874,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9740,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7601,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10069,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 8092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8552,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7823,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8384,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8380,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7610,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 10506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e": {
									"entryPoint": 9332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2": {
									"entryPoint": 9436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad": {
									"entryPoint": 9636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9838,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9970,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10007,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24992:14",
										"nodeType": "YulBlock",
										"src": "0:24992:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "378:105:14",
													"nodeType": "YulBlock",
													"src": "378:105:14",
													"statements": [
														{
															"nativeSrc": "388:89:14",
															"nodeType": "YulAssignment",
															"src": "388:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:14",
																		"nodeType": "YulLiteral",
																		"src": "410:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:14"
																},
																"nativeSrc": "399:78:14",
																"nodeType": "YulFunctionCall",
																"src": "399:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:14",
														"nodeType": "YulTypedName",
														"src": "360:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:14",
														"nodeType": "YulTypedName",
														"src": "370:7:14",
														"type": ""
													}
												],
												"src": "334:149:14"
											},
											{
												"body": {
													"nativeSrc": "531:78:14",
													"nodeType": "YulBlock",
													"src": "531:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:14",
																"nodeType": "YulBlock",
																"src": "587:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:14",
																					"nodeType": "YulLiteral",
																					"src": "596:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:14",
																					"nodeType": "YulLiteral",
																					"src": "599:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:14"
																			},
																			"nativeSrc": "589:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:14"
																		},
																		"nativeSrc": "589:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:14"
																				},
																				"nativeSrc": "561:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:14"
																		},
																		"nativeSrc": "551:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:14"
																},
																"nativeSrc": "544:42:14",
																"nodeType": "YulFunctionCall",
																"src": "544:42:14"
															},
															"nativeSrc": "541:62:14",
															"nodeType": "YulIf",
															"src": "541:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:14",
														"nodeType": "YulTypedName",
														"src": "524:5:14",
														"type": ""
													}
												],
												"src": "489:120:14"
											},
											{
												"body": {
													"nativeSrc": "666:86:14",
													"nodeType": "YulBlock",
													"src": "666:86:14",
													"statements": [
														{
															"nativeSrc": "676:29:14",
															"nodeType": "YulAssignment",
															"src": "676:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:14"
																},
																"nativeSrc": "685:20:14",
																"nodeType": "YulFunctionCall",
																"src": "685:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:14"
																},
																"nativeSrc": "714:32:14",
																"nodeType": "YulFunctionCall",
																"src": "714:32:14"
															},
															"nativeSrc": "714:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:14",
														"nodeType": "YulTypedName",
														"src": "644:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:14",
														"nodeType": "YulTypedName",
														"src": "652:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:14",
														"nodeType": "YulTypedName",
														"src": "660:5:14",
														"type": ""
													}
												],
												"src": "615:137:14"
											},
											{
												"body": {
													"nativeSrc": "823:262:14",
													"nodeType": "YulBlock",
													"src": "823:262:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:14",
																"nodeType": "YulBlock",
																"src": "869:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:14"
																			},
																			"nativeSrc": "871:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:14"
																		},
																		"nativeSrc": "871:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:14"
																		},
																		"nativeSrc": "840:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:14",
																		"nodeType": "YulLiteral",
																		"src": "865:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:14"
																},
																"nativeSrc": "836:32:14",
																"nodeType": "YulFunctionCall",
																"src": "836:32:14"
															},
															"nativeSrc": "833:119:14",
															"nodeType": "YulIf",
															"src": "833:119:14"
														},
														{
															"nativeSrc": "962:116:14",
															"nodeType": "YulBlock",
															"src": "962:116:14",
															"statements": [
																{
																	"nativeSrc": "977:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:14",
																		"nodeType": "YulLiteral",
																		"src": "991:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:14",
																			"nodeType": "YulTypedName",
																			"src": "981:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:14",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:14"
																				},
																				"nativeSrc": "1036:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:14"
																		},
																		"nativeSrc": "1016:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:14",
														"nodeType": "YulTypedName",
														"src": "793:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:14",
														"nodeType": "YulTypedName",
														"src": "804:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:14",
														"nodeType": "YulTypedName",
														"src": "816:6:14",
														"type": ""
													}
												],
												"src": "758:327:14"
											},
											{
												"body": {
													"nativeSrc": "1133:48:14",
													"nodeType": "YulBlock",
													"src": "1133:48:14",
													"statements": [
														{
															"nativeSrc": "1143:32:14",
															"nodeType": "YulAssignment",
															"src": "1143:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:14"
																		},
																		"nativeSrc": "1161:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:14"
																},
																"nativeSrc": "1154:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:14",
														"nodeType": "YulTypedName",
														"src": "1115:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:14",
														"nodeType": "YulTypedName",
														"src": "1125:7:14",
														"type": ""
													}
												],
												"src": "1091:90:14"
											},
											{
												"body": {
													"nativeSrc": "1246:50:14",
													"nodeType": "YulBlock",
													"src": "1246:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:14",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:14"
																		},
																		"nativeSrc": "1268:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:14"
																},
																"nativeSrc": "1256:34:14",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:14"
															},
															"nativeSrc": "1256:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:14",
														"nodeType": "YulTypedName",
														"src": "1234:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:14",
														"nodeType": "YulTypedName",
														"src": "1241:3:14",
														"type": ""
													}
												],
												"src": "1187:109:14"
											},
											{
												"body": {
													"nativeSrc": "1394:118:14",
													"nodeType": "YulBlock",
													"src": "1394:118:14",
													"statements": [
														{
															"nativeSrc": "1404:26:14",
															"nodeType": "YulAssignment",
															"src": "1404:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:14"
																},
																"nativeSrc": "1412:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:14"
																		},
																		"nativeSrc": "1487:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:14"
																},
																"nativeSrc": "1440:65:14",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:14"
															},
															"nativeSrc": "1440:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:14",
														"nodeType": "YulTypedName",
														"src": "1366:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:14",
														"nodeType": "YulTypedName",
														"src": "1378:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:14",
														"nodeType": "YulTypedName",
														"src": "1389:4:14",
														"type": ""
													}
												],
												"src": "1302:210:14"
											},
											{
												"body": {
													"nativeSrc": "1577:40:14",
													"nodeType": "YulBlock",
													"src": "1577:40:14",
													"statements": [
														{
															"nativeSrc": "1588:22:14",
															"nodeType": "YulAssignment",
															"src": "1588:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:14"
																},
																"nativeSrc": "1598:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:14",
														"nodeType": "YulTypedName",
														"src": "1560:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:14",
														"nodeType": "YulTypedName",
														"src": "1570:6:14",
														"type": ""
													}
												],
												"src": "1518:99:14"
											},
											{
												"body": {
													"nativeSrc": "1719:73:14",
													"nodeType": "YulBlock",
													"src": "1719:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:14"
																},
																"nativeSrc": "1729:19:14",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:14"
															},
															"nativeSrc": "1729:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:14"
														},
														{
															"nativeSrc": "1757:29:14",
															"nodeType": "YulAssignment",
															"src": "1757:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:14"
																},
																"nativeSrc": "1772:14:14",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:14",
														"nodeType": "YulTypedName",
														"src": "1691:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:14",
														"nodeType": "YulTypedName",
														"src": "1696:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:14",
														"nodeType": "YulTypedName",
														"src": "1707:11:14",
														"type": ""
													}
												],
												"src": "1623:169:14"
											},
											{
												"body": {
													"nativeSrc": "1860:184:14",
													"nodeType": "YulBlock",
													"src": "1860:184:14",
													"statements": [
														{
															"nativeSrc": "1870:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:14",
																"nodeType": "YulLiteral",
																"src": "1879:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:14",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:14",
																"nodeType": "YulBlock",
																"src": "1939:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:14"
																					},
																					"nativeSrc": "1960:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:14"
																							},
																							"nativeSrc": "1979:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:14"
																					},
																					"nativeSrc": "1973:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:14"
																			},
																			"nativeSrc": "1953:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:14"
																		},
																		"nativeSrc": "1953:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:14"
																},
																"nativeSrc": "1897:13:14",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:14"
															},
															"nativeSrc": "1889:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:14",
																"nodeType": "YulBlock",
																"src": "1911:19:14",
																"statements": [
																	{
																		"nativeSrc": "1913:15:14",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:14",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:14"
																			},
																			"nativeSrc": "1918:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:14",
																"nodeType": "YulBlock",
																"src": "1893:3:14",
																"statements": []
															},
															"src": "1889:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:14"
																		},
																		"nativeSrc": "2018:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:14"
																},
																"nativeSrc": "2011:27:14",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:14"
															},
															"nativeSrc": "2011:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:14",
														"nodeType": "YulTypedName",
														"src": "1842:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:14",
														"nodeType": "YulTypedName",
														"src": "1847:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:14",
														"nodeType": "YulTypedName",
														"src": "1852:6:14",
														"type": ""
													}
												],
												"src": "1798:246:14"
											},
											{
												"body": {
													"nativeSrc": "2098:54:14",
													"nodeType": "YulBlock",
													"src": "2098:54:14",
													"statements": [
														{
															"nativeSrc": "2108:38:14",
															"nodeType": "YulAssignment",
															"src": "2108:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:14"
																		},
																		"nativeSrc": "2122:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:14"
																		},
																		"nativeSrc": "2138:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:14"
																},
																"nativeSrc": "2118:28:14",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:14",
														"nodeType": "YulTypedName",
														"src": "2081:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:14",
														"nodeType": "YulTypedName",
														"src": "2091:6:14",
														"type": ""
													}
												],
												"src": "2050:102:14"
											},
											{
												"body": {
													"nativeSrc": "2250:285:14",
													"nodeType": "YulBlock",
													"src": "2250:285:14",
													"statements": [
														{
															"nativeSrc": "2260:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:14"
																},
																"nativeSrc": "2274:39:14",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:14",
															"nodeType": "YulAssignment",
															"src": "2322:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:14"
																},
																"nativeSrc": "2329:71:14",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:14",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:14"
																		},
																		"nativeSrc": "2444:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:14"
																},
																"nativeSrc": "2409:65:14",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:14"
															},
															"nativeSrc": "2409:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:14"
														},
														{
															"nativeSrc": "2483:46:14",
															"nodeType": "YulAssignment",
															"src": "2483:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:14"
																		},
																		"nativeSrc": "2499:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:14"
																},
																"nativeSrc": "2490:39:14",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:14",
														"nodeType": "YulTypedName",
														"src": "2231:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:14",
														"nodeType": "YulTypedName",
														"src": "2238:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:14",
														"nodeType": "YulTypedName",
														"src": "2246:3:14",
														"type": ""
													}
												],
												"src": "2158:377:14"
											},
											{
												"body": {
													"nativeSrc": "2659:195:14",
													"nodeType": "YulBlock",
													"src": "2659:195:14",
													"statements": [
														{
															"nativeSrc": "2669:26:14",
															"nodeType": "YulAssignment",
															"src": "2669:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:14"
																},
																"nativeSrc": "2677:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:14"
																		},
																		"nativeSrc": "2712:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:14"
																		},
																		"nativeSrc": "2731:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:14"
																},
																"nativeSrc": "2705:47:14",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:14"
															},
															"nativeSrc": "2705:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:14"
														},
														{
															"nativeSrc": "2761:86:14",
															"nodeType": "YulAssignment",
															"src": "2761:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:14"
																},
																"nativeSrc": "2769:78:14",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:14",
														"nodeType": "YulTypedName",
														"src": "2631:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:14",
														"nodeType": "YulTypedName",
														"src": "2643:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:14",
														"nodeType": "YulTypedName",
														"src": "2654:4:14",
														"type": ""
													}
												],
												"src": "2541:313:14"
											},
											{
												"body": {
													"nativeSrc": "2905:32:14",
													"nodeType": "YulBlock",
													"src": "2905:32:14",
													"statements": [
														{
															"nativeSrc": "2915:16:14",
															"nodeType": "YulAssignment",
															"src": "2915:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:14",
																"nodeType": "YulIdentifier",
																"src": "2926:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:14",
														"nodeType": "YulTypedName",
														"src": "2887:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:14",
														"nodeType": "YulTypedName",
														"src": "2897:7:14",
														"type": ""
													}
												],
												"src": "2860:77:14"
											},
											{
												"body": {
													"nativeSrc": "2986:79:14",
													"nodeType": "YulBlock",
													"src": "2986:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:14",
																"nodeType": "YulBlock",
																"src": "3043:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:14"
																			},
																			"nativeSrc": "3045:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:14"
																		},
																		"nativeSrc": "3045:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:14"
																				},
																				"nativeSrc": "3016:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:14"
																		},
																		"nativeSrc": "3006:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:14"
																},
																"nativeSrc": "2999:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:14"
															},
															"nativeSrc": "2996:63:14",
															"nodeType": "YulIf",
															"src": "2996:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:14",
														"nodeType": "YulTypedName",
														"src": "2979:5:14",
														"type": ""
													}
												],
												"src": "2943:122:14"
											},
											{
												"body": {
													"nativeSrc": "3123:87:14",
													"nodeType": "YulBlock",
													"src": "3123:87:14",
													"statements": [
														{
															"nativeSrc": "3133:29:14",
															"nodeType": "YulAssignment",
															"src": "3133:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:14"
																},
																"nativeSrc": "3142:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:14"
																},
																"nativeSrc": "3171:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:14"
															},
															"nativeSrc": "3171:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:14",
														"nodeType": "YulTypedName",
														"src": "3101:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:14",
														"nodeType": "YulTypedName",
														"src": "3109:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:14",
														"nodeType": "YulTypedName",
														"src": "3117:5:14",
														"type": ""
													}
												],
												"src": "3071:139:14"
											},
											{
												"body": {
													"nativeSrc": "3282:263:14",
													"nodeType": "YulBlock",
													"src": "3282:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:14",
																"nodeType": "YulBlock",
																"src": "3328:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:14"
																			},
																			"nativeSrc": "3330:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:14"
																		},
																		"nativeSrc": "3330:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:14"
																		},
																		"nativeSrc": "3299:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:14"
																},
																"nativeSrc": "3295:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:14"
															},
															"nativeSrc": "3292:119:14",
															"nodeType": "YulIf",
															"src": "3292:119:14"
														},
														{
															"nativeSrc": "3421:117:14",
															"nodeType": "YulBlock",
															"src": "3421:117:14",
															"statements": [
																{
																	"nativeSrc": "3436:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:14"
																				},
																				"nativeSrc": "3496:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:14"
																		},
																		"nativeSrc": "3475:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:14",
														"nodeType": "YulTypedName",
														"src": "3252:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:14",
														"nodeType": "YulTypedName",
														"src": "3263:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:14",
														"nodeType": "YulTypedName",
														"src": "3275:6:14",
														"type": ""
													}
												],
												"src": "3216:329:14"
											},
											{
												"body": {
													"nativeSrc": "3596:81:14",
													"nodeType": "YulBlock",
													"src": "3596:81:14",
													"statements": [
														{
															"nativeSrc": "3606:65:14",
															"nodeType": "YulAssignment",
															"src": "3606:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:14",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:14"
																},
																"nativeSrc": "3617:54:14",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:14",
														"nodeType": "YulTypedName",
														"src": "3578:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:14",
														"nodeType": "YulTypedName",
														"src": "3588:7:14",
														"type": ""
													}
												],
												"src": "3551:126:14"
											},
											{
												"body": {
													"nativeSrc": "3728:51:14",
													"nodeType": "YulBlock",
													"src": "3728:51:14",
													"statements": [
														{
															"nativeSrc": "3738:35:14",
															"nodeType": "YulAssignment",
															"src": "3738:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:14"
																},
																"nativeSrc": "3749:24:14",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:14",
														"nodeType": "YulTypedName",
														"src": "3710:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:14",
														"nodeType": "YulTypedName",
														"src": "3720:7:14",
														"type": ""
													}
												],
												"src": "3683:96:14"
											},
											{
												"body": {
													"nativeSrc": "3850:53:14",
													"nodeType": "YulBlock",
													"src": "3850:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:14"
																		},
																		"nativeSrc": "3872:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:14"
																},
																"nativeSrc": "3860:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:14"
															},
															"nativeSrc": "3860:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:14",
														"nodeType": "YulTypedName",
														"src": "3838:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:14",
														"nodeType": "YulTypedName",
														"src": "3845:3:14",
														"type": ""
													}
												],
												"src": "3785:118:14"
											},
											{
												"body": {
													"nativeSrc": "4007:124:14",
													"nodeType": "YulBlock",
													"src": "4007:124:14",
													"statements": [
														{
															"nativeSrc": "4017:26:14",
															"nodeType": "YulAssignment",
															"src": "4017:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:14"
																},
																"nativeSrc": "4025:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:14",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:14"
																		},
																		"nativeSrc": "4106:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:14"
																},
																"nativeSrc": "4053:71:14",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:14"
															},
															"nativeSrc": "4053:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:14",
														"nodeType": "YulTypedName",
														"src": "3979:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:14",
														"nodeType": "YulTypedName",
														"src": "3991:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:14",
														"nodeType": "YulTypedName",
														"src": "4002:4:14",
														"type": ""
													}
												],
												"src": "3909:222:14"
											},
											{
												"body": {
													"nativeSrc": "4180:79:14",
													"nodeType": "YulBlock",
													"src": "4180:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:14",
																"nodeType": "YulBlock",
																"src": "4237:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:14"
																			},
																			"nativeSrc": "4239:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:14"
																		},
																		"nativeSrc": "4239:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:14"
																				},
																				"nativeSrc": "4210:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:14"
																		},
																		"nativeSrc": "4200:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:14"
																},
																"nativeSrc": "4193:43:14",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:14"
															},
															"nativeSrc": "4190:63:14",
															"nodeType": "YulIf",
															"src": "4190:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:14",
														"nodeType": "YulTypedName",
														"src": "4173:5:14",
														"type": ""
													}
												],
												"src": "4137:122:14"
											},
											{
												"body": {
													"nativeSrc": "4317:87:14",
													"nodeType": "YulBlock",
													"src": "4317:87:14",
													"statements": [
														{
															"nativeSrc": "4327:29:14",
															"nodeType": "YulAssignment",
															"src": "4327:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:14"
																},
																"nativeSrc": "4336:20:14",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:14"
																},
																"nativeSrc": "4365:33:14",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:14"
															},
															"nativeSrc": "4365:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:14",
														"nodeType": "YulTypedName",
														"src": "4295:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:14",
														"nodeType": "YulTypedName",
														"src": "4303:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:14",
														"nodeType": "YulTypedName",
														"src": "4311:5:14",
														"type": ""
													}
												],
												"src": "4265:139:14"
											},
											{
												"body": {
													"nativeSrc": "4493:391:14",
													"nodeType": "YulBlock",
													"src": "4493:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:14",
																"nodeType": "YulBlock",
																"src": "4539:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:14"
																			},
																			"nativeSrc": "4541:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:14"
																		},
																		"nativeSrc": "4541:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:14"
																		},
																		"nativeSrc": "4510:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:14"
																},
																"nativeSrc": "4506:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:14"
															},
															"nativeSrc": "4503:119:14",
															"nodeType": "YulIf",
															"src": "4503:119:14"
														},
														{
															"nativeSrc": "4632:117:14",
															"nodeType": "YulBlock",
															"src": "4632:117:14",
															"statements": [
																{
																	"nativeSrc": "4647:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:14"
																				},
																				"nativeSrc": "4707:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:14"
																		},
																		"nativeSrc": "4686:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:14",
															"nodeType": "YulBlock",
															"src": "4759:118:14",
															"statements": [
																{
																	"nativeSrc": "4774:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:14"
																				},
																				"nativeSrc": "4835:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:14"
																		},
																		"nativeSrc": "4814:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:14",
														"nodeType": "YulTypedName",
														"src": "4455:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:14",
														"nodeType": "YulTypedName",
														"src": "4466:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:14",
														"nodeType": "YulTypedName",
														"src": "4478:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:14",
														"nodeType": "YulTypedName",
														"src": "4486:6:14",
														"type": ""
													}
												],
												"src": "4410:474:14"
											},
											{
												"body": {
													"nativeSrc": "4956:263:14",
													"nodeType": "YulBlock",
													"src": "4956:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5002:83:14",
																"nodeType": "YulBlock",
																"src": "5002:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5004:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "5004:77:14"
																			},
																			"nativeSrc": "5004:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5004:79:14"
																		},
																		"nativeSrc": "5004:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5004:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4977:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4977:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4986:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4986:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4973:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4973:3:14"
																		},
																		"nativeSrc": "4973:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4973:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4998:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4998:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4969:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4969:3:14"
																},
																"nativeSrc": "4969:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4969:32:14"
															},
															"nativeSrc": "4966:119:14",
															"nodeType": "YulIf",
															"src": "4966:119:14"
														},
														{
															"nativeSrc": "5095:117:14",
															"nodeType": "YulBlock",
															"src": "5095:117:14",
															"statements": [
																{
																	"nativeSrc": "5110:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5110:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5124:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5124:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5114:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5114:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5139:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5139:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5174:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5174:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5185:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5185:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5170:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5170:3:14"
																				},
																				"nativeSrc": "5170:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5170:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5194:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5194:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5149:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5149:20:14"
																		},
																		"nativeSrc": "5149:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5149:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5139:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5139:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4890:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4926:9:14",
														"nodeType": "YulTypedName",
														"src": "4926:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4937:7:14",
														"nodeType": "YulTypedName",
														"src": "4937:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4949:6:14",
														"nodeType": "YulTypedName",
														"src": "4949:6:14",
														"type": ""
													}
												],
												"src": "4890:329:14"
											},
											{
												"body": {
													"nativeSrc": "5325:519:14",
													"nodeType": "YulBlock",
													"src": "5325:519:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5371:83:14",
																"nodeType": "YulBlock",
																"src": "5371:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5373:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "5373:77:14"
																			},
																			"nativeSrc": "5373:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5373:79:14"
																		},
																		"nativeSrc": "5373:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5373:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5346:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5346:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5355:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5355:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5342:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5342:3:14"
																		},
																		"nativeSrc": "5342:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5342:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5367:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5338:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5338:3:14"
																},
																"nativeSrc": "5338:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5338:32:14"
															},
															"nativeSrc": "5335:119:14",
															"nodeType": "YulIf",
															"src": "5335:119:14"
														},
														{
															"nativeSrc": "5464:117:14",
															"nodeType": "YulBlock",
															"src": "5464:117:14",
															"statements": [
																{
																	"nativeSrc": "5479:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5479:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5493:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5493:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5483:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5483:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5508:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5508:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5543:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5543:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5554:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5554:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5539:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5539:3:14"
																				},
																				"nativeSrc": "5539:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5539:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5563:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5563:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5518:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5518:20:14"
																		},
																		"nativeSrc": "5518:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5518:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5508:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5508:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5591:118:14",
															"nodeType": "YulBlock",
															"src": "5591:118:14",
															"statements": [
																{
																	"nativeSrc": "5606:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5606:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5620:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5620:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5610:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5610:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5636:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5636:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5671:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5671:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5682:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5682:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5667:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5667:3:14"
																				},
																				"nativeSrc": "5667:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5667:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5691:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5691:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5646:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5646:20:14"
																		},
																		"nativeSrc": "5646:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5646:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5636:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5636:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5719:118:14",
															"nodeType": "YulBlock",
															"src": "5719:118:14",
															"statements": [
																{
																	"nativeSrc": "5734:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5734:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5748:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5748:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5738:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5738:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:14"
																				},
																				"nativeSrc": "5795:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5774:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:14"
																		},
																		"nativeSrc": "5774:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5764:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5225:619:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5279:9:14",
														"nodeType": "YulTypedName",
														"src": "5279:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5290:7:14",
														"nodeType": "YulTypedName",
														"src": "5290:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5302:6:14",
														"nodeType": "YulTypedName",
														"src": "5302:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5310:6:14",
														"nodeType": "YulTypedName",
														"src": "5310:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5318:6:14",
														"nodeType": "YulTypedName",
														"src": "5318:6:14",
														"type": ""
													}
												],
												"src": "5225:619:14"
											},
											{
												"body": {
													"nativeSrc": "5939:28:14",
													"nodeType": "YulBlock",
													"src": "5939:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5956:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5956:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5959:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5959:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5949:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5949:6:14"
																},
																"nativeSrc": "5949:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5949:12:14"
															},
															"nativeSrc": "5949:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "5949:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5850:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5850:117:14"
											},
											{
												"body": {
													"nativeSrc": "6062:28:14",
													"nodeType": "YulBlock",
													"src": "6062:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6082:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:14"
																},
																"nativeSrc": "6072:12:14",
																"nodeType": "YulFunctionCall",
																"src": "6072:12:14"
															},
															"nativeSrc": "6072:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "6072:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5973:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5973:117:14"
											},
											{
												"body": {
													"nativeSrc": "6124:152:14",
													"nodeType": "YulBlock",
													"src": "6124:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6141:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6141:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6144:77:14",
																		"nodeType": "YulLiteral",
																		"src": "6144:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6134:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6134:6:14"
																},
																"nativeSrc": "6134:88:14",
																"nodeType": "YulFunctionCall",
																"src": "6134:88:14"
															},
															"nativeSrc": "6134:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "6134:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6238:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6238:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6241:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6241:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6231:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6231:6:14"
																},
																"nativeSrc": "6231:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6231:15:14"
															},
															"nativeSrc": "6231:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6231:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6262:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6262:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6265:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6265:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6255:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:14"
																},
																"nativeSrc": "6255:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6255:15:14"
															},
															"nativeSrc": "6255:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6255:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6096:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "6096:180:14"
											},
											{
												"body": {
													"nativeSrc": "6325:238:14",
													"nodeType": "YulBlock",
													"src": "6325:238:14",
													"statements": [
														{
															"nativeSrc": "6335:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6335:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6357:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6357:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6387:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6387:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6365:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "6365:21:14"
																		},
																		"nativeSrc": "6365:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6365:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6353:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6353:3:14"
																},
																"nativeSrc": "6353:40:14",
																"nodeType": "YulFunctionCall",
																"src": "6353:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6339:10:14",
																	"nodeType": "YulTypedName",
																	"src": "6339:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6504:22:14",
																"nodeType": "YulBlock",
																"src": "6504:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6506:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6506:16:14"
																			},
																			"nativeSrc": "6506:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6506:18:14"
																		},
																		"nativeSrc": "6506:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6506:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6447:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "6447:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6459:18:14",
																				"nodeType": "YulLiteral",
																				"src": "6459:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6444:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6444:2:14"
																		},
																		"nativeSrc": "6444:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6444:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6483:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "6483:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6495:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6495:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6480:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6480:2:14"
																		},
																		"nativeSrc": "6480:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6480:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6441:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6441:2:14"
																},
																"nativeSrc": "6441:62:14",
																"nodeType": "YulFunctionCall",
																"src": "6441:62:14"
															},
															"nativeSrc": "6438:88:14",
															"nodeType": "YulIf",
															"src": "6438:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6542:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6542:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6546:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "6546:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6535:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6535:6:14"
																},
																"nativeSrc": "6535:22:14",
																"nodeType": "YulFunctionCall",
																"src": "6535:22:14"
															},
															"nativeSrc": "6535:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "6535:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6282:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6311:6:14",
														"nodeType": "YulTypedName",
														"src": "6311:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6319:4:14",
														"nodeType": "YulTypedName",
														"src": "6319:4:14",
														"type": ""
													}
												],
												"src": "6282:281:14"
											},
											{
												"body": {
													"nativeSrc": "6610:88:14",
													"nodeType": "YulBlock",
													"src": "6610:88:14",
													"statements": [
														{
															"nativeSrc": "6620:30:14",
															"nodeType": "YulAssignment",
															"src": "6620:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6630:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "6630:18:14"
																},
																"nativeSrc": "6630:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6630:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6620:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6679:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6679:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6687:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6687:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6659:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "6659:19:14"
																},
																"nativeSrc": "6659:33:14",
																"nodeType": "YulFunctionCall",
																"src": "6659:33:14"
															},
															"nativeSrc": "6659:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "6659:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6569:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6594:4:14",
														"nodeType": "YulTypedName",
														"src": "6594:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6603:6:14",
														"nodeType": "YulTypedName",
														"src": "6603:6:14",
														"type": ""
													}
												],
												"src": "6569:129:14"
											},
											{
												"body": {
													"nativeSrc": "6771:241:14",
													"nodeType": "YulBlock",
													"src": "6771:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6876:22:14",
																"nodeType": "YulBlock",
																"src": "6876:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6878:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6878:16:14"
																			},
																			"nativeSrc": "6878:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6878:18:14"
																		},
																		"nativeSrc": "6878:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6878:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6848:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6848:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6856:18:14",
																		"nodeType": "YulLiteral",
																		"src": "6856:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6845:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6845:2:14"
																},
																"nativeSrc": "6845:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6845:30:14"
															},
															"nativeSrc": "6842:56:14",
															"nodeType": "YulIf",
															"src": "6842:56:14"
														},
														{
															"nativeSrc": "6908:37:14",
															"nodeType": "YulAssignment",
															"src": "6908:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6938:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6938:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6916:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "6916:21:14"
																},
																"nativeSrc": "6916:29:14",
																"nodeType": "YulFunctionCall",
																"src": "6916:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6908:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6908:4:14"
																}
															]
														},
														{
															"nativeSrc": "6982:23:14",
															"nodeType": "YulAssignment",
															"src": "6982:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6994:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6994:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7000:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7000:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6990:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6990:3:14"
																},
																"nativeSrc": "6990:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6990:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6982:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6982:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6704:308:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6755:6:14",
														"nodeType": "YulTypedName",
														"src": "6755:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6766:4:14",
														"nodeType": "YulTypedName",
														"src": "6766:4:14",
														"type": ""
													}
												],
												"src": "6704:308:14"
											},
											{
												"body": {
													"nativeSrc": "7082:82:14",
													"nodeType": "YulBlock",
													"src": "7082:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7105:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7105:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7110:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7110:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7115:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7115:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7092:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7092:12:14"
																},
																"nativeSrc": "7092:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7092:30:14"
															},
															"nativeSrc": "7092:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7092:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7142:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7142:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7147:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7147:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7138:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7138:3:14"
																		},
																		"nativeSrc": "7138:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7138:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7156:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7156:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7131:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7131:6:14"
																},
																"nativeSrc": "7131:27:14",
																"nodeType": "YulFunctionCall",
																"src": "7131:27:14"
															},
															"nativeSrc": "7131:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "7131:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7018:146:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7064:3:14",
														"nodeType": "YulTypedName",
														"src": "7064:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7069:3:14",
														"nodeType": "YulTypedName",
														"src": "7069:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7074:6:14",
														"nodeType": "YulTypedName",
														"src": "7074:6:14",
														"type": ""
													}
												],
												"src": "7018:146:14"
											},
											{
												"body": {
													"nativeSrc": "7254:341:14",
													"nodeType": "YulBlock",
													"src": "7254:341:14",
													"statements": [
														{
															"nativeSrc": "7264:75:14",
															"nodeType": "YulAssignment",
															"src": "7264:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7331:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7331:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "7289:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "7289:41:14"
																		},
																		"nativeSrc": "7289:49:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7289:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7273:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "7273:15:14"
																},
																"nativeSrc": "7273:66:14",
																"nodeType": "YulFunctionCall",
																"src": "7273:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7264:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7264:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7355:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7355:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7362:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7362:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7348:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7348:6:14"
																},
																"nativeSrc": "7348:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7348:21:14"
															},
															"nativeSrc": "7348:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7348:21:14"
														},
														{
															"nativeSrc": "7378:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7378:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7393:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7393:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7400:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7389:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7389:3:14"
																},
																"nativeSrc": "7389:16:14",
																"nodeType": "YulFunctionCall",
																"src": "7389:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7382:3:14",
																	"nodeType": "YulTypedName",
																	"src": "7382:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7443:83:14",
																"nodeType": "YulBlock",
																"src": "7443:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7445:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7445:77:14"
																			},
																			"nativeSrc": "7445:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7445:79:14"
																		},
																		"nativeSrc": "7445:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7445:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7424:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7424:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7429:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7429:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7420:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7420:3:14"
																		},
																		"nativeSrc": "7420:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7420:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7438:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7438:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7417:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7417:2:14"
																},
																"nativeSrc": "7417:25:14",
																"nodeType": "YulFunctionCall",
																"src": "7417:25:14"
															},
															"nativeSrc": "7414:112:14",
															"nodeType": "YulIf",
															"src": "7414:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7572:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7572:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7577:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7577:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7582:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7582:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7535:36:14",
																	"nodeType": "YulIdentifier",
																	"src": "7535:36:14"
																},
																"nativeSrc": "7535:54:14",
																"nodeType": "YulFunctionCall",
																"src": "7535:54:14"
															},
															"nativeSrc": "7535:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "7535:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "7170:425:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7227:3:14",
														"nodeType": "YulTypedName",
														"src": "7227:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7232:6:14",
														"nodeType": "YulTypedName",
														"src": "7232:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7240:3:14",
														"nodeType": "YulTypedName",
														"src": "7240:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7248:5:14",
														"nodeType": "YulTypedName",
														"src": "7248:5:14",
														"type": ""
													}
												],
												"src": "7170:425:14"
											},
											{
												"body": {
													"nativeSrc": "7677:278:14",
													"nodeType": "YulBlock",
													"src": "7677:278:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7726:83:14",
																"nodeType": "YulBlock",
																"src": "7726:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7728:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7728:77:14"
																			},
																			"nativeSrc": "7728:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7728:79:14"
																		},
																		"nativeSrc": "7728:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7728:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7705:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7705:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7713:4:14",
																						"nodeType": "YulLiteral",
																						"src": "7713:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7701:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7701:3:14"
																				},
																				"nativeSrc": "7701:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7701:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7720:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7720:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7697:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7697:3:14"
																		},
																		"nativeSrc": "7697:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7697:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7690:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7690:6:14"
																},
																"nativeSrc": "7690:35:14",
																"nodeType": "YulFunctionCall",
																"src": "7690:35:14"
															},
															"nativeSrc": "7687:122:14",
															"nodeType": "YulIf",
															"src": "7687:122:14"
														},
														{
															"nativeSrc": "7818:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7818:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7845:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7845:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7832:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7832:12:14"
																},
																"nativeSrc": "7832:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7832:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7822:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7822:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7861:88:14",
															"nodeType": "YulAssignment",
															"src": "7861:88:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7922:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7922:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7930:4:14",
																				"nodeType": "YulLiteral",
																				"src": "7930:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7918:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7918:3:14"
																		},
																		"nativeSrc": "7918:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7918:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7937:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7937:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7945:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7945:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7870:47:14",
																	"nodeType": "YulIdentifier",
																	"src": "7870:47:14"
																},
																"nativeSrc": "7870:79:14",
																"nodeType": "YulFunctionCall",
																"src": "7870:79:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7861:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7861:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7615:340:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7655:6:14",
														"nodeType": "YulTypedName",
														"src": "7655:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7663:3:14",
														"nodeType": "YulTypedName",
														"src": "7663:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7671:5:14",
														"nodeType": "YulTypedName",
														"src": "7671:5:14",
														"type": ""
													}
												],
												"src": "7615:340:14"
											},
											{
												"body": {
													"nativeSrc": "8037:433:14",
													"nodeType": "YulBlock",
													"src": "8037:433:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8083:83:14",
																"nodeType": "YulBlock",
																"src": "8083:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8085:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "8085:77:14"
																			},
																			"nativeSrc": "8085:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8085:79:14"
																		},
																		"nativeSrc": "8085:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8085:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8058:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8058:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8067:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8067:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8054:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8054:3:14"
																		},
																		"nativeSrc": "8054:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8054:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8079:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8079:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8050:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8050:3:14"
																},
																"nativeSrc": "8050:32:14",
																"nodeType": "YulFunctionCall",
																"src": "8050:32:14"
															},
															"nativeSrc": "8047:119:14",
															"nodeType": "YulIf",
															"src": "8047:119:14"
														},
														{
															"nativeSrc": "8176:287:14",
															"nodeType": "YulBlock",
															"src": "8176:287:14",
															"statements": [
																{
																	"nativeSrc": "8191:45:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8191:45:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8222:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8222:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8233:1:14",
																						"nodeType": "YulLiteral",
																						"src": "8233:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8218:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8218:3:14"
																				},
																				"nativeSrc": "8218:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8218:17:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8205:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "8205:12:14"
																		},
																		"nativeSrc": "8205:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8205:31:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8195:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8195:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8283:83:14",
																		"nodeType": "YulBlock",
																		"src": "8283:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8285:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "8285:77:14"
																					},
																					"nativeSrc": "8285:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8285:79:14"
																				},
																				"nativeSrc": "8285:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8285:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8255:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8255:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8263:18:14",
																				"nodeType": "YulLiteral",
																				"src": "8263:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8252:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8252:2:14"
																		},
																		"nativeSrc": "8252:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8252:30:14"
																	},
																	"nativeSrc": "8249:117:14",
																	"nodeType": "YulIf",
																	"src": "8249:117:14"
																},
																{
																	"nativeSrc": "8380:73:14",
																	"nodeType": "YulAssignment",
																	"src": "8380:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8425:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8425:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8436:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8436:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8421:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8421:3:14"
																				},
																				"nativeSrc": "8421:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8421:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8445:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8445:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8390:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "8390:30:14"
																		},
																		"nativeSrc": "8390:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8390:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8380:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8380:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "7961:509:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8007:9:14",
														"nodeType": "YulTypedName",
														"src": "8007:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8018:7:14",
														"nodeType": "YulTypedName",
														"src": "8018:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8030:6:14",
														"nodeType": "YulTypedName",
														"src": "8030:6:14",
														"type": ""
													}
												],
												"src": "7961:509:14"
											},
											{
												"body": {
													"nativeSrc": "8541:53:14",
													"nodeType": "YulBlock",
													"src": "8541:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8558:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8558:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8581:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8581:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8563:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "8563:17:14"
																		},
																		"nativeSrc": "8563:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8563:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8551:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8551:6:14"
																},
																"nativeSrc": "8551:37:14",
																"nodeType": "YulFunctionCall",
																"src": "8551:37:14"
															},
															"nativeSrc": "8551:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "8551:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8476:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8529:5:14",
														"nodeType": "YulTypedName",
														"src": "8529:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8536:3:14",
														"nodeType": "YulTypedName",
														"src": "8536:3:14",
														"type": ""
													}
												],
												"src": "8476:118:14"
											},
											{
												"body": {
													"nativeSrc": "8698:124:14",
													"nodeType": "YulBlock",
													"src": "8698:124:14",
													"statements": [
														{
															"nativeSrc": "8708:26:14",
															"nodeType": "YulAssignment",
															"src": "8708:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8720:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8720:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8731:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8731:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8716:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8716:3:14"
																},
																"nativeSrc": "8716:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8716:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8708:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8708:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8788:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8788:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8801:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8801:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8812:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8812:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8797:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8797:3:14"
																		},
																		"nativeSrc": "8797:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8797:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8744:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "8744:43:14"
																},
																"nativeSrc": "8744:71:14",
																"nodeType": "YulFunctionCall",
																"src": "8744:71:14"
															},
															"nativeSrc": "8744:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "8744:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8600:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8670:9:14",
														"nodeType": "YulTypedName",
														"src": "8670:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8682:6:14",
														"nodeType": "YulTypedName",
														"src": "8682:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8693:4:14",
														"nodeType": "YulTypedName",
														"src": "8693:4:14",
														"type": ""
													}
												],
												"src": "8600:222:14"
											},
											{
												"body": {
													"nativeSrc": "8868:76:14",
													"nodeType": "YulBlock",
													"src": "8868:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8922:16:14",
																"nodeType": "YulBlock",
																"src": "8922:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8931:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8931:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8934:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8934:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8924:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8924:6:14"
																			},
																			"nativeSrc": "8924:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8924:12:14"
																		},
																		"nativeSrc": "8924:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8924:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8891:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8891:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8913:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "8913:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8898:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "8898:14:14"
																				},
																				"nativeSrc": "8898:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8898:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8888:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8888:2:14"
																		},
																		"nativeSrc": "8888:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8888:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8881:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8881:6:14"
																},
																"nativeSrc": "8881:40:14",
																"nodeType": "YulFunctionCall",
																"src": "8881:40:14"
															},
															"nativeSrc": "8878:60:14",
															"nodeType": "YulIf",
															"src": "8878:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8828:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8861:5:14",
														"nodeType": "YulTypedName",
														"src": "8861:5:14",
														"type": ""
													}
												],
												"src": "8828:116:14"
											},
											{
												"body": {
													"nativeSrc": "8999:84:14",
													"nodeType": "YulBlock",
													"src": "8999:84:14",
													"statements": [
														{
															"nativeSrc": "9009:29:14",
															"nodeType": "YulAssignment",
															"src": "9009:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9031:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9031:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9018:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "9018:12:14"
																},
																"nativeSrc": "9018:20:14",
																"nodeType": "YulFunctionCall",
																"src": "9018:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9009:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9009:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9071:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9071:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9047:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "9047:23:14"
																},
																"nativeSrc": "9047:30:14",
																"nodeType": "YulFunctionCall",
																"src": "9047:30:14"
															},
															"nativeSrc": "9047:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "9047:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "8950:133:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8977:6:14",
														"nodeType": "YulTypedName",
														"src": "8977:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8985:3:14",
														"nodeType": "YulTypedName",
														"src": "8985:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8993:5:14",
														"nodeType": "YulTypedName",
														"src": "8993:5:14",
														"type": ""
													}
												],
												"src": "8950:133:14"
											},
											{
												"body": {
													"nativeSrc": "9169:388:14",
													"nodeType": "YulBlock",
													"src": "9169:388:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:14",
																"nodeType": "YulBlock",
																"src": "9215:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:14"
																			},
																			"nativeSrc": "9217:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:14"
																		},
																		"nativeSrc": "9217:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9190:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9190:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9199:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9199:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9186:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9186:3:14"
																		},
																		"nativeSrc": "9186:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9186:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9211:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9211:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9182:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9182:3:14"
																},
																"nativeSrc": "9182:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9182:32:14"
															},
															"nativeSrc": "9179:119:14",
															"nodeType": "YulIf",
															"src": "9179:119:14"
														},
														{
															"nativeSrc": "9308:117:14",
															"nodeType": "YulBlock",
															"src": "9308:117:14",
															"statements": [
																{
																	"nativeSrc": "9323:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:14",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:14"
																				},
																				"nativeSrc": "9383:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:14"
																		},
																		"nativeSrc": "9362:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:115:14",
															"nodeType": "YulBlock",
															"src": "9435:115:14",
															"statements": [
																{
																	"nativeSrc": "9450:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:60:14",
																	"nodeType": "YulAssignment",
																	"src": "9480:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9512:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9512:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9523:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9523:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9508:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9508:3:14"
																				},
																				"nativeSrc": "9508:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9508:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9532:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9532:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "9490:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "9490:17:14"
																		},
																		"nativeSrc": "9490:50:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9089:468:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9131:9:14",
														"nodeType": "YulTypedName",
														"src": "9131:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9142:7:14",
														"nodeType": "YulTypedName",
														"src": "9142:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9154:6:14",
														"nodeType": "YulTypedName",
														"src": "9154:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9162:6:14",
														"nodeType": "YulTypedName",
														"src": "9162:6:14",
														"type": ""
													}
												],
												"src": "9089:468:14"
											},
											{
												"body": {
													"nativeSrc": "9629:241:14",
													"nodeType": "YulBlock",
													"src": "9629:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9734:22:14",
																"nodeType": "YulBlock",
																"src": "9734:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9736:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "9736:16:14"
																			},
																			"nativeSrc": "9736:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9736:18:14"
																		},
																		"nativeSrc": "9736:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9736:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9706:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9706:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9714:18:14",
																		"nodeType": "YulLiteral",
																		"src": "9714:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9703:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "9703:2:14"
																},
																"nativeSrc": "9703:30:14",
																"nodeType": "YulFunctionCall",
																"src": "9703:30:14"
															},
															"nativeSrc": "9700:56:14",
															"nodeType": "YulIf",
															"src": "9700:56:14"
														},
														{
															"nativeSrc": "9766:37:14",
															"nodeType": "YulAssignment",
															"src": "9766:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9796:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9796:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9774:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "9774:21:14"
																},
																"nativeSrc": "9774:29:14",
																"nodeType": "YulFunctionCall",
																"src": "9774:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9766:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9766:4:14"
																}
															]
														},
														{
															"nativeSrc": "9840:23:14",
															"nodeType": "YulAssignment",
															"src": "9840:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9852:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "9852:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9858:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9858:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9848:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9848:3:14"
																},
																"nativeSrc": "9848:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9848:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9840:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9840:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "9563:307:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9613:6:14",
														"nodeType": "YulTypedName",
														"src": "9613:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9624:4:14",
														"nodeType": "YulTypedName",
														"src": "9624:4:14",
														"type": ""
													}
												],
												"src": "9563:307:14"
											},
											{
												"body": {
													"nativeSrc": "9959:340:14",
													"nodeType": "YulBlock",
													"src": "9959:340:14",
													"statements": [
														{
															"nativeSrc": "9969:74:14",
															"nodeType": "YulAssignment",
															"src": "9969:74:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10035:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10035:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9994:40:14",
																			"nodeType": "YulIdentifier",
																			"src": "9994:40:14"
																		},
																		"nativeSrc": "9994:48:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9994:48:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9978:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "9978:15:14"
																},
																"nativeSrc": "9978:65:14",
																"nodeType": "YulFunctionCall",
																"src": "9978:65:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9969:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9969:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10059:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10059:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10066:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10066:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10052:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10052:6:14"
																},
																"nativeSrc": "10052:21:14",
																"nodeType": "YulFunctionCall",
																"src": "10052:21:14"
															},
															"nativeSrc": "10052:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "10052:21:14"
														},
														{
															"nativeSrc": "10082:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10082:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10097:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10097:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10104:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10104:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10093:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10093:3:14"
																},
																"nativeSrc": "10093:16:14",
																"nodeType": "YulFunctionCall",
																"src": "10093:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10086:3:14",
																	"nodeType": "YulTypedName",
																	"src": "10086:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10147:83:14",
																"nodeType": "YulBlock",
																"src": "10147:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10149:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10149:77:14"
																			},
																			"nativeSrc": "10149:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10149:79:14"
																		},
																		"nativeSrc": "10149:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10149:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10128:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "10128:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10133:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10133:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10124:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10124:3:14"
																		},
																		"nativeSrc": "10124:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10124:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10142:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10142:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10121:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "10121:2:14"
																},
																"nativeSrc": "10121:25:14",
																"nodeType": "YulFunctionCall",
																"src": "10121:25:14"
															},
															"nativeSrc": "10118:112:14",
															"nodeType": "YulIf",
															"src": "10118:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10276:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10276:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10281:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10281:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10286:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10286:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10239:36:14",
																	"nodeType": "YulIdentifier",
																	"src": "10239:36:14"
																},
																"nativeSrc": "10239:54:14",
																"nodeType": "YulFunctionCall",
																"src": "10239:54:14"
															},
															"nativeSrc": "10239:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "10239:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9876:423:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9932:3:14",
														"nodeType": "YulTypedName",
														"src": "9932:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9937:6:14",
														"nodeType": "YulTypedName",
														"src": "9937:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9945:3:14",
														"nodeType": "YulTypedName",
														"src": "9945:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9953:5:14",
														"nodeType": "YulTypedName",
														"src": "9953:5:14",
														"type": ""
													}
												],
												"src": "9876:423:14"
											},
											{
												"body": {
													"nativeSrc": "10379:277:14",
													"nodeType": "YulBlock",
													"src": "10379:277:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10428:83:14",
																"nodeType": "YulBlock",
																"src": "10428:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10430:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10430:77:14"
																			},
																			"nativeSrc": "10430:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10430:79:14"
																		},
																		"nativeSrc": "10430:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10430:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10407:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10407:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10415:4:14",
																						"nodeType": "YulLiteral",
																						"src": "10415:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10403:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10403:3:14"
																				},
																				"nativeSrc": "10403:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10403:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10422:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "10422:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10399:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10399:3:14"
																		},
																		"nativeSrc": "10399:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10399:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10392:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10392:6:14"
																},
																"nativeSrc": "10392:35:14",
																"nodeType": "YulFunctionCall",
																"src": "10392:35:14"
															},
															"nativeSrc": "10389:122:14",
															"nodeType": "YulIf",
															"src": "10389:122:14"
														},
														{
															"nativeSrc": "10520:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10520:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10547:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10547:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10534:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "10534:12:14"
																},
																"nativeSrc": "10534:20:14",
																"nodeType": "YulFunctionCall",
																"src": "10534:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10524:6:14",
																	"nodeType": "YulTypedName",
																	"src": "10524:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10563:87:14",
															"nodeType": "YulAssignment",
															"src": "10563:87:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10623:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10623:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10631:4:14",
																				"nodeType": "YulLiteral",
																				"src": "10631:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10619:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10619:3:14"
																		},
																		"nativeSrc": "10619:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10619:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10638:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10638:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10646:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10646:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "10572:46:14",
																	"nodeType": "YulIdentifier",
																	"src": "10572:46:14"
																},
																"nativeSrc": "10572:78:14",
																"nodeType": "YulFunctionCall",
																"src": "10572:78:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10563:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10563:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10318:338:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10357:6:14",
														"nodeType": "YulTypedName",
														"src": "10357:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10365:3:14",
														"nodeType": "YulTypedName",
														"src": "10365:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10373:5:14",
														"nodeType": "YulTypedName",
														"src": "10373:5:14",
														"type": ""
													}
												],
												"src": "10318:338:14"
											},
											{
												"body": {
													"nativeSrc": "10788:817:14",
													"nodeType": "YulBlock",
													"src": "10788:817:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10835:83:14",
																"nodeType": "YulBlock",
																"src": "10835:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10837:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10837:77:14"
																			},
																			"nativeSrc": "10837:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10837:79:14"
																		},
																		"nativeSrc": "10837:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10837:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10809:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10809:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10818:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10818:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10805:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10805:3:14"
																		},
																		"nativeSrc": "10805:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10805:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10830:3:14",
																		"nodeType": "YulLiteral",
																		"src": "10830:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10801:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10801:3:14"
																},
																"nativeSrc": "10801:33:14",
																"nodeType": "YulFunctionCall",
																"src": "10801:33:14"
															},
															"nativeSrc": "10798:120:14",
															"nodeType": "YulIf",
															"src": "10798:120:14"
														},
														{
															"nativeSrc": "10928:117:14",
															"nodeType": "YulBlock",
															"src": "10928:117:14",
															"statements": [
																{
																	"nativeSrc": "10943:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10943:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10957:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10957:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10947:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10947:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10972:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10972:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11007:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11007:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11018:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11018:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11003:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11003:3:14"
																				},
																				"nativeSrc": "11003:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11003:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11027:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11027:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10982:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10982:20:14"
																		},
																		"nativeSrc": "10982:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10982:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10972:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10972:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11055:118:14",
															"nodeType": "YulBlock",
															"src": "11055:118:14",
															"statements": [
																{
																	"nativeSrc": "11070:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11070:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11084:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11084:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11074:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11074:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11100:63:14",
																	"nodeType": "YulAssignment",
																	"src": "11100:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11135:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11135:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11146:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11146:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11131:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11131:3:14"
																				},
																				"nativeSrc": "11131:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11131:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11155:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11155:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11110:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "11110:20:14"
																		},
																		"nativeSrc": "11110:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11110:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11100:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11100:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11183:118:14",
															"nodeType": "YulBlock",
															"src": "11183:118:14",
															"statements": [
																{
																	"nativeSrc": "11198:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11198:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11212:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11212:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11202:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11202:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11228:63:14",
																	"nodeType": "YulAssignment",
																	"src": "11228:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11263:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11263:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11274:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11274:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11259:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11259:3:14"
																				},
																				"nativeSrc": "11259:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11259:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11283:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11283:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11238:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "11238:20:14"
																		},
																		"nativeSrc": "11238:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11238:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11228:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11228:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11311:287:14",
															"nodeType": "YulBlock",
															"src": "11311:287:14",
															"statements": [
																{
																	"nativeSrc": "11326:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11326:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11357:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11357:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11368:2:14",
																						"nodeType": "YulLiteral",
																						"src": "11368:2:14",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11353:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11353:3:14"
																				},
																				"nativeSrc": "11353:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11353:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11340:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "11340:12:14"
																		},
																		"nativeSrc": "11340:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11340:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11330:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11330:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11419:83:14",
																		"nodeType": "YulBlock",
																		"src": "11419:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11421:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "11421:77:14"
																					},
																					"nativeSrc": "11421:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11421:79:14"
																				},
																				"nativeSrc": "11421:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "11421:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11391:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11391:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11399:18:14",
																				"nodeType": "YulLiteral",
																				"src": "11399:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11388:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "11388:2:14"
																		},
																		"nativeSrc": "11388:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11388:30:14"
																	},
																	"nativeSrc": "11385:117:14",
																	"nodeType": "YulIf",
																	"src": "11385:117:14"
																},
																{
																	"nativeSrc": "11516:72:14",
																	"nodeType": "YulAssignment",
																	"src": "11516:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11560:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11560:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11571:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11571:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11556:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11556:3:14"
																				},
																				"nativeSrc": "11556:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11556:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11580:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11580:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11526:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "11526:29:14"
																		},
																		"nativeSrc": "11526:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11526:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11516:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11516:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "10662:943:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10734:9:14",
														"nodeType": "YulTypedName",
														"src": "10734:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10745:7:14",
														"nodeType": "YulTypedName",
														"src": "10745:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10757:6:14",
														"nodeType": "YulTypedName",
														"src": "10757:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10765:6:14",
														"nodeType": "YulTypedName",
														"src": "10765:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10773:6:14",
														"nodeType": "YulTypedName",
														"src": "10773:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10781:6:14",
														"nodeType": "YulTypedName",
														"src": "10781:6:14",
														"type": ""
													}
												],
												"src": "10662:943:14"
											},
											{
												"body": {
													"nativeSrc": "11694:391:14",
													"nodeType": "YulBlock",
													"src": "11694:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11740:83:14",
																"nodeType": "YulBlock",
																"src": "11740:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11742:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11742:77:14"
																			},
																			"nativeSrc": "11742:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11742:79:14"
																		},
																		"nativeSrc": "11742:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11742:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11715:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11715:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11724:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11724:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11711:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11711:3:14"
																		},
																		"nativeSrc": "11711:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11711:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11736:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11736:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11707:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11707:3:14"
																},
																"nativeSrc": "11707:32:14",
																"nodeType": "YulFunctionCall",
																"src": "11707:32:14"
															},
															"nativeSrc": "11704:119:14",
															"nodeType": "YulIf",
															"src": "11704:119:14"
														},
														{
															"nativeSrc": "11833:117:14",
															"nodeType": "YulBlock",
															"src": "11833:117:14",
															"statements": [
																{
																	"nativeSrc": "11848:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11848:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11862:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11862:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11852:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11852:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11877:63:14",
																	"nodeType": "YulAssignment",
																	"src": "11877:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11912:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11912:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11923:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11923:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11908:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11908:3:14"
																				},
																				"nativeSrc": "11908:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11908:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11932:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11932:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11887:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "11887:20:14"
																		},
																		"nativeSrc": "11887:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11887:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11877:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11877:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11960:118:14",
															"nodeType": "YulBlock",
															"src": "11960:118:14",
															"statements": [
																{
																	"nativeSrc": "11975:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11975:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11989:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11989:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11979:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11979:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12005:63:14",
																	"nodeType": "YulAssignment",
																	"src": "12005:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12040:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12040:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12051:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12051:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12036:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12036:3:14"
																				},
																				"nativeSrc": "12036:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12036:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12060:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12060:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12015:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "12015:20:14"
																		},
																		"nativeSrc": "12015:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12015:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12005:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "12005:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11611:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11656:9:14",
														"nodeType": "YulTypedName",
														"src": "11656:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11667:7:14",
														"nodeType": "YulTypedName",
														"src": "11667:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11679:6:14",
														"nodeType": "YulTypedName",
														"src": "11679:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11687:6:14",
														"nodeType": "YulTypedName",
														"src": "11687:6:14",
														"type": ""
													}
												],
												"src": "11611:474:14"
											},
											{
												"body": {
													"nativeSrc": "12119:152:14",
													"nodeType": "YulBlock",
													"src": "12119:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12136:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12136:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12139:77:14",
																		"nodeType": "YulLiteral",
																		"src": "12139:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12129:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12129:6:14"
																},
																"nativeSrc": "12129:88:14",
																"nodeType": "YulFunctionCall",
																"src": "12129:88:14"
															},
															"nativeSrc": "12129:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "12129:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12233:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12233:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12236:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12236:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12226:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12226:6:14"
																},
																"nativeSrc": "12226:15:14",
																"nodeType": "YulFunctionCall",
																"src": "12226:15:14"
															},
															"nativeSrc": "12226:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "12226:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12257:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12257:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12260:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12260:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12250:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12250:6:14"
																},
																"nativeSrc": "12250:15:14",
																"nodeType": "YulFunctionCall",
																"src": "12250:15:14"
															},
															"nativeSrc": "12250:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "12250:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12091:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "12091:180:14"
											},
											{
												"body": {
													"nativeSrc": "12328:269:14",
													"nodeType": "YulBlock",
													"src": "12328:269:14",
													"statements": [
														{
															"nativeSrc": "12338:22:14",
															"nodeType": "YulAssignment",
															"src": "12338:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12352:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12352:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12358:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12358:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12348:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12348:3:14"
																},
																"nativeSrc": "12348:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12348:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12338:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12338:6:14"
																}
															]
														},
														{
															"nativeSrc": "12369:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12369:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12399:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12399:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12405:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12405:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12395:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12395:3:14"
																},
																"nativeSrc": "12395:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12395:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12373:18:14",
																	"nodeType": "YulTypedName",
																	"src": "12373:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12446:51:14",
																"nodeType": "YulBlock",
																"src": "12446:51:14",
																"statements": [
																	{
																		"nativeSrc": "12460:27:14",
																		"nodeType": "YulAssignment",
																		"src": "12460:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12474:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "12474:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12482:4:14",
																					"nodeType": "YulLiteral",
																					"src": "12482:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12470:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12470:3:14"
																			},
																			"nativeSrc": "12470:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12470:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12460:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12460:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12426:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "12426:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12419:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12419:6:14"
																},
																"nativeSrc": "12419:26:14",
																"nodeType": "YulFunctionCall",
																"src": "12419:26:14"
															},
															"nativeSrc": "12416:81:14",
															"nodeType": "YulIf",
															"src": "12416:81:14"
														},
														{
															"body": {
																"nativeSrc": "12549:42:14",
																"nodeType": "YulBlock",
																"src": "12549:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12563:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "12563:16:14"
																			},
																			"nativeSrc": "12563:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12563:18:14"
																		},
																		"nativeSrc": "12563:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12563:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12513:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "12513:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12536:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12536:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12544:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12544:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12533:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "12533:2:14"
																		},
																		"nativeSrc": "12533:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12533:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12510:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12510:2:14"
																},
																"nativeSrc": "12510:38:14",
																"nodeType": "YulFunctionCall",
																"src": "12510:38:14"
															},
															"nativeSrc": "12507:84:14",
															"nodeType": "YulIf",
															"src": "12507:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12277:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12312:4:14",
														"nodeType": "YulTypedName",
														"src": "12312:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12321:6:14",
														"nodeType": "YulTypedName",
														"src": "12321:6:14",
														"type": ""
													}
												],
												"src": "12277:320:14"
											},
											{
												"body": {
													"nativeSrc": "12709:67:14",
													"nodeType": "YulBlock",
													"src": "12709:67:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12731:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12731:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12739:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12739:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12727:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12727:3:14"
																		},
																		"nativeSrc": "12727:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12727:14:14"
																	},
																	{
																		"hexValue": "4e6f7420616e206164646974696f6e616c206f776e6572",
																		"kind": "string",
																		"nativeSrc": "12743:25:14",
																		"nodeType": "YulLiteral",
																		"src": "12743:25:14",
																		"type": "",
																		"value": "Not an additional owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12720:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12720:6:14"
																},
																"nativeSrc": "12720:49:14",
																"nodeType": "YulFunctionCall",
																"src": "12720:49:14"
															},
															"nativeSrc": "12720:49:14",
															"nodeType": "YulExpressionStatement",
															"src": "12720:49:14"
														}
													]
												},
												"name": "store_literal_in_memory_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e",
												"nativeSrc": "12603:173:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12701:6:14",
														"nodeType": "YulTypedName",
														"src": "12701:6:14",
														"type": ""
													}
												],
												"src": "12603:173:14"
											},
											{
												"body": {
													"nativeSrc": "12928:220:14",
													"nodeType": "YulBlock",
													"src": "12928:220:14",
													"statements": [
														{
															"nativeSrc": "12938:74:14",
															"nodeType": "YulAssignment",
															"src": "12938:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13004:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13004:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13009:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13009:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12945:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "12945:58:14"
																},
																"nativeSrc": "12945:67:14",
																"nodeType": "YulFunctionCall",
																"src": "12945:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12938:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12938:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13110:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13110:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e",
																	"nativeSrc": "13021:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "13021:88:14"
																},
																"nativeSrc": "13021:93:14",
																"nodeType": "YulFunctionCall",
																"src": "13021:93:14"
															},
															"nativeSrc": "13021:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "13021:93:14"
														},
														{
															"nativeSrc": "13123:19:14",
															"nodeType": "YulAssignment",
															"src": "13123:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13134:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13134:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13139:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13139:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13130:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13130:3:14"
																},
																"nativeSrc": "13130:12:14",
																"nodeType": "YulFunctionCall",
																"src": "13130:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13123:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13123:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12782:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12916:3:14",
														"nodeType": "YulTypedName",
														"src": "12916:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12924:3:14",
														"nodeType": "YulTypedName",
														"src": "12924:3:14",
														"type": ""
													}
												],
												"src": "12782:366:14"
											},
											{
												"body": {
													"nativeSrc": "13325:248:14",
													"nodeType": "YulBlock",
													"src": "13325:248:14",
													"statements": [
														{
															"nativeSrc": "13335:26:14",
															"nodeType": "YulAssignment",
															"src": "13335:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13347:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13347:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13358:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13358:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13343:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13343:3:14"
																},
																"nativeSrc": "13343:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13343:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13335:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13335:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13382:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13382:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13393:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13393:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13378:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13378:3:14"
																		},
																		"nativeSrc": "13378:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13378:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13401:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "13401:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13407:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13407:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13397:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13397:3:14"
																		},
																		"nativeSrc": "13397:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13397:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13371:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13371:6:14"
																},
																"nativeSrc": "13371:47:14",
																"nodeType": "YulFunctionCall",
																"src": "13371:47:14"
															},
															"nativeSrc": "13371:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "13371:47:14"
														},
														{
															"nativeSrc": "13427:139:14",
															"nodeType": "YulAssignment",
															"src": "13427:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13561:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13561:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13435:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "13435:124:14"
																},
																"nativeSrc": "13435:131:14",
																"nodeType": "YulFunctionCall",
																"src": "13435:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13427:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13427:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13154:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13305:9:14",
														"nodeType": "YulTypedName",
														"src": "13305:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13320:4:14",
														"nodeType": "YulTypedName",
														"src": "13320:4:14",
														"type": ""
													}
												],
												"src": "13154:419:14"
											},
											{
												"body": {
													"nativeSrc": "13685:66:14",
													"nodeType": "YulBlock",
													"src": "13685:66:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13707:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13707:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13715:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13715:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13703:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13703:3:14"
																		},
																		"nativeSrc": "13703:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13703:14:14"
																	},
																	{
																		"hexValue": "4d6178696d756d20737570706c792072656163686564",
																		"kind": "string",
																		"nativeSrc": "13719:24:14",
																		"nodeType": "YulLiteral",
																		"src": "13719:24:14",
																		"type": "",
																		"value": "Maximum supply reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13696:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13696:6:14"
																},
																"nativeSrc": "13696:48:14",
																"nodeType": "YulFunctionCall",
																"src": "13696:48:14"
															},
															"nativeSrc": "13696:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "13696:48:14"
														}
													]
												},
												"name": "store_literal_in_memory_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2",
												"nativeSrc": "13579:172:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13677:6:14",
														"nodeType": "YulTypedName",
														"src": "13677:6:14",
														"type": ""
													}
												],
												"src": "13579:172:14"
											},
											{
												"body": {
													"nativeSrc": "13903:220:14",
													"nodeType": "YulBlock",
													"src": "13903:220:14",
													"statements": [
														{
															"nativeSrc": "13913:74:14",
															"nodeType": "YulAssignment",
															"src": "13913:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13979:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13979:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13984:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13984:2:14",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13920:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "13920:58:14"
																},
																"nativeSrc": "13920:67:14",
																"nodeType": "YulFunctionCall",
																"src": "13920:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13913:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13913:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14085:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14085:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2",
																	"nativeSrc": "13996:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "13996:88:14"
																},
																"nativeSrc": "13996:93:14",
																"nodeType": "YulFunctionCall",
																"src": "13996:93:14"
															},
															"nativeSrc": "13996:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "13996:93:14"
														},
														{
															"nativeSrc": "14098:19:14",
															"nodeType": "YulAssignment",
															"src": "14098:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14109:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14109:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14114:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14114:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14105:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14105:3:14"
																},
																"nativeSrc": "14105:12:14",
																"nodeType": "YulFunctionCall",
																"src": "14105:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14098:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14098:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13757:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13891:3:14",
														"nodeType": "YulTypedName",
														"src": "13891:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13899:3:14",
														"nodeType": "YulTypedName",
														"src": "13899:3:14",
														"type": ""
													}
												],
												"src": "13757:366:14"
											},
											{
												"body": {
													"nativeSrc": "14300:248:14",
													"nodeType": "YulBlock",
													"src": "14300:248:14",
													"statements": [
														{
															"nativeSrc": "14310:26:14",
															"nodeType": "YulAssignment",
															"src": "14310:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14322:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14322:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14333:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14333:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14318:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14318:3:14"
																},
																"nativeSrc": "14318:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14318:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14310:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14310:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14357:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14357:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14368:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14368:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14353:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14353:3:14"
																		},
																		"nativeSrc": "14353:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14353:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14376:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "14376:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14382:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14382:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14372:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14372:3:14"
																		},
																		"nativeSrc": "14372:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14372:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14346:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14346:6:14"
																},
																"nativeSrc": "14346:47:14",
																"nodeType": "YulFunctionCall",
																"src": "14346:47:14"
															},
															"nativeSrc": "14346:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "14346:47:14"
														},
														{
															"nativeSrc": "14402:139:14",
															"nodeType": "YulAssignment",
															"src": "14402:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14536:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "14536:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14410:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "14410:124:14"
																},
																"nativeSrc": "14410:131:14",
																"nodeType": "YulFunctionCall",
																"src": "14410:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14402:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14402:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14129:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14280:9:14",
														"nodeType": "YulTypedName",
														"src": "14280:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14295:4:14",
														"nodeType": "YulTypedName",
														"src": "14295:4:14",
														"type": ""
													}
												],
												"src": "14129:419:14"
											},
											{
												"body": {
													"nativeSrc": "14582:152:14",
													"nodeType": "YulBlock",
													"src": "14582:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14599:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14599:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14602:77:14",
																		"nodeType": "YulLiteral",
																		"src": "14602:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14592:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14592:6:14"
																},
																"nativeSrc": "14592:88:14",
																"nodeType": "YulFunctionCall",
																"src": "14592:88:14"
															},
															"nativeSrc": "14592:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "14592:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14696:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14696:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14699:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14699:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14689:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14689:6:14"
																},
																"nativeSrc": "14689:15:14",
																"nodeType": "YulFunctionCall",
																"src": "14689:15:14"
															},
															"nativeSrc": "14689:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "14689:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14720:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14720:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14723:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14723:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14713:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14713:6:14"
																},
																"nativeSrc": "14713:15:14",
																"nodeType": "YulFunctionCall",
																"src": "14713:15:14"
															},
															"nativeSrc": "14713:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "14713:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14554:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "14554:180:14"
											},
											{
												"body": {
													"nativeSrc": "14784:147:14",
													"nodeType": "YulBlock",
													"src": "14784:147:14",
													"statements": [
														{
															"nativeSrc": "14794:25:14",
															"nodeType": "YulAssignment",
															"src": "14794:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14817:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14817:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14799:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "14799:17:14"
																},
																"nativeSrc": "14799:20:14",
																"nodeType": "YulFunctionCall",
																"src": "14799:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14794:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "14794:1:14"
																}
															]
														},
														{
															"nativeSrc": "14828:25:14",
															"nodeType": "YulAssignment",
															"src": "14828:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14851:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14851:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14833:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "14833:17:14"
																},
																"nativeSrc": "14833:20:14",
																"nodeType": "YulFunctionCall",
																"src": "14833:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14828:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "14828:1:14"
																}
															]
														},
														{
															"nativeSrc": "14862:16:14",
															"nodeType": "YulAssignment",
															"src": "14862:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14873:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14873:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14876:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14876:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14869:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14869:3:14"
																},
																"nativeSrc": "14869:9:14",
																"nodeType": "YulFunctionCall",
																"src": "14869:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14862:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14862:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14902:22:14",
																"nodeType": "YulBlock",
																"src": "14902:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14904:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "14904:16:14"
																			},
																			"nativeSrc": "14904:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14904:18:14"
																		},
																		"nativeSrc": "14904:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14904:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14894:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14894:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14897:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14897:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14891:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "14891:2:14"
																},
																"nativeSrc": "14891:10:14",
																"nodeType": "YulFunctionCall",
																"src": "14891:10:14"
															},
															"nativeSrc": "14888:36:14",
															"nodeType": "YulIf",
															"src": "14888:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14740:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14771:1:14",
														"nodeType": "YulTypedName",
														"src": "14771:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14774:1:14",
														"nodeType": "YulTypedName",
														"src": "14774:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14780:3:14",
														"nodeType": "YulTypedName",
														"src": "14780:3:14",
														"type": ""
													}
												],
												"src": "14740:191:14"
											},
											{
												"body": {
													"nativeSrc": "15043:72:14",
													"nodeType": "YulBlock",
													"src": "15043:72:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15065:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15065:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15073:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15073:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15061:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15061:3:14"
																		},
																		"nativeSrc": "15061:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15061:14:14"
																	},
																	{
																		"hexValue": "43616e6e6f742072656d6f766520636f6e7472616374206f776e6572",
																		"kind": "string",
																		"nativeSrc": "15077:30:14",
																		"nodeType": "YulLiteral",
																		"src": "15077:30:14",
																		"type": "",
																		"value": "Cannot remove contract owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15054:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15054:6:14"
																},
																"nativeSrc": "15054:54:14",
																"nodeType": "YulFunctionCall",
																"src": "15054:54:14"
															},
															"nativeSrc": "15054:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "15054:54:14"
														}
													]
												},
												"name": "store_literal_in_memory_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad",
												"nativeSrc": "14937:178:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15035:6:14",
														"nodeType": "YulTypedName",
														"src": "15035:6:14",
														"type": ""
													}
												],
												"src": "14937:178:14"
											},
											{
												"body": {
													"nativeSrc": "15267:220:14",
													"nodeType": "YulBlock",
													"src": "15267:220:14",
													"statements": [
														{
															"nativeSrc": "15277:74:14",
															"nodeType": "YulAssignment",
															"src": "15277:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15343:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15343:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15348:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15348:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15284:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "15284:58:14"
																},
																"nativeSrc": "15284:67:14",
																"nodeType": "YulFunctionCall",
																"src": "15284:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15277:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15277:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15449:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15449:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad",
																	"nativeSrc": "15360:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "15360:88:14"
																},
																"nativeSrc": "15360:93:14",
																"nodeType": "YulFunctionCall",
																"src": "15360:93:14"
															},
															"nativeSrc": "15360:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "15360:93:14"
														},
														{
															"nativeSrc": "15462:19:14",
															"nodeType": "YulAssignment",
															"src": "15462:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15473:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15473:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15478:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15478:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15469:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15469:3:14"
																},
																"nativeSrc": "15469:12:14",
																"nodeType": "YulFunctionCall",
																"src": "15469:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15462:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15462:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15121:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15255:3:14",
														"nodeType": "YulTypedName",
														"src": "15255:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15263:3:14",
														"nodeType": "YulTypedName",
														"src": "15263:3:14",
														"type": ""
													}
												],
												"src": "15121:366:14"
											},
											{
												"body": {
													"nativeSrc": "15664:248:14",
													"nodeType": "YulBlock",
													"src": "15664:248:14",
													"statements": [
														{
															"nativeSrc": "15674:26:14",
															"nodeType": "YulAssignment",
															"src": "15674:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15686:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15686:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15697:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15697:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15682:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15682:3:14"
																},
																"nativeSrc": "15682:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15682:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15674:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15674:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15721:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15721:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15732:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15732:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15717:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15717:3:14"
																		},
																		"nativeSrc": "15717:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15717:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15740:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "15740:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15746:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15746:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15736:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15736:3:14"
																		},
																		"nativeSrc": "15736:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15736:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15710:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15710:6:14"
																},
																"nativeSrc": "15710:47:14",
																"nodeType": "YulFunctionCall",
																"src": "15710:47:14"
															},
															"nativeSrc": "15710:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "15710:47:14"
														},
														{
															"nativeSrc": "15766:139:14",
															"nodeType": "YulAssignment",
															"src": "15766:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15900:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15900:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15774:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "15774:124:14"
																},
																"nativeSrc": "15774:131:14",
																"nodeType": "YulFunctionCall",
																"src": "15774:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15766:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15766:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15493:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15644:9:14",
														"nodeType": "YulTypedName",
														"src": "15644:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15659:4:14",
														"nodeType": "YulTypedName",
														"src": "15659:4:14",
														"type": ""
													}
												],
												"src": "15493:419:14"
											},
											{
												"body": {
													"nativeSrc": "16072:288:14",
													"nodeType": "YulBlock",
													"src": "16072:288:14",
													"statements": [
														{
															"nativeSrc": "16082:26:14",
															"nodeType": "YulAssignment",
															"src": "16082:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16094:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16094:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16105:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16105:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16090:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16090:3:14"
																},
																"nativeSrc": "16090:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16090:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16082:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16082:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16162:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16162:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16175:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16175:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16186:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16186:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16171:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16171:3:14"
																		},
																		"nativeSrc": "16171:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16171:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16118:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "16118:43:14"
																},
																"nativeSrc": "16118:71:14",
																"nodeType": "YulFunctionCall",
																"src": "16118:71:14"
															},
															"nativeSrc": "16118:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "16118:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16243:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16243:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16256:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16256:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16267:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16267:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16252:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16252:3:14"
																		},
																		"nativeSrc": "16252:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16252:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16199:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "16199:43:14"
																},
																"nativeSrc": "16199:72:14",
																"nodeType": "YulFunctionCall",
																"src": "16199:72:14"
															},
															"nativeSrc": "16199:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "16199:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16325:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16325:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16338:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16338:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16349:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16349:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16334:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16334:3:14"
																		},
																		"nativeSrc": "16334:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16334:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16281:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "16281:43:14"
																},
																"nativeSrc": "16281:72:14",
																"nodeType": "YulFunctionCall",
																"src": "16281:72:14"
															},
															"nativeSrc": "16281:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "16281:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "15918:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16028:9:14",
														"nodeType": "YulTypedName",
														"src": "16028:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16040:6:14",
														"nodeType": "YulTypedName",
														"src": "16040:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16048:6:14",
														"nodeType": "YulTypedName",
														"src": "16048:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16056:6:14",
														"nodeType": "YulTypedName",
														"src": "16056:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16067:4:14",
														"nodeType": "YulTypedName",
														"src": "16067:4:14",
														"type": ""
													}
												],
												"src": "15918:442:14"
											},
											{
												"body": {
													"nativeSrc": "16420:87:14",
													"nodeType": "YulBlock",
													"src": "16420:87:14",
													"statements": [
														{
															"nativeSrc": "16430:11:14",
															"nodeType": "YulAssignment",
															"src": "16430:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "16438:3:14",
																"nodeType": "YulIdentifier",
																"src": "16438:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16430:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16430:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16458:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16458:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "16461:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16461:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16451:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16451:6:14"
																},
																"nativeSrc": "16451:14:14",
																"nodeType": "YulFunctionCall",
																"src": "16451:14:14"
															},
															"nativeSrc": "16451:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "16451:14:14"
														},
														{
															"nativeSrc": "16474:26:14",
															"nodeType": "YulAssignment",
															"src": "16474:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16492:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16492:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16495:4:14",
																		"nodeType": "YulLiteral",
																		"src": "16495:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "16482:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "16482:9:14"
																},
																"nativeSrc": "16482:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16482:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16474:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16474:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "16366:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "16407:3:14",
														"nodeType": "YulTypedName",
														"src": "16407:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "16415:4:14",
														"nodeType": "YulTypedName",
														"src": "16415:4:14",
														"type": ""
													}
												],
												"src": "16366:141:14"
											},
											{
												"body": {
													"nativeSrc": "16557:49:14",
													"nodeType": "YulBlock",
													"src": "16557:49:14",
													"statements": [
														{
															"nativeSrc": "16567:33:14",
															"nodeType": "YulAssignment",
															"src": "16567:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16585:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "16585:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16592:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16592:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16581:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16581:3:14"
																		},
																		"nativeSrc": "16581:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16581:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16597:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16597:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16577:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16577:3:14"
																},
																"nativeSrc": "16577:23:14",
																"nodeType": "YulFunctionCall",
																"src": "16577:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16567:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16567:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "16513:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16540:5:14",
														"nodeType": "YulTypedName",
														"src": "16540:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16550:6:14",
														"nodeType": "YulTypedName",
														"src": "16550:6:14",
														"type": ""
													}
												],
												"src": "16513:93:14"
											},
											{
												"body": {
													"nativeSrc": "16665:54:14",
													"nodeType": "YulBlock",
													"src": "16665:54:14",
													"statements": [
														{
															"nativeSrc": "16675:37:14",
															"nodeType": "YulAssignment",
															"src": "16675:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16700:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16700:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16706:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16706:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16696:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16696:3:14"
																},
																"nativeSrc": "16696:16:14",
																"nodeType": "YulFunctionCall",
																"src": "16696:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16675:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "16675:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "16612:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16640:4:14",
														"nodeType": "YulTypedName",
														"src": "16640:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16646:5:14",
														"nodeType": "YulTypedName",
														"src": "16646:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16656:8:14",
														"nodeType": "YulTypedName",
														"src": "16656:8:14",
														"type": ""
													}
												],
												"src": "16612:107:14"
											},
											{
												"body": {
													"nativeSrc": "16801:317:14",
													"nodeType": "YulBlock",
													"src": "16801:317:14",
													"statements": [
														{
															"nativeSrc": "16811:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "16811:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "16832:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "16832:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16844:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16844:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16828:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16828:3:14"
																},
																"nativeSrc": "16828:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16828:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "16815:9:14",
																	"nodeType": "YulTypedName",
																	"src": "16815:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16855:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "16855:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16886:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16886:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16897:66:14",
																		"nodeType": "YulLiteral",
																		"src": "16897:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16867:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "16867:18:14"
																},
																"nativeSrc": "16867:97:14",
																"nodeType": "YulFunctionCall",
																"src": "16867:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16859:4:14",
																	"nodeType": "YulTypedName",
																	"src": "16859:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16973:51:14",
															"nodeType": "YulAssignment",
															"src": "16973:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "17004:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17004:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "17015:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "17015:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16985:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "16985:18:14"
																},
																"nativeSrc": "16985:39:14",
																"nodeType": "YulFunctionCall",
																"src": "16985:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "16973:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "16973:8:14"
																}
															]
														},
														{
															"nativeSrc": "17033:30:14",
															"nodeType": "YulAssignment",
															"src": "17033:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17046:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "17046:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "17057:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "17057:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "17053:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17053:3:14"
																		},
																		"nativeSrc": "17053:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17053:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17042:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17042:3:14"
																},
																"nativeSrc": "17042:21:14",
																"nodeType": "YulFunctionCall",
																"src": "17042:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17033:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "17033:5:14"
																}
															]
														},
														{
															"nativeSrc": "17072:40:14",
															"nodeType": "YulAssignment",
															"src": "17072:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17085:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "17085:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "17096:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "17096:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "17106:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "17106:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17092:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17092:3:14"
																		},
																		"nativeSrc": "17092:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17092:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17082:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "17082:2:14"
																},
																"nativeSrc": "17082:30:14",
																"nodeType": "YulFunctionCall",
																"src": "17082:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17072:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17072:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "16725:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16762:5:14",
														"nodeType": "YulTypedName",
														"src": "16762:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "16769:10:14",
														"nodeType": "YulTypedName",
														"src": "16769:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "16781:8:14",
														"nodeType": "YulTypedName",
														"src": "16781:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16794:6:14",
														"nodeType": "YulTypedName",
														"src": "16794:6:14",
														"type": ""
													}
												],
												"src": "16725:393:14"
											},
											{
												"body": {
													"nativeSrc": "17156:28:14",
													"nodeType": "YulBlock",
													"src": "17156:28:14",
													"statements": [
														{
															"nativeSrc": "17166:12:14",
															"nodeType": "YulAssignment",
															"src": "17166:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "17173:5:14",
																"nodeType": "YulIdentifier",
																"src": "17173:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17166:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17166:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "17124:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17142:5:14",
														"nodeType": "YulTypedName",
														"src": "17142:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17152:3:14",
														"nodeType": "YulTypedName",
														"src": "17152:3:14",
														"type": ""
													}
												],
												"src": "17124:60:14"
											},
											{
												"body": {
													"nativeSrc": "17250:82:14",
													"nodeType": "YulBlock",
													"src": "17250:82:14",
													"statements": [
														{
															"nativeSrc": "17260:66:14",
															"nodeType": "YulAssignment",
															"src": "17260:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17318:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "17318:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "17300:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "17300:17:14"
																				},
																				"nativeSrc": "17300:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17300:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "17291:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "17291:8:14"
																		},
																		"nativeSrc": "17291:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17291:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17273:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "17273:17:14"
																},
																"nativeSrc": "17273:53:14",
																"nodeType": "YulFunctionCall",
																"src": "17273:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17260:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "17260:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "17190:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17230:5:14",
														"nodeType": "YulTypedName",
														"src": "17230:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17240:9:14",
														"nodeType": "YulTypedName",
														"src": "17240:9:14",
														"type": ""
													}
												],
												"src": "17190:142:14"
											},
											{
												"body": {
													"nativeSrc": "17385:28:14",
													"nodeType": "YulBlock",
													"src": "17385:28:14",
													"statements": [
														{
															"nativeSrc": "17395:12:14",
															"nodeType": "YulAssignment",
															"src": "17395:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "17402:5:14",
																"nodeType": "YulIdentifier",
																"src": "17402:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17395:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17395:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "17338:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17371:5:14",
														"nodeType": "YulTypedName",
														"src": "17371:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17381:3:14",
														"nodeType": "YulTypedName",
														"src": "17381:3:14",
														"type": ""
													}
												],
												"src": "17338:75:14"
											},
											{
												"body": {
													"nativeSrc": "17495:193:14",
													"nodeType": "YulBlock",
													"src": "17495:193:14",
													"statements": [
														{
															"nativeSrc": "17505:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "17505:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "17560:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "17560:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "17529:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "17529:30:14"
																},
																"nativeSrc": "17529:39:14",
																"nodeType": "YulFunctionCall",
																"src": "17529:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "17509:16:14",
																	"nodeType": "YulTypedName",
																	"src": "17509:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17584:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "17584:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "17624:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "17624:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "17618:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "17618:5:14"
																				},
																				"nativeSrc": "17618:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17618:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "17631:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17631:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "17663:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "17663:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "17639:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "17639:23:14"
																				},
																				"nativeSrc": "17639:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17639:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "17590:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "17590:27:14"
																		},
																		"nativeSrc": "17590:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17590:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "17577:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17577:6:14"
																},
																"nativeSrc": "17577:105:14",
																"nodeType": "YulFunctionCall",
																"src": "17577:105:14"
															},
															"nativeSrc": "17577:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "17577:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "17419:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17472:4:14",
														"nodeType": "YulTypedName",
														"src": "17472:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17478:6:14",
														"nodeType": "YulTypedName",
														"src": "17478:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "17486:7:14",
														"nodeType": "YulTypedName",
														"src": "17486:7:14",
														"type": ""
													}
												],
												"src": "17419:269:14"
											},
											{
												"body": {
													"nativeSrc": "17743:24:14",
													"nodeType": "YulBlock",
													"src": "17743:24:14",
													"statements": [
														{
															"nativeSrc": "17753:8:14",
															"nodeType": "YulAssignment",
															"src": "17753:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "17760:1:14",
																"nodeType": "YulLiteral",
																"src": "17760:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17753:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17753:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "17694:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17739:3:14",
														"nodeType": "YulTypedName",
														"src": "17739:3:14",
														"type": ""
													}
												],
												"src": "17694:73:14"
											},
											{
												"body": {
													"nativeSrc": "17826:136:14",
													"nodeType": "YulBlock",
													"src": "17826:136:14",
													"statements": [
														{
															"nativeSrc": "17836:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "17836:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "17850:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "17850:30:14"
																},
																"nativeSrc": "17850:32:14",
																"nodeType": "YulFunctionCall",
																"src": "17850:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "17840:6:14",
																	"nodeType": "YulTypedName",
																	"src": "17840:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17935:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "17935:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "17941:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17941:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "17949:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17949:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "17891:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "17891:43:14"
																},
																"nativeSrc": "17891:65:14",
																"nodeType": "YulFunctionCall",
																"src": "17891:65:14"
															},
															"nativeSrc": "17891:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "17891:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "17773:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17812:4:14",
														"nodeType": "YulTypedName",
														"src": "17812:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17818:6:14",
														"nodeType": "YulTypedName",
														"src": "17818:6:14",
														"type": ""
													}
												],
												"src": "17773:189:14"
											},
											{
												"body": {
													"nativeSrc": "18018:136:14",
													"nodeType": "YulBlock",
													"src": "18018:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "18085:63:14",
																"nodeType": "YulBlock",
																"src": "18085:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "18129:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "18129:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18136:1:14",
																					"nodeType": "YulLiteral",
																					"src": "18136:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "18099:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "18099:29:14"
																			},
																			"nativeSrc": "18099:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18099:39:14"
																		},
																		"nativeSrc": "18099:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "18099:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "18038:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "18038:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "18045:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18045:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "18035:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "18035:2:14"
																},
																"nativeSrc": "18035:14:14",
																"nodeType": "YulFunctionCall",
																"src": "18035:14:14"
															},
															"nativeSrc": "18028:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18050:26:14",
																"nodeType": "YulBlock",
																"src": "18050:26:14",
																"statements": [
																	{
																		"nativeSrc": "18052:22:14",
																		"nodeType": "YulAssignment",
																		"src": "18052:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "18065:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "18065:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18072:1:14",
																					"nodeType": "YulLiteral",
																					"src": "18072:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18061:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "18061:3:14"
																			},
																			"nativeSrc": "18061:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18061:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "18052:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "18052:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "18032:2:14",
																"nodeType": "YulBlock",
																"src": "18032:2:14",
																"statements": []
															},
															"src": "18028:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "17968:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "18006:5:14",
														"nodeType": "YulTypedName",
														"src": "18006:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18013:3:14",
														"nodeType": "YulTypedName",
														"src": "18013:3:14",
														"type": ""
													}
												],
												"src": "17968:186:14"
											},
											{
												"body": {
													"nativeSrc": "18239:464:14",
													"nodeType": "YulBlock",
													"src": "18239:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "18265:431:14",
																"nodeType": "YulBlock",
																"src": "18265:431:14",
																"statements": [
																	{
																		"nativeSrc": "18279:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18279:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "18327:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "18327:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "18295:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "18295:31:14"
																			},
																			"nativeSrc": "18295:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18295:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "18283:8:14",
																				"nodeType": "YulTypedName",
																				"src": "18283:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "18346:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18346:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "18369:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "18369:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "18397:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "18397:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "18379:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "18379:17:14"
																					},
																					"nativeSrc": "18379:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "18379:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18365:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "18365:3:14"
																			},
																			"nativeSrc": "18365:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18365:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "18350:11:14",
																				"nodeType": "YulTypedName",
																				"src": "18350:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18566:27:14",
																			"nodeType": "YulBlock",
																			"src": "18566:27:14",
																			"statements": [
																				{
																					"nativeSrc": "18568:23:14",
																					"nodeType": "YulAssignment",
																					"src": "18568:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "18583:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "18583:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "18568:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "18568:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "18550:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "18550:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18562:2:14",
																					"nodeType": "YulLiteral",
																					"src": "18562:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "18547:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "18547:2:14"
																			},
																			"nativeSrc": "18547:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18547:18:14"
																		},
																		"nativeSrc": "18544:49:14",
																		"nodeType": "YulIf",
																		"src": "18544:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "18635:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "18635:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "18652:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "18652:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "18680:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "18680:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "18662:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "18662:17:14"
																							},
																							"nativeSrc": "18662:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "18662:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "18648:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "18648:3:14"
																					},
																					"nativeSrc": "18648:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "18648:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "18606:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "18606:28:14"
																			},
																			"nativeSrc": "18606:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18606:80:14"
																		},
																		"nativeSrc": "18606:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "18606:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "18256:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18256:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18261:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18261:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18253:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "18253:2:14"
																},
																"nativeSrc": "18253:11:14",
																"nodeType": "YulFunctionCall",
																"src": "18253:11:14"
															},
															"nativeSrc": "18250:446:14",
															"nodeType": "YulIf",
															"src": "18250:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "18160:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "18215:5:14",
														"nodeType": "YulTypedName",
														"src": "18215:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18222:3:14",
														"nodeType": "YulTypedName",
														"src": "18222:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "18227:10:14",
														"nodeType": "YulTypedName",
														"src": "18227:10:14",
														"type": ""
													}
												],
												"src": "18160:543:14"
											},
											{
												"body": {
													"nativeSrc": "18772:54:14",
													"nodeType": "YulBlock",
													"src": "18772:54:14",
													"statements": [
														{
															"nativeSrc": "18782:37:14",
															"nodeType": "YulAssignment",
															"src": "18782:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18807:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18807:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18813:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "18813:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "18803:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18803:3:14"
																},
																"nativeSrc": "18803:16:14",
																"nodeType": "YulFunctionCall",
																"src": "18803:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18782:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "18782:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "18709:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18747:4:14",
														"nodeType": "YulTypedName",
														"src": "18747:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18753:5:14",
														"nodeType": "YulTypedName",
														"src": "18753:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18763:8:14",
														"nodeType": "YulTypedName",
														"src": "18763:8:14",
														"type": ""
													}
												],
												"src": "18709:117:14"
											},
											{
												"body": {
													"nativeSrc": "18883:118:14",
													"nodeType": "YulBlock",
													"src": "18883:118:14",
													"statements": [
														{
															"nativeSrc": "18893:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "18893:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18942:1:14",
																						"nodeType": "YulLiteral",
																						"src": "18942:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "18945:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "18945:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "18938:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "18938:3:14"
																				},
																				"nativeSrc": "18938:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18938:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18957:1:14",
																						"nodeType": "YulLiteral",
																						"src": "18957:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "18953:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "18953:3:14"
																				},
																				"nativeSrc": "18953:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18953:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "18909:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "18909:28:14"
																		},
																		"nativeSrc": "18909:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18909:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "18905:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18905:3:14"
																},
																"nativeSrc": "18905:56:14",
																"nodeType": "YulFunctionCall",
																"src": "18905:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18897:4:14",
																	"nodeType": "YulTypedName",
																	"src": "18897:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18970:25:14",
															"nodeType": "YulAssignment",
															"src": "18970:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18984:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18984:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "18990:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18990:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18980:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18980:3:14"
																},
																"nativeSrc": "18980:15:14",
																"nodeType": "YulFunctionCall",
																"src": "18980:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18970:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18970:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "18832:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18860:4:14",
														"nodeType": "YulTypedName",
														"src": "18860:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "18866:5:14",
														"nodeType": "YulTypedName",
														"src": "18866:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18876:6:14",
														"nodeType": "YulTypedName",
														"src": "18876:6:14",
														"type": ""
													}
												],
												"src": "18832:169:14"
											},
											{
												"body": {
													"nativeSrc": "19087:214:14",
													"nodeType": "YulBlock",
													"src": "19087:214:14",
													"statements": [
														{
															"nativeSrc": "19220:37:14",
															"nodeType": "YulAssignment",
															"src": "19220:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19247:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "19247:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "19253:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19253:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "19228:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "19228:18:14"
																},
																"nativeSrc": "19228:29:14",
																"nodeType": "YulFunctionCall",
																"src": "19228:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19220:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19220:4:14"
																}
															]
														},
														{
															"nativeSrc": "19266:29:14",
															"nodeType": "YulAssignment",
															"src": "19266:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19277:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "19277:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19287:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19287:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "19290:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "19290:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "19283:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19283:3:14"
																		},
																		"nativeSrc": "19283:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19283:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19274:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "19274:2:14"
																},
																"nativeSrc": "19274:21:14",
																"nodeType": "YulFunctionCall",
																"src": "19274:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "19266:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19266:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "19006:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19068:4:14",
														"nodeType": "YulTypedName",
														"src": "19068:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "19074:3:14",
														"nodeType": "YulTypedName",
														"src": "19074:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "19082:4:14",
														"nodeType": "YulTypedName",
														"src": "19082:4:14",
														"type": ""
													}
												],
												"src": "19006:295:14"
											},
											{
												"body": {
													"nativeSrc": "19398:1303:14",
													"nodeType": "YulBlock",
													"src": "19398:1303:14",
													"statements": [
														{
															"nativeSrc": "19409:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "19409:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19456:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19456:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19423:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "19423:32:14"
																},
																"nativeSrc": "19423:37:14",
																"nodeType": "YulFunctionCall",
																"src": "19423:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "19413:6:14",
																	"nodeType": "YulTypedName",
																	"src": "19413:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19545:22:14",
																"nodeType": "YulBlock",
																"src": "19545:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19547:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "19547:16:14"
																			},
																			"nativeSrc": "19547:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "19547:18:14"
																		},
																		"nativeSrc": "19547:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "19547:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19517:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19517:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19525:18:14",
																		"nodeType": "YulLiteral",
																		"src": "19525:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19514:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "19514:2:14"
																},
																"nativeSrc": "19514:30:14",
																"nodeType": "YulFunctionCall",
																"src": "19514:30:14"
															},
															"nativeSrc": "19511:56:14",
															"nodeType": "YulIf",
															"src": "19511:56:14"
														},
														{
															"nativeSrc": "19577:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "19577:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "19623:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "19623:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "19617:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "19617:5:14"
																		},
																		"nativeSrc": "19617:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19617:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19591:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "19591:25:14"
																},
																"nativeSrc": "19591:38:14",
																"nodeType": "YulFunctionCall",
																"src": "19591:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "19581:6:14",
																	"nodeType": "YulTypedName",
																	"src": "19581:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19722:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "19722:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "19728:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19728:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "19736:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19736:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "19676:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "19676:45:14"
																},
																"nativeSrc": "19676:67:14",
																"nodeType": "YulFunctionCall",
																"src": "19676:67:14"
															},
															"nativeSrc": "19676:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "19676:67:14"
														},
														{
															"nativeSrc": "19753:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "19753:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "19770:1:14",
																"nodeType": "YulLiteral",
																"src": "19770:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19757:9:14",
																	"nodeType": "YulTypedName",
																	"src": "19757:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19781:17:14",
															"nodeType": "YulAssignment",
															"src": "19781:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "19794:4:14",
																"nodeType": "YulLiteral",
																"src": "19794:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19781:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "19781:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19845:611:14",
																		"nodeType": "YulBlock",
																		"src": "19845:611:14",
																		"statements": [
																			{
																				"nativeSrc": "19859:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19859:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "19878:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "19878:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19890:4:14",
																									"nodeType": "YulLiteral",
																									"src": "19890:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "19886:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "19886:3:14"
																							},
																							"nativeSrc": "19886:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "19886:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "19874:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "19874:3:14"
																					},
																					"nativeSrc": "19874:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "19874:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "19863:7:14",
																						"nodeType": "YulTypedName",
																						"src": "19863:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19910:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19910:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19956:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "19956:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "19924:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "19924:31:14"
																					},
																					"nativeSrc": "19924:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "19924:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "19914:6:14",
																						"nodeType": "YulTypedName",
																						"src": "19914:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19974:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19974:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19983:1:14",
																					"nodeType": "YulLiteral",
																					"src": "19983:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "19978:1:14",
																						"nodeType": "YulTypedName",
																						"src": "19978:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20042:163:14",
																					"nodeType": "YulBlock",
																					"src": "20042:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20067:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "20067:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "20085:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "20085:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "20090:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "20090:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "20081:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "20081:3:14"
																												},
																												"nativeSrc": "20081:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "20081:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "20075:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "20075:5:14"
																										},
																										"nativeSrc": "20075:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "20075:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20060:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "20060:6:14"
																								},
																								"nativeSrc": "20060:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "20060:42:14"
																							},
																							"nativeSrc": "20060:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "20060:42:14"
																						},
																						{
																							"nativeSrc": "20119:24:14",
																							"nodeType": "YulAssignment",
																							"src": "20119:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20133:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "20133:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20141:1:14",
																										"nodeType": "YulLiteral",
																										"src": "20141:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20129:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "20129:3:14"
																								},
																								"nativeSrc": "20129:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "20129:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "20119:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "20119:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "20160:31:14",
																							"nodeType": "YulAssignment",
																							"src": "20160:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "20177:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "20177:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20188:2:14",
																										"nodeType": "YulLiteral",
																										"src": "20188:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20173:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "20173:3:14"
																								},
																								"nativeSrc": "20173:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "20173:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "20160:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "20160:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "20008:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "20008:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20011:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "20011:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20005:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "20005:2:14"
																					},
																					"nativeSrc": "20005:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "20005:14:14"
																				},
																				"nativeSrc": "19997:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "20020:21:14",
																					"nodeType": "YulBlock",
																					"src": "20020:21:14",
																					"statements": [
																						{
																							"nativeSrc": "20022:17:14",
																							"nodeType": "YulAssignment",
																							"src": "20022:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "20031:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "20031:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20034:4:14",
																										"nodeType": "YulLiteral",
																										"src": "20034:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20027:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "20027:3:14"
																								},
																								"nativeSrc": "20027:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "20027:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "20022:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "20022:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "20001:3:14",
																					"nodeType": "YulBlock",
																					"src": "20001:3:14",
																					"statements": []
																				},
																				"src": "19997:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "20241:156:14",
																					"nodeType": "YulBlock",
																					"src": "20241:156:14",
																					"statements": [
																						{
																							"nativeSrc": "20259:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "20259:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20286:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "20286:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20291:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "20291:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20282:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "20282:3:14"
																										},
																										"nativeSrc": "20282:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "20282:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20276:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "20276:5:14"
																								},
																								"nativeSrc": "20276:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "20276:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "20263:9:14",
																									"nodeType": "YulTypedName",
																									"src": "20263:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20326:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "20326:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "20353:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "20353:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "20368:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "20368:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "20376:4:14",
																														"nodeType": "YulLiteral",
																														"src": "20376:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "20364:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "20364:3:14"
																												},
																												"nativeSrc": "20364:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "20364:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "20334:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "20334:18:14"
																										},
																										"nativeSrc": "20334:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "20334:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20319:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "20319:6:14"
																								},
																								"nativeSrc": "20319:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "20319:64:14"
																							},
																							"nativeSrc": "20319:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "20319:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20224:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "20224:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "20233:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "20233:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20221:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "20221:2:14"
																					},
																					"nativeSrc": "20221:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "20221:19:14"
																				},
																				"nativeSrc": "20218:179:14",
																				"nodeType": "YulIf",
																				"src": "20218:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20417:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "20417:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "20431:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "20431:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "20439:1:14",
																											"nodeType": "YulLiteral",
																											"src": "20439:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "20427:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "20427:3:14"
																									},
																									"nativeSrc": "20427:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "20427:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "20443:1:14",
																									"nodeType": "YulLiteral",
																									"src": "20443:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20423:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "20423:3:14"
																							},
																							"nativeSrc": "20423:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "20423:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20410:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "20410:6:14"
																					},
																					"nativeSrc": "20410:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "20410:36:14"
																				},
																				"nativeSrc": "20410:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "20410:36:14"
																			}
																		]
																	},
																	"nativeSrc": "19838:618:14",
																	"nodeType": "YulCase",
																	"src": "19838:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19843:1:14",
																		"nodeType": "YulLiteral",
																		"src": "19843:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20473:222:14",
																		"nodeType": "YulBlock",
																		"src": "20473:222:14",
																		"statements": [
																			{
																				"nativeSrc": "20487:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20487:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20500:1:14",
																					"nodeType": "YulLiteral",
																					"src": "20500:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "20491:5:14",
																						"nodeType": "YulTypedName",
																						"src": "20491:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20524:67:14",
																					"nodeType": "YulBlock",
																					"src": "20524:67:14",
																					"statements": [
																						{
																							"nativeSrc": "20542:35:14",
																							"nodeType": "YulAssignment",
																							"src": "20542:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20561:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "20561:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20566:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "20566:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20557:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "20557:3:14"
																										},
																										"nativeSrc": "20557:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "20557:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20551:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "20551:5:14"
																								},
																								"nativeSrc": "20551:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "20551:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "20542:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "20542:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "20517:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "20517:6:14"
																				},
																				"nativeSrc": "20514:77:14",
																				"nodeType": "YulIf",
																				"src": "20514:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20611:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "20611:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "20670:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "20670:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "20677:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "20677:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "20617:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "20617:52:14"
																							},
																							"nativeSrc": "20617:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "20617:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20604:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "20604:6:14"
																					},
																					"nativeSrc": "20604:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "20604:81:14"
																				},
																				"nativeSrc": "20604:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "20604:81:14"
																			}
																		]
																	},
																	"nativeSrc": "20465:230:14",
																	"nodeType": "YulCase",
																	"src": "20465:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19818:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19818:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19826:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19826:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19815:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "19815:2:14"
																},
																"nativeSrc": "19815:14:14",
																"nodeType": "YulFunctionCall",
																"src": "19815:14:14"
															},
															"nativeSrc": "19808:887:14",
															"nodeType": "YulSwitch",
															"src": "19808:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "19306:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19387:4:14",
														"nodeType": "YulTypedName",
														"src": "19387:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "19393:3:14",
														"nodeType": "YulTypedName",
														"src": "19393:3:14",
														"type": ""
													}
												],
												"src": "19306:1395:14"
											},
											{
												"body": {
													"nativeSrc": "20821:34:14",
													"nodeType": "YulBlock",
													"src": "20821:34:14",
													"statements": [
														{
															"nativeSrc": "20831:18:14",
															"nodeType": "YulAssignment",
															"src": "20831:18:14",
															"value": {
																"name": "pos",
																"nativeSrc": "20846:3:14",
																"nodeType": "YulIdentifier",
																"src": "20846:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20831:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "20831:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20707:148:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20793:3:14",
														"nodeType": "YulTypedName",
														"src": "20793:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20798:6:14",
														"nodeType": "YulTypedName",
														"src": "20798:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20809:11:14",
														"nodeType": "YulTypedName",
														"src": "20809:11:14",
														"type": ""
													}
												],
												"src": "20707:148:14"
											},
											{
												"body": {
													"nativeSrc": "20971:280:14",
													"nodeType": "YulBlock",
													"src": "20971:280:14",
													"statements": [
														{
															"nativeSrc": "20981:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "20981:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21028:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "21028:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "20995:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "20995:32:14"
																},
																"nativeSrc": "20995:39:14",
																"nodeType": "YulFunctionCall",
																"src": "20995:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20985:6:14",
																	"nodeType": "YulTypedName",
																	"src": "20985:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21043:96:14",
															"nodeType": "YulAssignment",
															"src": "21043:96:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21127:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21127:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21132:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "21132:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21050:76:14",
																	"nodeType": "YulIdentifier",
																	"src": "21050:76:14"
																},
																"nativeSrc": "21050:89:14",
																"nodeType": "YulFunctionCall",
																"src": "21050:89:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21043:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21043:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21187:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "21187:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21194:4:14",
																				"nodeType": "YulLiteral",
																				"src": "21194:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21183:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21183:3:14"
																		},
																		"nativeSrc": "21183:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21183:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21201:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21201:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21206:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "21206:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21148:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "21148:34:14"
																},
																"nativeSrc": "21148:65:14",
																"nodeType": "YulFunctionCall",
																"src": "21148:65:14"
															},
															"nativeSrc": "21148:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "21148:65:14"
														},
														{
															"nativeSrc": "21222:23:14",
															"nodeType": "YulAssignment",
															"src": "21222:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21233:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21233:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21238:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "21238:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21229:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21229:3:14"
																},
																"nativeSrc": "21229:16:14",
																"nodeType": "YulFunctionCall",
																"src": "21229:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21222:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21222:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20861:390:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20952:5:14",
														"nodeType": "YulTypedName",
														"src": "20952:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20959:3:14",
														"nodeType": "YulTypedName",
														"src": "20959:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20967:3:14",
														"nodeType": "YulTypedName",
														"src": "20967:3:14",
														"type": ""
													}
												],
												"src": "20861:390:14"
											},
											{
												"body": {
													"nativeSrc": "21441:251:14",
													"nodeType": "YulBlock",
													"src": "21441:251:14",
													"statements": [
														{
															"nativeSrc": "21452:102:14",
															"nodeType": "YulAssignment",
															"src": "21452:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21541:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "21541:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21550:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21550:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21459:81:14",
																	"nodeType": "YulIdentifier",
																	"src": "21459:81:14"
																},
																"nativeSrc": "21459:95:14",
																"nodeType": "YulFunctionCall",
																"src": "21459:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21452:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21452:3:14"
																}
															]
														},
														{
															"nativeSrc": "21564:102:14",
															"nodeType": "YulAssignment",
															"src": "21564:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21653:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "21653:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21662:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21662:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21571:81:14",
																	"nodeType": "YulIdentifier",
																	"src": "21571:81:14"
																},
																"nativeSrc": "21571:95:14",
																"nodeType": "YulFunctionCall",
																"src": "21571:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21564:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21564:3:14"
																}
															]
														},
														{
															"nativeSrc": "21676:10:14",
															"nodeType": "YulAssignment",
															"src": "21676:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "21683:3:14",
																"nodeType": "YulIdentifier",
																"src": "21683:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21676:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21676:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21257:435:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21412:3:14",
														"nodeType": "YulTypedName",
														"src": "21412:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21418:6:14",
														"nodeType": "YulTypedName",
														"src": "21418:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21426:6:14",
														"nodeType": "YulTypedName",
														"src": "21426:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21437:3:14",
														"nodeType": "YulTypedName",
														"src": "21437:3:14",
														"type": ""
													}
												],
												"src": "21257:435:14"
											},
											{
												"body": {
													"nativeSrc": "21804:59:14",
													"nodeType": "YulBlock",
													"src": "21804:59:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21826:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21826:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21834:1:14",
																				"nodeType": "YulLiteral",
																				"src": "21834:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21822:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21822:3:14"
																		},
																		"nativeSrc": "21822:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21822:14:14"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "21838:17:14",
																		"nodeType": "YulLiteral",
																		"src": "21838:17:14",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21815:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21815:6:14"
																},
																"nativeSrc": "21815:41:14",
																"nodeType": "YulFunctionCall",
																"src": "21815:41:14"
															},
															"nativeSrc": "21815:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "21815:41:14"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "21698:165:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21796:6:14",
														"nodeType": "YulTypedName",
														"src": "21796:6:14",
														"type": ""
													}
												],
												"src": "21698:165:14"
											},
											{
												"body": {
													"nativeSrc": "22015:220:14",
													"nodeType": "YulBlock",
													"src": "22015:220:14",
													"statements": [
														{
															"nativeSrc": "22025:74:14",
															"nodeType": "YulAssignment",
															"src": "22025:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22091:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22091:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22096:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22096:2:14",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22032:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "22032:58:14"
																},
																"nativeSrc": "22032:67:14",
																"nodeType": "YulFunctionCall",
																"src": "22032:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22025:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22025:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22197:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22197:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "22108:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "22108:88:14"
																},
																"nativeSrc": "22108:93:14",
																"nodeType": "YulFunctionCall",
																"src": "22108:93:14"
															},
															"nativeSrc": "22108:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "22108:93:14"
														},
														{
															"nativeSrc": "22210:19:14",
															"nodeType": "YulAssignment",
															"src": "22210:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22221:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22221:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22226:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22226:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22217:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22217:3:14"
																},
																"nativeSrc": "22217:12:14",
																"nodeType": "YulFunctionCall",
																"src": "22217:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22210:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22210:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21869:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22003:3:14",
														"nodeType": "YulTypedName",
														"src": "22003:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22011:3:14",
														"nodeType": "YulTypedName",
														"src": "22011:3:14",
														"type": ""
													}
												],
												"src": "21869:366:14"
											},
											{
												"body": {
													"nativeSrc": "22412:248:14",
													"nodeType": "YulBlock",
													"src": "22412:248:14",
													"statements": [
														{
															"nativeSrc": "22422:26:14",
															"nodeType": "YulAssignment",
															"src": "22422:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22434:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "22434:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22445:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22445:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22430:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22430:3:14"
																},
																"nativeSrc": "22430:18:14",
																"nodeType": "YulFunctionCall",
																"src": "22430:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22422:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "22422:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22469:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22469:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22480:1:14",
																				"nodeType": "YulLiteral",
																				"src": "22480:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22465:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22465:3:14"
																		},
																		"nativeSrc": "22465:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22465:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22488:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "22488:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22494:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22494:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22484:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22484:3:14"
																		},
																		"nativeSrc": "22484:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22484:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22458:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22458:6:14"
																},
																"nativeSrc": "22458:47:14",
																"nodeType": "YulFunctionCall",
																"src": "22458:47:14"
															},
															"nativeSrc": "22458:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "22458:47:14"
														},
														{
															"nativeSrc": "22514:139:14",
															"nodeType": "YulAssignment",
															"src": "22514:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22648:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "22648:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22522:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "22522:124:14"
																},
																"nativeSrc": "22522:131:14",
																"nodeType": "YulFunctionCall",
																"src": "22522:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22514:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "22514:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22241:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22392:9:14",
														"nodeType": "YulTypedName",
														"src": "22392:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22407:4:14",
														"nodeType": "YulTypedName",
														"src": "22407:4:14",
														"type": ""
													}
												],
												"src": "22241:419:14"
											},
											{
												"body": {
													"nativeSrc": "22724:40:14",
													"nodeType": "YulBlock",
													"src": "22724:40:14",
													"statements": [
														{
															"nativeSrc": "22735:22:14",
															"nodeType": "YulAssignment",
															"src": "22735:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22751:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "22751:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22745:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "22745:5:14"
																},
																"nativeSrc": "22745:12:14",
																"nodeType": "YulFunctionCall",
																"src": "22745:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "22735:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22735:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "22666:98:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22707:5:14",
														"nodeType": "YulTypedName",
														"src": "22707:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "22717:6:14",
														"nodeType": "YulTypedName",
														"src": "22717:6:14",
														"type": ""
													}
												],
												"src": "22666:98:14"
											},
											{
												"body": {
													"nativeSrc": "22865:73:14",
													"nodeType": "YulBlock",
													"src": "22865:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22882:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22882:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22887:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "22887:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22875:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22875:6:14"
																},
																"nativeSrc": "22875:19:14",
																"nodeType": "YulFunctionCall",
																"src": "22875:19:14"
															},
															"nativeSrc": "22875:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "22875:19:14"
														},
														{
															"nativeSrc": "22903:29:14",
															"nodeType": "YulAssignment",
															"src": "22903:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22922:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22922:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22927:4:14",
																		"nodeType": "YulLiteral",
																		"src": "22927:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22918:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22918:3:14"
																},
																"nativeSrc": "22918:14:14",
																"nodeType": "YulFunctionCall",
																"src": "22918:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "22903:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "22903:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22770:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22837:3:14",
														"nodeType": "YulTypedName",
														"src": "22837:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "22842:6:14",
														"nodeType": "YulTypedName",
														"src": "22842:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "22853:11:14",
														"nodeType": "YulTypedName",
														"src": "22853:11:14",
														"type": ""
													}
												],
												"src": "22770:168:14"
											},
											{
												"body": {
													"nativeSrc": "23034:283:14",
													"nodeType": "YulBlock",
													"src": "23034:283:14",
													"statements": [
														{
															"nativeSrc": "23044:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "23044:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23090:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "23090:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "23058:31:14",
																	"nodeType": "YulIdentifier",
																	"src": "23058:31:14"
																},
																"nativeSrc": "23058:38:14",
																"nodeType": "YulFunctionCall",
																"src": "23058:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "23048:6:14",
																	"nodeType": "YulTypedName",
																	"src": "23048:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23105:77:14",
															"nodeType": "YulAssignment",
															"src": "23105:77:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23170:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23170:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23175:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23175:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "23112:57:14",
																	"nodeType": "YulIdentifier",
																	"src": "23112:57:14"
																},
																"nativeSrc": "23112:70:14",
																"nodeType": "YulFunctionCall",
																"src": "23112:70:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23105:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23105:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23230:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "23230:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23237:4:14",
																				"nodeType": "YulLiteral",
																				"src": "23237:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23226:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23226:3:14"
																		},
																		"nativeSrc": "23226:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23226:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "23244:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23244:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23249:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23249:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "23191:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "23191:34:14"
																},
																"nativeSrc": "23191:65:14",
																"nodeType": "YulFunctionCall",
																"src": "23191:65:14"
															},
															"nativeSrc": "23191:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "23191:65:14"
														},
														{
															"nativeSrc": "23265:46:14",
															"nodeType": "YulAssignment",
															"src": "23265:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23276:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23276:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "23303:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "23303:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "23281:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "23281:21:14"
																		},
																		"nativeSrc": "23281:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23281:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23272:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23272:3:14"
																},
																"nativeSrc": "23272:39:14",
																"nodeType": "YulFunctionCall",
																"src": "23272:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23265:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23265:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22944:373:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23015:5:14",
														"nodeType": "YulTypedName",
														"src": "23015:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23022:3:14",
														"nodeType": "YulTypedName",
														"src": "23022:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23030:3:14",
														"nodeType": "YulTypedName",
														"src": "23030:3:14",
														"type": ""
													}
												],
												"src": "22944:373:14"
											},
											{
												"body": {
													"nativeSrc": "23523:440:14",
													"nodeType": "YulBlock",
													"src": "23523:440:14",
													"statements": [
														{
															"nativeSrc": "23533:27:14",
															"nodeType": "YulAssignment",
															"src": "23533:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23545:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "23545:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23556:3:14",
																		"nodeType": "YulLiteral",
																		"src": "23556:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23541:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23541:3:14"
																},
																"nativeSrc": "23541:19:14",
																"nodeType": "YulFunctionCall",
																"src": "23541:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23533:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23533:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23614:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23614:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23627:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23627:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23638:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23638:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23623:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23623:3:14"
																		},
																		"nativeSrc": "23623:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23623:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23570:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "23570:43:14"
																},
																"nativeSrc": "23570:71:14",
																"nodeType": "YulFunctionCall",
																"src": "23570:71:14"
															},
															"nativeSrc": "23570:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "23570:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23695:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23695:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23708:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23708:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23719:2:14",
																				"nodeType": "YulLiteral",
																				"src": "23719:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23704:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23704:3:14"
																		},
																		"nativeSrc": "23704:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23704:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23651:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "23651:43:14"
																},
																"nativeSrc": "23651:72:14",
																"nodeType": "YulFunctionCall",
																"src": "23651:72:14"
															},
															"nativeSrc": "23651:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "23651:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23777:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23777:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23790:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23790:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23801:2:14",
																				"nodeType": "YulLiteral",
																				"src": "23801:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23786:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23786:3:14"
																		},
																		"nativeSrc": "23786:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23786:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23733:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "23733:43:14"
																},
																"nativeSrc": "23733:72:14",
																"nodeType": "YulFunctionCall",
																"src": "23733:72:14"
															},
															"nativeSrc": "23733:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "23733:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23826:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23826:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23837:2:14",
																				"nodeType": "YulLiteral",
																				"src": "23837:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23822:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23822:3:14"
																		},
																		"nativeSrc": "23822:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23822:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23846:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "23846:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23852:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23852:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23842:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23842:3:14"
																		},
																		"nativeSrc": "23842:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23842:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23815:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23815:6:14"
																},
																"nativeSrc": "23815:48:14",
																"nodeType": "YulFunctionCall",
																"src": "23815:48:14"
															},
															"nativeSrc": "23815:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "23815:48:14"
														},
														{
															"nativeSrc": "23872:84:14",
															"nodeType": "YulAssignment",
															"src": "23872:84:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "23942:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23942:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23951:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "23951:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "23880:61:14",
																	"nodeType": "YulIdentifier",
																	"src": "23880:61:14"
																},
																"nativeSrc": "23880:76:14",
																"nodeType": "YulFunctionCall",
																"src": "23880:76:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23872:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23872:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "23323:640:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23471:9:14",
														"nodeType": "YulTypedName",
														"src": "23471:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "23483:6:14",
														"nodeType": "YulTypedName",
														"src": "23483:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23491:6:14",
														"nodeType": "YulTypedName",
														"src": "23491:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23499:6:14",
														"nodeType": "YulTypedName",
														"src": "23499:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23507:6:14",
														"nodeType": "YulTypedName",
														"src": "23507:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23518:4:14",
														"nodeType": "YulTypedName",
														"src": "23518:4:14",
														"type": ""
													}
												],
												"src": "23323:640:14"
											},
											{
												"body": {
													"nativeSrc": "24031:79:14",
													"nodeType": "YulBlock",
													"src": "24031:79:14",
													"statements": [
														{
															"nativeSrc": "24041:22:14",
															"nodeType": "YulAssignment",
															"src": "24041:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "24056:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "24056:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24050:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "24050:5:14"
																},
																"nativeSrc": "24050:13:14",
																"nodeType": "YulFunctionCall",
																"src": "24050:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24041:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "24041:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24098:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "24098:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "24072:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "24072:25:14"
																},
																"nativeSrc": "24072:32:14",
																"nodeType": "YulFunctionCall",
																"src": "24072:32:14"
															},
															"nativeSrc": "24072:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "24072:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "23969:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "24009:6:14",
														"nodeType": "YulTypedName",
														"src": "24009:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24017:3:14",
														"nodeType": "YulTypedName",
														"src": "24017:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "24025:5:14",
														"nodeType": "YulTypedName",
														"src": "24025:5:14",
														"type": ""
													}
												],
												"src": "23969:141:14"
											},
											{
												"body": {
													"nativeSrc": "24192:273:14",
													"nodeType": "YulBlock",
													"src": "24192:273:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "24238:83:14",
																"nodeType": "YulBlock",
																"src": "24238:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "24240:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "24240:77:14"
																			},
																			"nativeSrc": "24240:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "24240:79:14"
																		},
																		"nativeSrc": "24240:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "24240:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24213:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "24213:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24222:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24222:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24209:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24209:3:14"
																		},
																		"nativeSrc": "24209:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24209:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24234:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24234:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "24205:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24205:3:14"
																},
																"nativeSrc": "24205:32:14",
																"nodeType": "YulFunctionCall",
																"src": "24205:32:14"
															},
															"nativeSrc": "24202:119:14",
															"nodeType": "YulIf",
															"src": "24202:119:14"
														},
														{
															"nativeSrc": "24331:127:14",
															"nodeType": "YulBlock",
															"src": "24331:127:14",
															"statements": [
																{
																	"nativeSrc": "24346:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "24346:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24360:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24360:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "24350:6:14",
																			"nodeType": "YulTypedName",
																			"src": "24350:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "24375:73:14",
																	"nodeType": "YulAssignment",
																	"src": "24375:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "24420:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "24420:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "24431:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "24431:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "24416:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "24416:3:14"
																				},
																				"nativeSrc": "24416:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "24416:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24440:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "24440:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "24385:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "24385:30:14"
																		},
																		"nativeSrc": "24385:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24385:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "24375:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "24375:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "24116:349:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24162:9:14",
														"nodeType": "YulTypedName",
														"src": "24162:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "24173:7:14",
														"nodeType": "YulTypedName",
														"src": "24173:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "24185:6:14",
														"nodeType": "YulTypedName",
														"src": "24185:6:14",
														"type": ""
													}
												],
												"src": "24116:349:14"
											},
											{
												"body": {
													"nativeSrc": "24499:152:14",
													"nodeType": "YulBlock",
													"src": "24499:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24516:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24516:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24519:77:14",
																		"nodeType": "YulLiteral",
																		"src": "24519:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24509:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24509:6:14"
																},
																"nativeSrc": "24509:88:14",
																"nodeType": "YulFunctionCall",
																"src": "24509:88:14"
															},
															"nativeSrc": "24509:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "24509:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24613:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24613:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24616:4:14",
																		"nodeType": "YulLiteral",
																		"src": "24616:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24606:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24606:6:14"
																},
																"nativeSrc": "24606:15:14",
																"nodeType": "YulFunctionCall",
																"src": "24606:15:14"
															},
															"nativeSrc": "24606:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "24606:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24637:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24637:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24640:4:14",
																		"nodeType": "YulLiteral",
																		"src": "24640:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "24630:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24630:6:14"
																},
																"nativeSrc": "24630:15:14",
																"nodeType": "YulFunctionCall",
																"src": "24630:15:14"
															},
															"nativeSrc": "24630:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "24630:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "24471:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "24471:180:14"
											},
											{
												"body": {
													"nativeSrc": "24783:206:14",
													"nodeType": "YulBlock",
													"src": "24783:206:14",
													"statements": [
														{
															"nativeSrc": "24793:26:14",
															"nodeType": "YulAssignment",
															"src": "24793:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24805:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24805:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24816:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24816:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24801:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24801:3:14"
																},
																"nativeSrc": "24801:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24801:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24793:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24793:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24873:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "24873:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24886:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24886:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24897:1:14",
																				"nodeType": "YulLiteral",
																				"src": "24897:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24882:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24882:3:14"
																		},
																		"nativeSrc": "24882:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24882:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24829:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "24829:43:14"
																},
																"nativeSrc": "24829:71:14",
																"nodeType": "YulFunctionCall",
																"src": "24829:71:14"
															},
															"nativeSrc": "24829:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "24829:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24954:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "24954:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24967:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24967:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24978:2:14",
																				"nodeType": "YulLiteral",
																				"src": "24978:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24963:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24963:3:14"
																		},
																		"nativeSrc": "24963:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24963:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24910:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "24910:43:14"
																},
																"nativeSrc": "24910:72:14",
																"nodeType": "YulFunctionCall",
																"src": "24910:72:14"
															},
															"nativeSrc": "24910:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "24910:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "24657:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24747:9:14",
														"nodeType": "YulTypedName",
														"src": "24747:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24759:6:14",
														"nodeType": "YulTypedName",
														"src": "24759:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24767:6:14",
														"nodeType": "YulTypedName",
														"src": "24767:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24778:4:14",
														"nodeType": "YulTypedName",
														"src": "24778:4:14",
														"type": ""
													}
												],
												"src": "24657:332:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not an additional owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Maximum supply reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot remove contract owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061014b575f3560e01c80637065cb48116100c1578063a22cb4651161007a578063a22cb4651461035f578063b88d4fde1461037b578063c87b56dd14610397578063c8b7ec3d146103c7578063e985e9c5146103f7578063f2fde38b146104275761014b565b80637065cb481461029d57806370a08231146102b9578063715018a6146102e95780638da5cb5b146102f35780638f96a7cb1461031157806395d89b41146103415761014b565b8063173825d911610113578063173825d9146101f357806323b872dd1461020f5780633ccfd60b1461022b57806342842e0e1461023557806355f804b3146102515780636352211e1461026d5761014b565b806301ffc9a71461014f57806306fdde031461017f578063081812fc1461019d578063095ea7b3146101cd5780631249c58b146101e9575b5f80fd5b61016960048036038101906101649190611e17565b610443565b6040516101769190611e5c565b60405180910390f35b610187610524565b6040516101949190611eff565b60405180910390f35b6101b760048036038101906101b29190611f52565b6105b3565b6040516101c49190611fbc565b60405180910390f35b6101e760048036038101906101e29190611fff565b6105ce565b005b6101f16105e4565b005b61020d6004803603810190610208919061203d565b61079e565b005b61022960048036038101906102249190612068565b610872565b005b610233610971565b005b61024f600480360381019061024a9190612068565b6109c6565b005b61026b600480360381019061026691906121e4565b6109e5565b005b61028760048036038101906102829190611f52565b610a00565b6040516102949190611fbc565b60405180910390f35b6102b760048036038101906102b2919061203d565b610a11565b005b6102d360048036038101906102ce919061203d565b610a25565b6040516102e0919061223a565b60405180910390f35b6102f1610adb565b005b6102fb610aee565b6040516103089190611fbc565b60405180910390f35b61032b60048036038101906103269190611f52565b610b16565b6040516103389190611e5c565b60405180910390f35b610349610b3c565b6040516103569190611eff565b60405180910390f35b6103796004803603810190610374919061227d565b610bcc565b005b61039560048036038101906103909190612359565b610be2565b005b6103b160048036038101906103ac9190611f52565b610bff565b6040516103be9190611eff565b60405180910390f35b6103e160048036038101906103dc919061203d565b610c65565b6040516103ee9190611e5c565b60405180910390f35b610411600480360381019061040c91906123d9565b610cb7565b60405161041e9190611e5c565b60405180910390f35b610441600480360381019061043c919061203d565b610d45565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061050d57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061051d575061051c82610dc9565b5b9050919050565b60605f805461053290612444565b80601f016020809104026020016040519081016040528092919081815260200182805461055e90612444565b80156105a95780601f10610580576101008083540402835291602001916105a9565b820191905f5260205f20905b81548152906001019060200180831161058c57829003601f168201915b5050505050905090565b5f6105bd82610e32565b506105c782610eb8565b9050919050565b6105e082826105db610ef1565b610ef8565b5050565b600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff168061066b575061063c610aee565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6106aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a1906124be565b60405180910390fd5b600a546106b76007610f0a565b106106f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ee90612526565b60405180910390fd5b5f60016107046007610f0a565b61070e9190612571565b905061071a3382610f16565b6001600c5f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555061074d6007610f33565b3373ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe82604051610793919061223a565b60405180910390a250565b6107a6610f47565b6107ae610aee565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361081b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610812906125ee565b60405180910390fd5b5f600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108e2575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016108d99190611fbc565b60405180910390fd5b5f6108f583836108f0610ef1565b610fce565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461096b578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016109629392919061260c565b60405180910390fd5b50505050565b610979610f47565b610981610aee565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156109c3573d5f803e3d5ffd5b50565b6109e083838360405180602001604052805f815250610be2565b505050565b6109ed610f47565b80600b90816109fc91906127de565b5050565b5f610a0a82610e32565b9050919050565b610a19610f47565b610a22816111d9565b50565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a96575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610a8d9190611fbc565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610ae3610f47565b610aec5f61129f565b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f600c5f8381526020019081526020015f205f9054906101000a900460ff169050919050565b606060018054610b4b90612444565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7790612444565b8015610bc25780601f10610b9957610100808354040283529160200191610bc2565b820191905f5260205f20905b815481529060010190602001808311610ba557829003601f168201915b5050505050905090565b610bde610bd7610ef1565b8383611362565b5050565b610bed848484610872565b610bf9848484846114cb565b50505050565b6060610c0a82610e32565b505f610c1461167d565b90505f815111610c325760405180602001604052805f815250610c5d565b80610c3c8461170d565b604051602001610c4d9291906128e7565b6040516020818303038152906040525b915050919050565b5f600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610d4d610f47565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dbd575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610db49190611fbc565b60405180910390fd5b610dc68161129f565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610e3d836117d7565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610eaf57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ea6919061223a565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610f058383836001611810565b505050565b5f815f01549050919050565b610f2f828260405180602001604052805f8152506119cf565b5050565b6001815f015f828254019250508190555050565b610f4f610ef1565b73ffffffffffffffffffffffffffffffffffffffff16610f6d610aee565b73ffffffffffffffffffffffffffffffffffffffff1614610fcc57610f90610ef1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fc39190611fbc565b60405180910390fd5b565b5f80610fd9846117d7565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461101a576110198184866119ea565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110a5576110595f855f80611810565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461112457600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611247576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123e90612954565b60405180910390fd5b6001600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113d257816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016113c99190611fbc565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114be9190611e5c565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611677578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261150e610ef1565b8685856040518563ffffffff1660e01b815260040161153094939291906129c4565b6020604051808303815f875af192505050801561156b57506040513d601f19601f820116820180604052508101906115689190612a22565b60015b6115ec573d805f8114611599576040519150601f19603f3d011682016040523d82523d5f602084013e61159e565b606091505b505f8151036115e457836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115db9190611fbc565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461167557836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161166c9190611fbc565b60405180910390fd5b505b50505050565b6060600b805461168c90612444565b80601f01602080910402602001604051908101604052809291908181526020018280546116b890612444565b80156117035780601f106116da57610100808354040283529160200191611703565b820191905f5260205f20905b8154815290600101906020018083116116e657829003601f168201915b5050505050905090565b60605f600161171b84611aad565b0190505f8167ffffffffffffffff811115611739576117386120c0565b5b6040519080825280601f01601f19166020018201604052801561176b5781602001600182028036833780820191505090505b5090505f82602001820190505b6001156117cc578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816117c1576117c0612a4d565b5b0494505f8503611778575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061184857505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561197a575f61185784610e32565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156118c157508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156118d457506118d28184610cb7565b155b1561191657826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161190d9190611fbc565b60405180910390fd5b811561197857838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6119d98383611bfe565b6119e55f8484846114cb565b505050565b6119f5838383611cf1565b611aa8575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a6957806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a60919061223a565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611a9f929190612a7a565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b09577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611aff57611afe612a4d565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611b46576d04ee2d6d415b85acef81000000008381611b3c57611b3b612a4d565b5b0492506020810190505b662386f26fc100008310611b7557662386f26fc100008381611b6b57611b6a612a4d565b5b0492506010810190505b6305f5e1008310611b9e576305f5e1008381611b9457611b93612a4d565b5b0492506008810190505b6127108310611bc3576127108381611bb957611bb8612a4d565b5b0492506004810190505b60648310611be65760648381611bdc57611bdb612a4d565b5b0492506002810190505b600a8310611bf5576001810190505b80915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c6e575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611c659190611fbc565b60405180910390fd5b5f611c7a83835f610fce565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611cec575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611ce39190611fbc565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611da857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611d695750611d688484610cb7565b5b80611da757508273ffffffffffffffffffffffffffffffffffffffff16611d8f83610eb8565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611df681611dc2565b8114611e00575f80fd5b50565b5f81359050611e1181611ded565b92915050565b5f60208284031215611e2c57611e2b611dba565b5b5f611e3984828501611e03565b91505092915050565b5f8115159050919050565b611e5681611e42565b82525050565b5f602082019050611e6f5f830184611e4d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611eac578082015181840152602081019050611e91565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611ed182611e75565b611edb8185611e7f565b9350611eeb818560208601611e8f565b611ef481611eb7565b840191505092915050565b5f6020820190508181035f830152611f178184611ec7565b905092915050565b5f819050919050565b611f3181611f1f565b8114611f3b575f80fd5b50565b5f81359050611f4c81611f28565b92915050565b5f60208284031215611f6757611f66611dba565b5b5f611f7484828501611f3e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611fa682611f7d565b9050919050565b611fb681611f9c565b82525050565b5f602082019050611fcf5f830184611fad565b92915050565b611fde81611f9c565b8114611fe8575f80fd5b50565b5f81359050611ff981611fd5565b92915050565b5f806040838503121561201557612014611dba565b5b5f61202285828601611feb565b925050602061203385828601611f3e565b9150509250929050565b5f6020828403121561205257612051611dba565b5b5f61205f84828501611feb565b91505092915050565b5f805f6060848603121561207f5761207e611dba565b5b5f61208c86828701611feb565b935050602061209d86828701611feb565b92505060406120ae86828701611f3e565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6120f682611eb7565b810181811067ffffffffffffffff82111715612115576121146120c0565b5b80604052505050565b5f612127611db1565b905061213382826120ed565b919050565b5f67ffffffffffffffff821115612152576121516120c0565b5b61215b82611eb7565b9050602081019050919050565b828183375f83830152505050565b5f61218861218384612138565b61211e565b9050828152602081018484840111156121a4576121a36120bc565b5b6121af848285612168565b509392505050565b5f82601f8301126121cb576121ca6120b8565b5b81356121db848260208601612176565b91505092915050565b5f602082840312156121f9576121f8611dba565b5b5f82013567ffffffffffffffff81111561221657612215611dbe565b5b612222848285016121b7565b91505092915050565b61223481611f1f565b82525050565b5f60208201905061224d5f83018461222b565b92915050565b61225c81611e42565b8114612266575f80fd5b50565b5f8135905061227781612253565b92915050565b5f806040838503121561229357612292611dba565b5b5f6122a085828601611feb565b92505060206122b185828601612269565b9150509250929050565b5f67ffffffffffffffff8211156122d5576122d46120c0565b5b6122de82611eb7565b9050602081019050919050565b5f6122fd6122f8846122bb565b61211e565b905082815260208101848484011115612319576123186120bc565b5b612324848285612168565b509392505050565b5f82601f8301126123405761233f6120b8565b5b81356123508482602086016122eb565b91505092915050565b5f805f806080858703121561237157612370611dba565b5b5f61237e87828801611feb565b945050602061238f87828801611feb565b93505060406123a087828801611f3e565b925050606085013567ffffffffffffffff8111156123c1576123c0611dbe565b5b6123cd8782880161232c565b91505092959194509250565b5f80604083850312156123ef576123ee611dba565b5b5f6123fc85828601611feb565b925050602061240d85828601611feb565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061245b57607f821691505b60208210810361246e5761246d612417565b5b50919050565b7f4e6f7420616e206164646974696f6e616c206f776e65720000000000000000005f82015250565b5f6124a8601783611e7f565b91506124b382612474565b602082019050919050565b5f6020820190508181035f8301526124d58161249c565b9050919050565b7f4d6178696d756d20737570706c792072656163686564000000000000000000005f82015250565b5f612510601683611e7f565b915061251b826124dc565b602082019050919050565b5f6020820190508181035f83015261253d81612504565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61257b82611f1f565b915061258683611f1f565b925082820190508082111561259e5761259d612544565b5b92915050565b7f43616e6e6f742072656d6f766520636f6e7472616374206f776e6572000000005f82015250565b5f6125d8601c83611e7f565b91506125e3826125a4565b602082019050919050565b5f6020820190508181035f830152612605816125cc565b9050919050565b5f60608201905061261f5f830186611fad565b61262c602083018561222b565b6126396040830184611fad565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261269d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612662565b6126a78683612662565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6126e26126dd6126d884611f1f565b6126bf565b611f1f565b9050919050565b5f819050919050565b6126fb836126c8565b61270f612707826126e9565b84845461266e565b825550505050565b5f90565b612723612717565b61272e8184846126f2565b505050565b5b81811015612751576127465f8261271b565b600181019050612734565b5050565b601f8211156127965761276781612641565b61277084612653565b8101602085101561277f578190505b61279361278b85612653565b830182612733565b50505b505050565b5f82821c905092915050565b5f6127b65f198460080261279b565b1980831691505092915050565b5f6127ce83836127a7565b9150826002028217905092915050565b6127e782611e75565b67ffffffffffffffff811115612800576127ff6120c0565b5b61280a8254612444565b612815828285612755565b5f60209050601f831160018114612846575f8415612834578287015190505b61283e85826127c3565b8655506128a5565b601f19841661285486612641565b5f5b8281101561287b57848901518255600182019150602085019450602081019050612856565b868310156128985784890151612894601f8916826127a7565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f6128c182611e75565b6128cb81856128ad565b93506128db818560208601611e8f565b80840191505092915050565b5f6128f282856128b7565b91506128fe82846128b7565b91508190509392505050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f61293e600f83611e7f565b91506129498261290a565b602082019050919050565b5f6020820190508181035f83015261296b81612932565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61299682612972565b6129a0818561297c565b93506129b0818560208601611e8f565b6129b981611eb7565b840191505092915050565b5f6080820190506129d75f830187611fad565b6129e46020830186611fad565b6129f1604083018561222b565b8181036060830152612a03818461298c565b905095945050505050565b5f81519050612a1c81611ded565b92915050565b5f60208284031215612a3757612a36611dba565b5b5f612a4484828501612a0e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f604082019050612a8d5f830185611fad565b612a9a602083018461222b565b939250505056fea26469706673582212204518b542256653e2823304d81d9c9d36f7d9f5ac04603b37c51489212cc52fc264736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7065CB48 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xC8B7EC3D EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x427 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x7065CB48 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8F96A7CB EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x341 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x173825D9 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x173825D9 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x26D JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH2 0x5E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x233 PUSH2 0x971 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH2 0xADB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FB PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x227D JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x2359 JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x50D JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x51D JUMPI POP PUSH2 0x51C DUP3 PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x532 SWAP1 PUSH2 0x2444 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x55E SWAP1 PUSH2 0x2444 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x580 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5BD DUP3 PUSH2 0xE32 JUMP JUMPDEST POP PUSH2 0x5C7 DUP3 PUSH2 0xEB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E0 DUP3 DUP3 PUSH2 0x5DB PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0xEF8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x66B JUMPI POP PUSH2 0x63C PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A1 SWAP1 PUSH2 0x24BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH2 0x6B7 PUSH1 0x7 PUSH2 0xF0A JUMP JUMPDEST LT PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP1 PUSH2 0x2526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x704 PUSH1 0x7 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP1 POP PUSH2 0x71A CALLER DUP3 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x74D PUSH1 0x7 PUSH2 0xF33 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP3 PUSH1 0x40 MLOAD PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x7A6 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x812 SWAP1 PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x8F5 DUP4 DUP4 PUSH2 0x8F0 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0xFCE JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x96B JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x260C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x981 PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9C3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9E0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xBE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9ED PUSH2 0xF47 JUMP JUMPDEST DUP1 PUSH1 0xB SWAP1 DUP2 PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x27DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA0A DUP3 PUSH2 0xE32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA19 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0xA22 DUP2 PUSH2 0x11D9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA96 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8D SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE3 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0xAEC PUSH0 PUSH2 0x129F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xB4B SWAP1 PUSH2 0x2444 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB77 SWAP1 PUSH2 0x2444 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB99 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBA5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBDE PUSH2 0xBD7 PUSH2 0xEF1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1362 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBED DUP5 DUP5 DUP5 PUSH2 0x872 JUMP JUMPDEST PUSH2 0xBF9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x14CB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC0A DUP3 PUSH2 0xE32 JUMP JUMPDEST POP PUSH0 PUSH2 0xC14 PUSH2 0x167D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xC5D JUMP JUMPDEST DUP1 PUSH2 0xC3C DUP5 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC4D SWAP3 SWAP2 SWAP1 PUSH2 0x28E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD4D PUSH2 0xF47 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC6 DUP2 PUSH2 0x129F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE3D DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEAF JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA6 SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF05 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1810 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF2F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x19CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xF4F PUSH2 0xEF1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF6D PUSH2 0xAEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCC JUMPI PUSH2 0xF90 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFD9 DUP5 PUSH2 0x17D7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x101A JUMPI PUSH2 0x1019 DUP2 DUP5 DUP7 PUSH2 0x19EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10A5 JUMPI PUSH2 0x1059 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1124 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1247 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123E SWAP1 PUSH2 0x2954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D2 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C9 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x14BE SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1677 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x150E PUSH2 0xEF1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1530 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x156B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x15EC JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1599 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x159E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x15E4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1675 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166C SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0x168C SWAP1 PUSH2 0x2444 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16B8 SWAP1 PUSH2 0x2444 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1703 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1703 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x171B DUP5 PUSH2 0x1AAD JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x20C0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x176B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x17CC JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x17C1 JUMPI PUSH2 0x17C0 PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1778 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1848 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x197A JUMPI PUSH0 PUSH2 0x1857 DUP5 PUSH2 0xE32 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x18C1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x18D4 JUMPI POP PUSH2 0x18D2 DUP2 DUP5 PUSH2 0xCB7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1916 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190D SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1978 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19D9 DUP4 DUP4 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x19E5 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x14CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x19F5 DUP4 DUP4 DUP4 PUSH2 0x1CF1 JUMP JUMPDEST PUSH2 0x1AA8 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A69 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A60 SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9F SWAP3 SWAP2 SWAP1 PUSH2 0x2A7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1B09 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1AFF JUMPI PUSH2 0x1AFE PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1B46 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1B3C JUMPI PUSH2 0x1B3B PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1B75 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1B6B JUMPI PUSH2 0x1B6A PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1B9E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1B94 JUMPI PUSH2 0x1B93 PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1BC3 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1BB9 JUMPI PUSH2 0x1BB8 PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1BE6 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1BDC JUMPI PUSH2 0x1BDB PUSH2 0x2A4D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1BF5 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C6E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C65 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C7A DUP4 DUP4 PUSH0 PUSH2 0xFCE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CEC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE3 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DA8 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1D69 JUMPI POP PUSH2 0x1D68 DUP5 DUP5 PUSH2 0xCB7 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1DA7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D8F DUP4 PUSH2 0xEB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF6 DUP2 PUSH2 0x1DC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E00 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E11 DUP2 PUSH2 0x1DED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E2C JUMPI PUSH2 0x1E2B PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E39 DUP5 DUP3 DUP6 ADD PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E56 DUP2 PUSH2 0x1E42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6F PUSH0 DUP4 ADD DUP5 PUSH2 0x1E4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EAC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E91 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED1 DUP3 PUSH2 0x1E75 JUMP JUMPDEST PUSH2 0x1EDB DUP2 DUP6 PUSH2 0x1E7F JUMP JUMPDEST SWAP4 POP PUSH2 0x1EEB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x1EF4 DUP2 PUSH2 0x1EB7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F17 DUP2 DUP5 PUSH2 0x1EC7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F31 DUP2 PUSH2 0x1F1F JUMP JUMPDEST DUP2 EQ PUSH2 0x1F3B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F4C DUP2 PUSH2 0x1F28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F67 JUMPI PUSH2 0x1F66 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F74 DUP5 DUP3 DUP6 ADD PUSH2 0x1F3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA6 DUP3 PUSH2 0x1F7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB6 DUP2 PUSH2 0x1F9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FCF PUSH0 DUP4 ADD DUP5 PUSH2 0x1FAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FDE DUP2 PUSH2 0x1F9C JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FF9 DUP2 PUSH2 0x1FD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2015 JUMPI PUSH2 0x2014 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2022 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2033 DUP6 DUP3 DUP7 ADD PUSH2 0x1F3E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2052 JUMPI PUSH2 0x2051 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x205F DUP5 DUP3 DUP6 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x208C DUP7 DUP3 DUP8 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x209D DUP7 DUP3 DUP8 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20AE DUP7 DUP3 DUP8 ADD PUSH2 0x1F3E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x20F6 DUP3 PUSH2 0x1EB7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2115 JUMPI PUSH2 0x2114 PUSH2 0x20C0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2127 PUSH2 0x1DB1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2133 DUP3 DUP3 PUSH2 0x20ED JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2152 JUMPI PUSH2 0x2151 PUSH2 0x20C0 JUMP JUMPDEST JUMPDEST PUSH2 0x215B DUP3 PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2188 PUSH2 0x2183 DUP5 PUSH2 0x2138 JUMP JUMPDEST PUSH2 0x211E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21A4 JUMPI PUSH2 0x21A3 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH2 0x21AF DUP5 DUP3 DUP6 PUSH2 0x2168 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21CB JUMPI PUSH2 0x21CA PUSH2 0x20B8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21DB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2176 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F9 JUMPI PUSH2 0x21F8 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2216 JUMPI PUSH2 0x2215 PUSH2 0x1DBE JUMP JUMPDEST JUMPDEST PUSH2 0x2222 DUP5 DUP3 DUP6 ADD PUSH2 0x21B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2234 DUP2 PUSH2 0x1F1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x224D PUSH0 DUP4 ADD DUP5 PUSH2 0x222B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x225C DUP2 PUSH2 0x1E42 JUMP JUMPDEST DUP2 EQ PUSH2 0x2266 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2277 DUP2 PUSH2 0x2253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2293 JUMPI PUSH2 0x2292 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22A0 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22B1 DUP6 DUP3 DUP7 ADD PUSH2 0x2269 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x22D5 JUMPI PUSH2 0x22D4 PUSH2 0x20C0 JUMP JUMPDEST JUMPDEST PUSH2 0x22DE DUP3 PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22FD PUSH2 0x22F8 DUP5 PUSH2 0x22BB JUMP JUMPDEST PUSH2 0x211E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2319 JUMPI PUSH2 0x2318 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH2 0x2324 DUP5 DUP3 DUP6 PUSH2 0x2168 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2340 JUMPI PUSH2 0x233F PUSH2 0x20B8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2350 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2371 JUMPI PUSH2 0x2370 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x237E DUP8 DUP3 DUP9 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x238F DUP8 DUP3 DUP9 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x23A0 DUP8 DUP3 DUP9 ADD PUSH2 0x1F3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23C1 JUMPI PUSH2 0x23C0 PUSH2 0x1DBE JUMP JUMPDEST JUMPDEST PUSH2 0x23CD DUP8 DUP3 DUP9 ADD PUSH2 0x232C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23EF JUMPI PUSH2 0x23EE PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23FC DUP6 DUP3 DUP7 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x240D DUP6 DUP3 DUP7 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x245B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x246E JUMPI PUSH2 0x246D PUSH2 0x2417 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616E206164646974696F6E616C206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24A8 PUSH1 0x17 DUP4 PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP PUSH2 0x24B3 DUP3 PUSH2 0x2474 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24D5 DUP2 PUSH2 0x249C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6178696D756D20737570706C79207265616368656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2510 PUSH1 0x16 DUP4 PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP PUSH2 0x251B DUP3 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x253D DUP2 PUSH2 0x2504 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x257B DUP3 PUSH2 0x1F1F JUMP JUMPDEST SWAP2 POP PUSH2 0x2586 DUP4 PUSH2 0x1F1F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x259E JUMPI PUSH2 0x259D PUSH2 0x2544 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742072656D6F766520636F6E7472616374206F776E657200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25D8 PUSH1 0x1C DUP4 PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP PUSH2 0x25E3 DUP3 PUSH2 0x25A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2605 DUP2 PUSH2 0x25CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x261F PUSH0 DUP4 ADD DUP7 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x262C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x222B JUMP JUMPDEST PUSH2 0x2639 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FAD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x269D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2662 JUMP JUMPDEST PUSH2 0x26A7 DUP7 DUP4 PUSH2 0x2662 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26E2 PUSH2 0x26DD PUSH2 0x26D8 DUP5 PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x26BF JUMP JUMPDEST PUSH2 0x1F1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26FB DUP4 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x270F PUSH2 0x2707 DUP3 PUSH2 0x26E9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x266E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2723 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0x272E DUP2 DUP5 DUP5 PUSH2 0x26F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2751 JUMPI PUSH2 0x2746 PUSH0 DUP3 PUSH2 0x271B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2734 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2796 JUMPI PUSH2 0x2767 DUP2 PUSH2 0x2641 JUMP JUMPDEST PUSH2 0x2770 DUP5 PUSH2 0x2653 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x277F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2793 PUSH2 0x278B DUP6 PUSH2 0x2653 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2733 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27B6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x279B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27CE DUP4 DUP4 PUSH2 0x27A7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E7 DUP3 PUSH2 0x1E75 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2800 JUMPI PUSH2 0x27FF PUSH2 0x20C0 JUMP JUMPDEST JUMPDEST PUSH2 0x280A DUP3 SLOAD PUSH2 0x2444 JUMP JUMPDEST PUSH2 0x2815 DUP3 DUP3 DUP6 PUSH2 0x2755 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2846 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2834 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x283E DUP6 DUP3 PUSH2 0x27C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2854 DUP7 PUSH2 0x2641 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x287B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2856 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2898 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2894 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27A7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28C1 DUP3 PUSH2 0x1E75 JUMP JUMPDEST PUSH2 0x28CB DUP2 DUP6 PUSH2 0x28AD JUMP JUMPDEST SWAP4 POP PUSH2 0x28DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28F2 DUP3 DUP6 PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x28FE DUP3 DUP5 PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x293E PUSH1 0xF DUP4 PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP PUSH2 0x2949 DUP3 PUSH2 0x290A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x296B DUP2 PUSH2 0x2932 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2996 DUP3 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x29A0 DUP2 DUP6 PUSH2 0x297C JUMP JUMPDEST SWAP4 POP PUSH2 0x29B0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x29B9 DUP2 PUSH2 0x1EB7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x29D7 PUSH0 DUP4 ADD DUP8 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x29E4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x29F1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x222B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2A03 DUP2 DUP5 PUSH2 0x298C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A1C DUP2 PUSH2 0x1DED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A37 JUMPI PUSH2 0x2A36 PUSH2 0x1DBA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A44 DUP5 DUP3 DUP6 ADD PUSH2 0x2A0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A8D PUSH0 DUP4 ADD DUP6 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x2A9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x222B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT XOR 0xB5 TIMESTAMP 0x25 PUSH7 0x53E2823304D81D SWAP13 SWAP14 CALLDATASIZE 0xF7 0xD9 CREATE2 0xAC DIV PUSH1 0x3B CALLDATACOPY 0xC5 EQ DUP10 0x21 0x2C 0xC5 0x2F 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "229:2992:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1350:358:13;;;:::i;:::-;;2492:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3112:106:13;;;:::i;:::-;;4787:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1920:114:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2071:103:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1920:208:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1757:117:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2761:125:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1561:300:2;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;1350:358:13:-;983:17;:29;1001:10;983:29;;;;;;;;;;;;;;;;;;;;;;;;;:54;;;;1030:7;:5;:7::i;:::-;1016:21;;:10;:21;;;983:54;975:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;1443:10:::1;;1415:25;:15;:23;:25::i;:::-;:38;1407:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1491:15;1537:1;1509:25;:15;:23;:25::i;:::-;:29;;;;:::i;:::-;1491:47;;1549:30;1559:10;1571:7;1549:9;:30::i;:::-;1615:4;1590:13;:22;1604:7;1590:22;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1630:27;:15;:25;:27::i;:::-;1680:10;1673:27;;;1692:7;1673:27;;;;;;:::i;:::-;;;;;;;;1396:312;1350:358::o:0;2492:198::-;1531:13:0;:11;:13::i;:::-;2591:7:13::1;:5;:7::i;:::-;2574:24;;:13;:24;;::::0;2566:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2677:5;2642:17;:32;2660:13;2642:32;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;2492:198:::0;:::o;4143:578:2:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;3112:106:13:-;1531:13:0;:11;:13::i;:::-;3170:7:13::1;:5;:7::i;:::-;3162:25;;:48;3188:21;3162:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3112:106::o:0;4787:132:2:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1920:114:13:-;1531:13:0;:11;:13::i;:::-;2014:12:13::1;1998:13;:28;;;;;;:::i;:::-;;1920:114:::0;:::o;2185:118:2:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;2071:103:13:-;1531:13:0;:11;:13::i;:::-;2137:29:13::1;2157:8;2137:19;:29::i;:::-;2071:103:::0;:::o;1920:208:2:-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1757:117:13:-;1820:4;1844:13;:22;1858:7;1844:22;;;;;;;;;;;;;;;;;;;;;1837:29;;1757:117;;;:::o;2518:93:2:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;2761:125:13:-;2828:4;2852:17;:26;2870:7;2852:26;;;;;;;;;;;;;;;;;;;;;;;;;2845:33;;2761:125;;;:::o;3928:153:2:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;762:146:9:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:2:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;14418:120:2:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;827:112:7:-;892:7;918;:14;;;911:21;;827:112;;;:::o;10633:100:2:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;945:123:7:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;8838:795:2:-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;2232:170:13:-;2327:1;2307:22;;:8;:22;;;2299:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2390:4;2360:17;:27;2378:8;2360:27;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2232:170;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15591:312:2:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;2945:106:13:-;2997:13;3030;3023:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2945:106;:::o;637:698:8:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:2:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;12214:916:11:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;9955:327:2:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;6376:272::-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:329::-;4949:6;4998:2;4986:9;4977:7;4973:23;4969:32;4966:119;;;5004:79;;:::i;:::-;4966:119;5124:1;5149:53;5194:7;5185:6;5174:9;5170:22;5149:53;:::i;:::-;5139:63;;5095:117;4890:329;;;;:::o;5225:619::-;5302:6;5310;5318;5367:2;5355:9;5346:7;5342:23;5338:32;5335:119;;;5373:79;;:::i;:::-;5335:119;5493:1;5518:53;5563:7;5554:6;5543:9;5539:22;5518:53;:::i;:::-;5508:63;;5464:117;5620:2;5646:53;5691:7;5682:6;5671:9;5667:22;5646:53;:::i;:::-;5636:63;;5591:118;5748:2;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5719:118;5225:619;;;;;:::o;5850:117::-;5959:1;5956;5949:12;5973:117;6082:1;6079;6072:12;6096:180;6144:77;6141:1;6134:88;6241:4;6238:1;6231:15;6265:4;6262:1;6255:15;6282:281;6365:27;6387:4;6365:27;:::i;:::-;6357:6;6353:40;6495:6;6483:10;6480:22;6459:18;6447:10;6444:34;6441:62;6438:88;;;6506:18;;:::i;:::-;6438:88;6546:10;6542:2;6535:22;6325:238;6282:281;;:::o;6569:129::-;6603:6;6630:20;;:::i;:::-;6620:30;;6659:33;6687:4;6679:6;6659:33;:::i;:::-;6569:129;;;:::o;6704:308::-;6766:4;6856:18;6848:6;6845:30;6842:56;;;6878:18;;:::i;:::-;6842:56;6916:29;6938:6;6916:29;:::i;:::-;6908:37;;7000:4;6994;6990:15;6982:23;;6704:308;;;:::o;7018:146::-;7115:6;7110:3;7105;7092:30;7156:1;7147:6;7142:3;7138:16;7131:27;7018:146;;;:::o;7170:425::-;7248:5;7273:66;7289:49;7331:6;7289:49;:::i;:::-;7273:66;:::i;:::-;7264:75;;7362:6;7355:5;7348:21;7400:4;7393:5;7389:16;7438:3;7429:6;7424:3;7420:16;7417:25;7414:112;;;7445:79;;:::i;:::-;7414:112;7535:54;7582:6;7577:3;7572;7535:54;:::i;:::-;7254:341;7170:425;;;;;:::o;7615:340::-;7671:5;7720:3;7713:4;7705:6;7701:17;7697:27;7687:122;;7728:79;;:::i;:::-;7687:122;7845:6;7832:20;7870:79;7945:3;7937:6;7930:4;7922:6;7918:17;7870:79;:::i;:::-;7861:88;;7677:278;7615:340;;;;:::o;7961:509::-;8030:6;8079:2;8067:9;8058:7;8054:23;8050:32;8047:119;;;8085:79;;:::i;:::-;8047:119;8233:1;8222:9;8218:17;8205:31;8263:18;8255:6;8252:30;8249:117;;;8285:79;;:::i;:::-;8249:117;8390:63;8445:7;8436:6;8425:9;8421:22;8390:63;:::i;:::-;8380:73;;8176:287;7961:509;;;;:::o;8476:118::-;8563:24;8581:5;8563:24;:::i;:::-;8558:3;8551:37;8476:118;;:::o;8600:222::-;8693:4;8731:2;8720:9;8716:18;8708:26;;8744:71;8812:1;8801:9;8797:17;8788:6;8744:71;:::i;:::-;8600:222;;;;:::o;8828:116::-;8898:21;8913:5;8898:21;:::i;:::-;8891:5;8888:32;8878:60;;8934:1;8931;8924:12;8878:60;8828:116;:::o;8950:133::-;8993:5;9031:6;9018:20;9009:29;;9047:30;9071:5;9047:30;:::i;:::-;8950:133;;;;:::o;9089:468::-;9154:6;9162;9211:2;9199:9;9190:7;9186:23;9182:32;9179:119;;;9217:79;;:::i;:::-;9179:119;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:50;9532:7;9523:6;9512:9;9508:22;9490:50;:::i;:::-;9480:60;;9435:115;9089:468;;;;;:::o;9563:307::-;9624:4;9714:18;9706:6;9703:30;9700:56;;;9736:18;;:::i;:::-;9700:56;9774:29;9796:6;9774:29;:::i;:::-;9766:37;;9858:4;9852;9848:15;9840:23;;9563:307;;;:::o;9876:423::-;9953:5;9978:65;9994:48;10035:6;9994:48;:::i;:::-;9978:65;:::i;:::-;9969:74;;10066:6;10059:5;10052:21;10104:4;10097:5;10093:16;10142:3;10133:6;10128:3;10124:16;10121:25;10118:112;;;10149:79;;:::i;:::-;10118:112;10239:54;10286:6;10281:3;10276;10239:54;:::i;:::-;9959:340;9876:423;;;;;:::o;10318:338::-;10373:5;10422:3;10415:4;10407:6;10403:17;10399:27;10389:122;;10430:79;;:::i;:::-;10389:122;10547:6;10534:20;10572:78;10646:3;10638:6;10631:4;10623:6;10619:17;10572:78;:::i;:::-;10563:87;;10379:277;10318:338;;;;:::o;10662:943::-;10757:6;10765;10773;10781;10830:3;10818:9;10809:7;10805:23;10801:33;10798:120;;;10837:79;;:::i;:::-;10798:120;10957:1;10982:53;11027:7;11018:6;11007:9;11003:22;10982:53;:::i;:::-;10972:63;;10928:117;11084:2;11110:53;11155:7;11146:6;11135:9;11131:22;11110:53;:::i;:::-;11100:63;;11055:118;11212:2;11238:53;11283:7;11274:6;11263:9;11259:22;11238:53;:::i;:::-;11228:63;;11183:118;11368:2;11357:9;11353:18;11340:32;11399:18;11391:6;11388:30;11385:117;;;11421:79;;:::i;:::-;11385:117;11526:62;11580:7;11571:6;11560:9;11556:22;11526:62;:::i;:::-;11516:72;;11311:287;10662:943;;;;;;;:::o;11611:474::-;11679:6;11687;11736:2;11724:9;11715:7;11711:23;11707:32;11704:119;;;11742:79;;:::i;:::-;11704:119;11862:1;11887:53;11932:7;11923:6;11912:9;11908:22;11887:53;:::i;:::-;11877:63;;11833:117;11989:2;12015:53;12060:7;12051:6;12040:9;12036:22;12015:53;:::i;:::-;12005:63;;11960:118;11611:474;;;;;:::o;12091:180::-;12139:77;12136:1;12129:88;12236:4;12233:1;12226:15;12260:4;12257:1;12250:15;12277:320;12321:6;12358:1;12352:4;12348:12;12338:22;;12405:1;12399:4;12395:12;12426:18;12416:81;;12482:4;12474:6;12470:17;12460:27;;12416:81;12544:2;12536:6;12533:14;12513:18;12510:38;12507:84;;12563:18;;:::i;:::-;12507:84;12328:269;12277:320;;;:::o;12603:173::-;12743:25;12739:1;12731:6;12727:14;12720:49;12603:173;:::o;12782:366::-;12924:3;12945:67;13009:2;13004:3;12945:67;:::i;:::-;12938:74;;13021:93;13110:3;13021:93;:::i;:::-;13139:2;13134:3;13130:12;13123:19;;12782:366;;;:::o;13154:419::-;13320:4;13358:2;13347:9;13343:18;13335:26;;13407:9;13401:4;13397:20;13393:1;13382:9;13378:17;13371:47;13435:131;13561:4;13435:131;:::i;:::-;13427:139;;13154:419;;;:::o;13579:172::-;13719:24;13715:1;13707:6;13703:14;13696:48;13579:172;:::o;13757:366::-;13899:3;13920:67;13984:2;13979:3;13920:67;:::i;:::-;13913:74;;13996:93;14085:3;13996:93;:::i;:::-;14114:2;14109:3;14105:12;14098:19;;13757:366;;;:::o;14129:419::-;14295:4;14333:2;14322:9;14318:18;14310:26;;14382:9;14376:4;14372:20;14368:1;14357:9;14353:17;14346:47;14410:131;14536:4;14410:131;:::i;:::-;14402:139;;14129:419;;;:::o;14554:180::-;14602:77;14599:1;14592:88;14699:4;14696:1;14689:15;14723:4;14720:1;14713:15;14740:191;14780:3;14799:20;14817:1;14799:20;:::i;:::-;14794:25;;14833:20;14851:1;14833:20;:::i;:::-;14828:25;;14876:1;14873;14869:9;14862:16;;14897:3;14894:1;14891:10;14888:36;;;14904:18;;:::i;:::-;14888:36;14740:191;;;;:::o;14937:178::-;15077:30;15073:1;15065:6;15061:14;15054:54;14937:178;:::o;15121:366::-;15263:3;15284:67;15348:2;15343:3;15284:67;:::i;:::-;15277:74;;15360:93;15449:3;15360:93;:::i;:::-;15478:2;15473:3;15469:12;15462:19;;15121:366;;;:::o;15493:419::-;15659:4;15697:2;15686:9;15682:18;15674:26;;15746:9;15740:4;15736:20;15732:1;15721:9;15717:17;15710:47;15774:131;15900:4;15774:131;:::i;:::-;15766:139;;15493:419;;;:::o;15918:442::-;16067:4;16105:2;16094:9;16090:18;16082:26;;16118:71;16186:1;16175:9;16171:17;16162:6;16118:71;:::i;:::-;16199:72;16267:2;16256:9;16252:18;16243:6;16199:72;:::i;:::-;16281;16349:2;16338:9;16334:18;16325:6;16281:72;:::i;:::-;15918:442;;;;;;:::o;16366:141::-;16415:4;16438:3;16430:11;;16461:3;16458:1;16451:14;16495:4;16492:1;16482:18;16474:26;;16366:141;;;:::o;16513:93::-;16550:6;16597:2;16592;16585:5;16581:14;16577:23;16567:33;;16513:93;;;:::o;16612:107::-;16656:8;16706:5;16700:4;16696:16;16675:37;;16612:107;;;;:::o;16725:393::-;16794:6;16844:1;16832:10;16828:18;16867:97;16897:66;16886:9;16867:97;:::i;:::-;16985:39;17015:8;17004:9;16985:39;:::i;:::-;16973:51;;17057:4;17053:9;17046:5;17042:21;17033:30;;17106:4;17096:8;17092:19;17085:5;17082:30;17072:40;;16801:317;;16725:393;;;;;:::o;17124:60::-;17152:3;17173:5;17166:12;;17124:60;;;:::o;17190:142::-;17240:9;17273:53;17291:34;17300:24;17318:5;17300:24;:::i;:::-;17291:34;:::i;:::-;17273:53;:::i;:::-;17260:66;;17190:142;;;:::o;17338:75::-;17381:3;17402:5;17395:12;;17338:75;;;:::o;17419:269::-;17529:39;17560:7;17529:39;:::i;:::-;17590:91;17639:41;17663:16;17639:41;:::i;:::-;17631:6;17624:4;17618:11;17590:91;:::i;:::-;17584:4;17577:105;17495:193;17419:269;;;:::o;17694:73::-;17739:3;17694:73;:::o;17773:189::-;17850:32;;:::i;:::-;17891:65;17949:6;17941;17935:4;17891:65;:::i;:::-;17826:136;17773:189;;:::o;17968:186::-;18028:120;18045:3;18038:5;18035:14;18028:120;;;18099:39;18136:1;18129:5;18099:39;:::i;:::-;18072:1;18065:5;18061:13;18052:22;;18028:120;;;17968:186;;:::o;18160:543::-;18261:2;18256:3;18253:11;18250:446;;;18295:38;18327:5;18295:38;:::i;:::-;18379:29;18397:10;18379:29;:::i;:::-;18369:8;18365:44;18562:2;18550:10;18547:18;18544:49;;;18583:8;18568:23;;18544:49;18606:80;18662:22;18680:3;18662:22;:::i;:::-;18652:8;18648:37;18635:11;18606:80;:::i;:::-;18265:431;;18250:446;18160:543;;;:::o;18709:117::-;18763:8;18813:5;18807:4;18803:16;18782:37;;18709:117;;;;:::o;18832:169::-;18876:6;18909:51;18957:1;18953:6;18945:5;18942:1;18938:13;18909:51;:::i;:::-;18905:56;18990:4;18984;18980:15;18970:25;;18883:118;18832:169;;;;:::o;19006:295::-;19082:4;19228:29;19253:3;19247:4;19228:29;:::i;:::-;19220:37;;19290:3;19287:1;19283:11;19277:4;19274:21;19266:29;;19006:295;;;;:::o;19306:1395::-;19423:37;19456:3;19423:37;:::i;:::-;19525:18;19517:6;19514:30;19511:56;;;19547:18;;:::i;:::-;19511:56;19591:38;19623:4;19617:11;19591:38;:::i;:::-;19676:67;19736:6;19728;19722:4;19676:67;:::i;:::-;19770:1;19794:4;19781:17;;19826:2;19818:6;19815:14;19843:1;19838:618;;;;20500:1;20517:6;20514:77;;;20566:9;20561:3;20557:19;20551:26;20542:35;;20514:77;20617:67;20677:6;20670:5;20617:67;:::i;:::-;20611:4;20604:81;20473:222;19808:887;;19838:618;19890:4;19886:9;19878:6;19874:22;19924:37;19956:4;19924:37;:::i;:::-;19983:1;19997:208;20011:7;20008:1;20005:14;19997:208;;;20090:9;20085:3;20081:19;20075:26;20067:6;20060:42;20141:1;20133:6;20129:14;20119:24;;20188:2;20177:9;20173:18;20160:31;;20034:4;20031:1;20027:12;20022:17;;19997:208;;;20233:6;20224:7;20221:19;20218:179;;;20291:9;20286:3;20282:19;20276:26;20334:48;20376:4;20368:6;20364:17;20353:9;20334:48;:::i;:::-;20326:6;20319:64;20241:156;20218:179;20443:1;20439;20431:6;20427:14;20423:22;20417:4;20410:36;19845:611;;;19808:887;;19398:1303;;;19306:1395;;:::o;20707:148::-;20809:11;20846:3;20831:18;;20707:148;;;;:::o;20861:390::-;20967:3;20995:39;21028:5;20995:39;:::i;:::-;21050:89;21132:6;21127:3;21050:89;:::i;:::-;21043:96;;21148:65;21206:6;21201:3;21194:4;21187:5;21183:16;21148:65;:::i;:::-;21238:6;21233:3;21229:16;21222:23;;20971:280;20861:390;;;;:::o;21257:435::-;21437:3;21459:95;21550:3;21541:6;21459:95;:::i;:::-;21452:102;;21571:95;21662:3;21653:6;21571:95;:::i;:::-;21564:102;;21683:3;21676:10;;21257:435;;;;;:::o;21698:165::-;21838:17;21834:1;21826:6;21822:14;21815:41;21698:165;:::o;21869:366::-;22011:3;22032:67;22096:2;22091:3;22032:67;:::i;:::-;22025:74;;22108:93;22197:3;22108:93;:::i;:::-;22226:2;22221:3;22217:12;22210:19;;21869:366;;;:::o;22241:419::-;22407:4;22445:2;22434:9;22430:18;22422:26;;22494:9;22488:4;22484:20;22480:1;22469:9;22465:17;22458:47;22522:131;22648:4;22522:131;:::i;:::-;22514:139;;22241:419;;;:::o;22666:98::-;22717:6;22751:5;22745:12;22735:22;;22666:98;;;:::o;22770:168::-;22853:11;22887:6;22882:3;22875:19;22927:4;22922:3;22918:14;22903:29;;22770:168;;;;:::o;22944:373::-;23030:3;23058:38;23090:5;23058:38;:::i;:::-;23112:70;23175:6;23170:3;23112:70;:::i;:::-;23105:77;;23191:65;23249:6;23244:3;23237:4;23230:5;23226:16;23191:65;:::i;:::-;23281:29;23303:6;23281:29;:::i;:::-;23276:3;23272:39;23265:46;;23034:283;22944:373;;;;:::o;23323:640::-;23518:4;23556:3;23545:9;23541:19;23533:27;;23570:71;23638:1;23627:9;23623:17;23614:6;23570:71;:::i;:::-;23651:72;23719:2;23708:9;23704:18;23695:6;23651:72;:::i;:::-;23733;23801:2;23790:9;23786:18;23777:6;23733:72;:::i;:::-;23852:9;23846:4;23842:20;23837:2;23826:9;23822:18;23815:48;23880:76;23951:4;23942:6;23880:76;:::i;:::-;23872:84;;23323:640;;;;;;;:::o;23969:141::-;24025:5;24056:6;24050:13;24041:22;;24072:32;24098:5;24072:32;:::i;:::-;23969:141;;;;:::o;24116:349::-;24185:6;24234:2;24222:9;24213:7;24209:23;24205:32;24202:119;;;24240:79;;:::i;:::-;24202:119;24360:1;24385:63;24440:7;24431:6;24420:9;24416:22;24385:63;:::i;:::-;24375:73;;24331:127;24116:349;;;;:::o;24471:180::-;24519:77;24516:1;24509:88;24616:4;24613:1;24606:15;24640:4;24637:1;24630:15;24657:332;24778:4;24816:2;24805:9;24801:18;24793:26;;24829:71;24897:1;24886:9;24882:17;24873:6;24829:71;:::i;:::-;24910:72;24978:2;24967:9;24963:18;24954:6;24910:72;:::i;:::-;24657:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2193400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addOwner(address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isAdditionalOwner(address)": "2958",
								"isApprovedForAll(address,address)": "infinite",
								"isTokenMinted(uint256)": "2921",
								"mint()": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"ownerOf(uint256)": "infinite",
								"removeOwner(address)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setBaseURI(string)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							},
							"internal": {
								"_addAdditionalOwner(address)": "infinite",
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 229,
									"end": 3221,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 508,
									"end": 547,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 508,
									"end": 547,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 508,
									"end": 547,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "PUSH",
									"source": 13,
									"value": "E"
								},
								{
									"begin": 508,
									"end": 547,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 508,
									"end": 547,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "PUSH",
									"source": 13,
									"value": "454E49474D415449432041555241000000000000000000000000000000000000"
								},
								{
									"begin": 508,
									"end": 547,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 508,
									"end": 547,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 508,
									"end": 547,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 508,
									"end": 547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 508,
									"end": 547,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 508,
									"end": 547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 554,
									"end": 583,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 554,
									"end": 583,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 554,
									"end": 583,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 554,
									"end": 583,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 554,
									"end": 583,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "PUSH",
									"source": 13,
									"value": "4541000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 554,
									"end": 583,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "PUSH",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 554,
									"end": 583,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 554,
									"end": 583,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 554,
									"end": 583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 554,
									"end": 583,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 554,
									"end": 583,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 652,
									"end": 656,
									"name": "PUSH",
									"source": 13,
									"value": "1A0A"
								},
								{
									"begin": 623,
									"end": 656,
									"name": "PUSH",
									"source": 13,
									"value": "A"
								},
								{
									"begin": 623,
									"end": 656,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "tag",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 1093,
									"end": 1321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "tag",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 1198,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1162,
									"end": 1167,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1381,
									"end": 1494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1381,
									"end": 1494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1176,
									"name": "PUSH",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1381,
									"end": 1494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1381,
									"end": 1494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1227,
									"end": 1239,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1211,
									"end": 1224,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 1211,
									"end": 1239,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1211,
									"end": 1239,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1211,
									"end": 1239,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1211,
									"end": 1239,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1211,
									"end": 1239,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1211,
									"end": 1239,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1211,
									"end": 1239,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1211,
									"end": 1239,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1211,
									"end": 1239,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1211,
									"end": 1239,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1250,
									"end": 1313,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1270,
									"end": 1312,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "6DB77318C4EB74A296E41179A22700F84658FA86"
								},
								{
									"begin": 1250,
									"end": 1269,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1250,
									"end": 1269,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1250,
									"end": 1269,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1250,
									"end": 1313,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1250,
									"end": 1313,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1250,
									"end": 1313,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1250,
									"end": 1313,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1250,
									"end": 1313,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1321,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2232,
									"end": 2402,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2232,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2327,
									"end": 2328,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2307,
									"end": 2329,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2307,
									"end": 2329,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2307,
									"end": 2315,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2307,
									"end": 2329,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2307,
									"end": 2329,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2307,
									"end": 2329,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "PUSH",
									"source": 13,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 2299,
									"end": 2349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 2299,
									"end": 2349,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2390,
									"end": 2394,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2360,
									"end": 2377,
									"name": "PUSH",
									"source": 13,
									"value": "D"
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2386,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2387,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2394,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2232,
									"end": 2402,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2232,
									"end": 2402,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "102"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 14,
									"value": "102"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "115"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 14,
									"value": "115"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "127"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "128"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 14,
									"value": "128"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 14,
									"value": "127"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "131"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 14,
									"value": "136"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "138"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "136"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 14,
									"value": "138"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 14,
									"value": "131"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "tag",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5267,
									"end": 5273,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5300,
									"end": 5302,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 5294,
									"end": 5303,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 5284,
									"end": 5303,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5284,
									"end": 5303,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5234,
									"end": 5309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "tag",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5424,
									"end": 5425,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5421,
									"end": 5422,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5414,
									"end": 5426,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 5438,
									"end": 5555,
									"name": "tag",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 5438,
									"end": 5555,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5547,
									"end": 5548,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5544,
									"end": 5545,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5537,
									"end": 5549,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 5561,
									"end": 5678,
									"name": "tag",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 5561,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5670,
									"end": 5671,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5667,
									"end": 5668,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5660,
									"end": 5672,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 5684,
									"end": 5801,
									"name": "tag",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 5684,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5793,
									"end": 5794,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5790,
									"end": 5791,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5783,
									"end": 5795,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "tag",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5848,
									"end": 5854,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5899,
									"end": 5901,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 5895,
									"end": 5902,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5890,
									"end": 5892,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 5883,
									"end": 5888,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5879,
									"end": 5893,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5875,
									"end": 5903,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5865,
									"end": 5903,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5865,
									"end": 5903,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5807,
									"end": 5909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "tag",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "148"
								},
								{
									"begin": 6020,
									"end": 6024,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 5998,
									"end": 6025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "tag",
									"source": 14,
									"value": "148"
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5990,
									"end": 5996,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5986,
									"end": 6026,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6128,
									"end": 6134,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6116,
									"end": 6126,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6113,
									"end": 6135,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6092,
									"end": 6110,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6080,
									"end": 6090,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6077,
									"end": 6111,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 6074,
									"end": 6136,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "149"
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "150"
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 6139,
									"end": 6157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "tag",
									"source": 14,
									"value": "150"
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "tag",
									"source": 14,
									"value": "149"
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6179,
									"end": 6189,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 6175,
									"end": 6177,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 6168,
									"end": 6190,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5958,
									"end": 6196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5915,
									"end": 6196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "tag",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6236,
									"end": 6242,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "152"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 6263,
									"end": 6283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "tag",
									"source": 14,
									"value": "152"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6253,
									"end": 6283,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6253,
									"end": 6283,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "153"
								},
								{
									"begin": 6320,
									"end": 6324,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6312,
									"end": 6318,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 6292,
									"end": 6325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "tag",
									"source": 14,
									"value": "153"
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6202,
									"end": 6331,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "tag",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6399,
									"end": 6403,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6489,
									"end": 6507,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6478,
									"end": 6508,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "155"
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "156"
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 6511,
									"end": 6529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "tag",
									"source": 14,
									"value": "156"
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "tag",
									"source": 14,
									"value": "155"
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "157"
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 6549,
									"end": 6578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "tag",
									"source": 14,
									"value": "157"
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6541,
									"end": 6578,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6541,
									"end": 6578,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6633,
									"end": 6637,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6627,
									"end": 6631,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6623,
									"end": 6638,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6615,
									"end": 6638,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6615,
									"end": 6638,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6337,
									"end": 6645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "tag",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6732,
									"end": 6733,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "tag",
									"source": 14,
									"value": "159"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6756,
									"end": 6762,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6753,
									"end": 6754,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6750,
									"end": 6763,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "161"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6841,
									"end": 6842,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 6836,
									"end": 6839,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6832,
									"end": 6843,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6826,
									"end": 6844,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6822,
									"end": 6823,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6817,
									"end": 6820,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6813,
									"end": 6824,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6806,
									"end": 6845,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 6778,
									"end": 6780,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6775,
									"end": 6776,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6771,
									"end": 6781,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6766,
									"end": 6781,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6766,
									"end": 6781,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "159"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "tag",
									"source": 14,
									"value": "161"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6889,
									"end": 6890,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6880,
									"end": 6886,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6875,
									"end": 6878,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6871,
									"end": 6887,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6864,
									"end": 6891,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 6713,
									"end": 6897,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6651,
									"end": 6897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "tag",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6992,
									"end": 6997,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7017,
									"end": 7083,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "163"
								},
								{
									"begin": 7033,
									"end": 7082,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "164"
								},
								{
									"begin": 7075,
									"end": 7081,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7033,
									"end": 7082,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 7033,
									"end": 7082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7033,
									"end": 7082,
									"name": "tag",
									"source": 14,
									"value": "164"
								},
								{
									"begin": 7033,
									"end": 7082,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7017,
									"end": 7083,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 7017,
									"end": 7083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7017,
									"end": 7083,
									"name": "tag",
									"source": 14,
									"value": "163"
								},
								{
									"begin": 7017,
									"end": 7083,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7008,
									"end": 7083,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7008,
									"end": 7083,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7106,
									"end": 7112,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7099,
									"end": 7104,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7092,
									"end": 7113,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 7144,
									"end": 7148,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 7137,
									"end": 7142,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7133,
									"end": 7149,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7182,
									"end": 7185,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7173,
									"end": 7179,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7168,
									"end": 7171,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7164,
									"end": 7180,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7161,
									"end": 7186,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "165"
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 7189,
									"end": 7268,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "166"
								},
								{
									"begin": 7189,
									"end": 7268,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 7189,
									"end": 7268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7189,
									"end": 7268,
									"name": "tag",
									"source": 14,
									"value": "166"
								},
								{
									"begin": 7189,
									"end": 7268,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "tag",
									"source": 14,
									"value": "165"
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7279,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "167"
								},
								{
									"begin": 7324,
									"end": 7330,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7319,
									"end": 7322,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7314,
									"end": 7317,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 7279,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 7279,
									"end": 7331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7279,
									"end": 7331,
									"name": "tag",
									"source": 14,
									"value": "167"
								},
								{
									"begin": 7279,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6998,
									"end": 7337,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6903,
									"end": 7337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "tag",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7424,
									"end": 7429,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7473,
									"end": 7476,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7466,
									"end": 7470,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 7458,
									"end": 7464,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7454,
									"end": 7471,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7450,
									"end": 7477,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 7440,
									"end": 7562,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "169"
								},
								{
									"begin": 7440,
									"end": 7562,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 7481,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "170"
								},
								{
									"begin": 7481,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 7481,
									"end": 7560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7481,
									"end": 7560,
									"name": "tag",
									"source": 14,
									"value": "170"
								},
								{
									"begin": 7481,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7440,
									"end": 7562,
									"name": "tag",
									"source": 14,
									"value": "169"
								},
								{
									"begin": 7440,
									"end": 7562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7591,
									"end": 7597,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7585,
									"end": 7598,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 7616,
									"end": 7706,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "171"
								},
								{
									"begin": 7702,
									"end": 7705,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7694,
									"end": 7700,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7687,
									"end": 7691,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 7679,
									"end": 7685,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 7675,
									"end": 7692,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7616,
									"end": 7706,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 7616,
									"end": 7706,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7616,
									"end": 7706,
									"name": "tag",
									"source": 14,
									"value": "171"
								},
								{
									"begin": 7616,
									"end": 7706,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7607,
									"end": 7706,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7607,
									"end": 7706,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7430,
									"end": 7712,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7357,
									"end": 7712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7718,
									"end": 7844,
									"name": "tag",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 7718,
									"end": 7844,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7755,
									"end": 7762,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7795,
									"end": 7837,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7788,
									"end": 7793,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7784,
									"end": 7838,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 7773,
									"end": 7838,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7773,
									"end": 7838,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7718,
									"end": 7844,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7718,
									"end": 7844,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7718,
									"end": 7844,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7718,
									"end": 7844,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7850,
									"end": 7946,
									"name": "tag",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 7850,
									"end": 7946,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7916,
									"end": 7940,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "174"
								},
								{
									"begin": 7934,
									"end": 7939,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7916,
									"end": 7940,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 7916,
									"end": 7940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7916,
									"end": 7940,
									"name": "tag",
									"source": 14,
									"value": "174"
								},
								{
									"begin": 7916,
									"end": 7940,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7905,
									"end": 7940,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7905,
									"end": 7940,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7850,
									"end": 7946,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7850,
									"end": 7946,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7850,
									"end": 7946,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7850,
									"end": 7946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7952,
									"end": 8074,
									"name": "tag",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 7952,
									"end": 8074,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8025,
									"end": 8049,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "176"
								},
								{
									"begin": 8043,
									"end": 8048,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8025,
									"end": 8049,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 8025,
									"end": 8049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8025,
									"end": 8049,
									"name": "tag",
									"source": 14,
									"value": "176"
								},
								{
									"begin": 8025,
									"end": 8049,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8018,
									"end": 8023,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8015,
									"end": 8050,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 8005,
									"end": 8068,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "177"
								},
								{
									"begin": 8005,
									"end": 8068,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8064,
									"end": 8065,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8061,
									"end": 8062,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 8054,
									"end": 8066,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 8005,
									"end": 8068,
									"name": "tag",
									"source": 14,
									"value": "177"
								},
								{
									"begin": 8005,
									"end": 8068,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7952,
									"end": 8074,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7952,
									"end": 8074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8080,
									"end": 8223,
									"name": "tag",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 8080,
									"end": 8223,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8137,
									"end": 8142,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8168,
									"end": 8174,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8162,
									"end": 8175,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8153,
									"end": 8175,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8153,
									"end": 8175,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8184,
									"end": 8217,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "179"
								},
								{
									"begin": 8211,
									"end": 8216,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8184,
									"end": 8217,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 8184,
									"end": 8217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8184,
									"end": 8217,
									"name": "tag",
									"source": 14,
									"value": "179"
								},
								{
									"begin": 8184,
									"end": 8217,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8080,
									"end": 8223,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 8080,
									"end": 8223,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 8080,
									"end": 8223,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8080,
									"end": 8223,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8080,
									"end": 8223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8229,
									"end": 8909,
									"name": "tag",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 8229,
									"end": 8909,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8318,
									"end": 8324,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8326,
									"end": 8332,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 8375,
									"end": 8377,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 8363,
									"end": 8372,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8354,
									"end": 8361,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 8350,
									"end": 8373,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 8346,
									"end": 8378,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 8343,
									"end": 8462,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 8343,
									"end": 8462,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "181"
								},
								{
									"begin": 8343,
									"end": 8462,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8381,
									"end": 8460,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "182"
								},
								{
									"begin": 8381,
									"end": 8460,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 8381,
									"end": 8460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8381,
									"end": 8460,
									"name": "tag",
									"source": 14,
									"value": "182"
								},
								{
									"begin": 8381,
									"end": 8460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8343,
									"end": 8462,
									"name": "tag",
									"source": 14,
									"value": "181"
								},
								{
									"begin": 8343,
									"end": 8462,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8522,
									"end": 8523,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8511,
									"end": 8520,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8507,
									"end": 8524,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8501,
									"end": 8525,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8552,
									"end": 8570,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8544,
									"end": 8550,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8541,
									"end": 8571,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 8538,
									"end": 8655,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 8538,
									"end": 8655,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "183"
								},
								{
									"begin": 8538,
									"end": 8655,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8574,
									"end": 8653,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "184"
								},
								{
									"begin": 8574,
									"end": 8653,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 8574,
									"end": 8653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8574,
									"end": 8653,
									"name": "tag",
									"source": 14,
									"value": "184"
								},
								{
									"begin": 8574,
									"end": 8653,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8538,
									"end": 8655,
									"name": "tag",
									"source": 14,
									"value": "183"
								},
								{
									"begin": 8538,
									"end": 8655,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8679,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "185"
								},
								{
									"begin": 8745,
									"end": 8752,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 8736,
									"end": 8742,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8725,
									"end": 8734,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 8721,
									"end": 8743,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8679,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 8679,
									"end": 8753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8679,
									"end": 8753,
									"name": "tag",
									"source": 14,
									"value": "185"
								},
								{
									"begin": 8679,
									"end": 8753,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8669,
									"end": 8753,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 8669,
									"end": 8753,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8472,
									"end": 8763,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8802,
									"end": 8804,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8828,
									"end": 8892,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "186"
								},
								{
									"begin": 8884,
									"end": 8891,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 8875,
									"end": 8881,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8864,
									"end": 8873,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 8860,
									"end": 8882,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8828,
									"end": 8892,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 8828,
									"end": 8892,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8828,
									"end": 8892,
									"name": "tag",
									"source": 14,
									"value": "186"
								},
								{
									"begin": 8828,
									"end": 8892,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8818,
									"end": 8892,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 8818,
									"end": 8892,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8773,
									"end": 8902,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8229,
									"end": 8909,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 8229,
									"end": 8909,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8229,
									"end": 8909,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 8229,
									"end": 8909,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8229,
									"end": 8909,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8229,
									"end": 8909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8915,
									"end": 9033,
									"name": "tag",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 8915,
									"end": 9033,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9002,
									"end": 9026,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "188"
								},
								{
									"begin": 9020,
									"end": 9025,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 9002,
									"end": 9026,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 9002,
									"end": 9026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9002,
									"end": 9026,
									"name": "tag",
									"source": 14,
									"value": "188"
								},
								{
									"begin": 9002,
									"end": 9026,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8997,
									"end": 9000,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8990,
									"end": 9027,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 8915,
									"end": 9033,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8915,
									"end": 9033,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8915,
									"end": 9033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9039,
									"end": 9261,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 9039,
									"end": 9261,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9132,
									"end": 9136,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 9170,
									"end": 9172,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 9159,
									"end": 9168,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9155,
									"end": 9173,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9147,
									"end": 9173,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 9147,
									"end": 9173,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9183,
									"end": 9254,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "190"
								},
								{
									"begin": 9251,
									"end": 9252,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 9240,
									"end": 9249,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 9236,
									"end": 9253,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9227,
									"end": 9233,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 9183,
									"end": 9254,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 9183,
									"end": 9254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9183,
									"end": 9254,
									"name": "tag",
									"source": 14,
									"value": "190"
								},
								{
									"begin": 9183,
									"end": 9254,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9039,
									"end": 9261,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 9039,
									"end": 9261,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 9039,
									"end": 9261,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9039,
									"end": 9261,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9039,
									"end": 9261,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9267,
									"end": 9436,
									"name": "tag",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 9267,
									"end": 9436,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9351,
									"end": 9362,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 9385,
									"end": 9391,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9380,
									"end": 9383,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9373,
									"end": 9392,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 9425,
									"end": 9429,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 9420,
									"end": 9423,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9416,
									"end": 9430,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9401,
									"end": 9430,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 9401,
									"end": 9430,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9267,
									"end": 9436,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 9267,
									"end": 9436,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 9267,
									"end": 9436,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9267,
									"end": 9436,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9267,
									"end": 9436,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9442,
									"end": 9607,
									"name": "tag",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 9442,
									"end": 9607,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9582,
									"end": 9599,
									"name": "PUSH",
									"source": 14,
									"value": "496E76616C696420616464726573730000000000000000000000000000000000"
								},
								{
									"begin": 9578,
									"end": 9579,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 9570,
									"end": 9576,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9566,
									"end": 9580,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9559,
									"end": 9600,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 9442,
									"end": 9607,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9442,
									"end": 9607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9613,
									"end": 9979,
									"name": "tag",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 9613,
									"end": 9979,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9755,
									"end": 9758,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 9776,
									"end": 9843,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "194"
								},
								{
									"begin": 9840,
									"end": 9842,
									"name": "PUSH",
									"source": 14,
									"value": "F"
								},
								{
									"begin": 9835,
									"end": 9838,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 9776,
									"end": 9843,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 9776,
									"end": 9843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9776,
									"end": 9843,
									"name": "tag",
									"source": 14,
									"value": "194"
								},
								{
									"begin": 9776,
									"end": 9843,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9769,
									"end": 9843,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 9769,
									"end": 9843,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9852,
									"end": 9945,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "195"
								},
								{
									"begin": 9941,
									"end": 9944,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9852,
									"end": 9945,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 9852,
									"end": 9945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9852,
									"end": 9945,
									"name": "tag",
									"source": 14,
									"value": "195"
								},
								{
									"begin": 9852,
									"end": 9945,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9970,
									"end": 9972,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 9965,
									"end": 9968,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9961,
									"end": 9973,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9954,
									"end": 9973,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 9954,
									"end": 9973,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9613,
									"end": 9979,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 9613,
									"end": 9979,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 9613,
									"end": 9979,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9613,
									"end": 9979,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9985,
									"end": 10404,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 9985,
									"end": 10404,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 10151,
									"end": 10155,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 10189,
									"end": 10191,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 10178,
									"end": 10187,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 10174,
									"end": 10192,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 10166,
									"end": 10192,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 10166,
									"end": 10192,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 10238,
									"end": 10247,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 10232,
									"end": 10236,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 10228,
									"end": 10248,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 10224,
									"end": 10225,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 10213,
									"end": 10222,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 10209,
									"end": 10226,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 10202,
									"end": 10249,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 10266,
									"end": 10397,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "197"
								},
								{
									"begin": 10392,
									"end": 10396,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 10266,
									"end": 10397,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 10266,
									"end": 10397,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 10266,
									"end": 10397,
									"name": "tag",
									"source": 14,
									"value": "197"
								},
								{
									"begin": 10266,
									"end": 10397,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 10258,
									"end": 10397,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 10258,
									"end": 10397,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9985,
									"end": 10404,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 9985,
									"end": 10404,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 9985,
									"end": 10404,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9985,
									"end": 10404,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 3221,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204518b542256653e2823304d81d9c9d36f7d9f5ac04603b37c51489212cc52fc264736f6c63430008160033",
									".code": [
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "7065CB48"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "A22CB465"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "A22CB465"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "B88D4FDE"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "C87B56DD"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "C8B7EC3D"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "E985E9C5"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "7065CB48"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "8F96A7CB"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "173825D9"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "173825D9"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "3CCFD60B"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "42842E0E"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "55F804B3"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "6352211E"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "6FDDE03"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "81812FC"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "1249C58B"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 229,
											"end": 3221,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1350,
											"end": 1708,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1350,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1350,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1350,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1708,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1350,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1708,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 2492,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 2492,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3218,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 3112,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 3112,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3112,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3218,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 3112,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3218,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 2071,
											"end": 2174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2071,
											"end": 2174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1757,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1757,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1757,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 2761,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 2761,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2761,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1350,
											"end": 1708,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1350,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "PUSH",
											"source": 13,
											"value": "D"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1011,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1037,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 983,
											"end": 1037,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1030,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1037,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 1030,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1037,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1016,
											"end": 1037,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1037,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1016,
											"end": 1037,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1037,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1037,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 983,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 975,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 975,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1443,
											"end": 1453,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 1415,
											"end": 1430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1415,
											"end": 1438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 1415,
											"end": 1440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 1415,
											"end": 1440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1453,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 1407,
											"end": 1480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 1407,
											"end": 1480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1509,
											"end": 1534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 1509,
											"end": 1524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1509,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 1509,
											"end": 1534,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1509,
											"end": 1534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 1509,
											"end": 1534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1509,
											"end": 1538,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 1538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 1538,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1559,
											"end": 1569,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1571,
											"end": 1578,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 1549,
											"end": 1579,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1579,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1549,
											"end": 1579,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1615,
											"end": 1619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1590,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "C"
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1611,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1619,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 1630,
											"end": 1645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1630,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 1630,
											"end": 1657,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1657,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 1630,
											"end": 1657,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1680,
											"end": 1690,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE"
										},
										{
											"begin": 1692,
											"end": 1699,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1673,
											"end": 1700,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 1396,
											"end": 1708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 2591,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2591,
											"end": 2598,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2591,
											"end": 2598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 2591,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2598,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2598,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2598,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2566,
											"end": 2631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 2566,
											"end": 2631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2677,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "D"
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2673,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3218,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3112,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 3170,
											"end": 3175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 3170,
											"end": 3177,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 3170,
											"end": 3177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8FC"
										},
										{
											"begin": 3188,
											"end": 3209,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3210,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2026,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 1998,
											"end": 2026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2026,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2026,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1998,
											"end": 2026,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2026,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 1998,
											"end": 2026,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2026,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1998,
											"end": 2026,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2026,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 2157,
											"end": 2165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 2137,
											"end": 2166,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 2137,
											"end": 2166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1857,
											"name": "PUSH",
											"source": 13,
											"value": "C"
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1865,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1844,
											"end": 1866,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2828,
											"end": 2832,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2869,
											"name": "PUSH",
											"source": 13,
											"value": "D"
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2877,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2845,
											"end": 2878,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2845,
											"end": 2878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2402,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 2232,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2327,
											"end": 2328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2329,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2307,
											"end": 2329,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2307,
											"end": 2315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2307,
											"end": 2329,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2307,
											"end": 2329,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2307,
											"end": 2329,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 2299,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 2299,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2390,
											"end": 2394,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2360,
											"end": 2377,
											"name": "PUSH",
											"source": 13,
											"value": "D"
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2386,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2232,
											"end": 2402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2232,
											"end": 2402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 3051,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 2945,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3010,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3030,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3023,
											"end": 3043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3023,
											"end": 3043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2945,
											"end": 3051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2945,
											"end": 3051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 8,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 11,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 11,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4949,
											"end": 4955,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5000,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4986,
											"end": 4995,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4977,
											"end": 4984,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4973,
											"end": 4996,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4969,
											"end": 5001,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 5004,
											"end": 5083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5124,
											"end": 5125,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 5194,
											"end": 5201,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5185,
											"end": 5191,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5174,
											"end": 5183,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5170,
											"end": 5192,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 5149,
											"end": 5202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5139,
											"end": 5202,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5139,
											"end": 5202,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5212,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5302,
											"end": 5308,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5316,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5355,
											"end": 5364,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5346,
											"end": 5353,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5342,
											"end": 5365,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5338,
											"end": 5370,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 5373,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 5373,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 5452,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 5373,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5493,
											"end": 5494,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 5563,
											"end": 5570,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5554,
											"end": 5560,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5543,
											"end": 5552,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5539,
											"end": 5561,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 5518,
											"end": 5571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "tag",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5508,
											"end": 5571,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5508,
											"end": 5571,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5464,
											"end": 5581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5620,
											"end": 5622,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 5691,
											"end": 5698,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5682,
											"end": 5688,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5671,
											"end": 5680,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5667,
											"end": 5689,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 5646,
											"end": 5699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5591,
											"end": 5709,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5748,
											"end": 5750,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5837,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5850,
											"end": 5967,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 5850,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5959,
											"end": 5960,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5949,
											"end": 5961,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5973,
											"end": 6090,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 5973,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6072,
											"end": 6084,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6096,
											"end": 6276,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 6096,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6144,
											"end": 6221,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6141,
											"end": 6142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6222,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6245,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 6238,
											"end": 6239,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6231,
											"end": 6246,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6265,
											"end": 6269,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6262,
											"end": 6263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6255,
											"end": 6270,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6563,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 6282,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6365,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 6387,
											"end": 6391,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6365,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 6365,
											"end": 6392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6365,
											"end": 6392,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 6365,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6357,
											"end": 6363,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6353,
											"end": 6393,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6495,
											"end": 6501,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6480,
											"end": 6502,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6477,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6447,
											"end": 6457,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6444,
											"end": 6478,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6441,
											"end": 6503,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 6438,
											"end": 6526,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6438,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 6438,
											"end": 6526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 6506,
											"end": 6524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6438,
											"end": 6526,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 6438,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6546,
											"end": 6556,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6542,
											"end": 6544,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6535,
											"end": 6557,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6563,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6563,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6563,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6569,
											"end": 6698,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 6569,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6603,
											"end": 6609,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 6630,
											"end": 6650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6620,
											"end": 6650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6620,
											"end": 6650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6659,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6659,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 6659,
											"end": 6692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6659,
											"end": 6692,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 6659,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6569,
											"end": 6698,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6569,
											"end": 6698,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6569,
											"end": 6698,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6569,
											"end": 6698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6704,
											"end": 7012,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 6704,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6766,
											"end": 6770,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6856,
											"end": 6874,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6848,
											"end": 6854,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6845,
											"end": 6875,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6842,
											"end": 6898,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6842,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 6842,
											"end": 6898,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 6878,
											"end": 6896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6842,
											"end": 6898,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 6842,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6916,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6916,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 6916,
											"end": 6945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6916,
											"end": 6945,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 6916,
											"end": 6945,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6908,
											"end": 6945,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6908,
											"end": 6945,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7000,
											"end": 7004,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6994,
											"end": 6998,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6990,
											"end": 7005,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6982,
											"end": 7005,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6982,
											"end": 7005,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6704,
											"end": 7012,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6704,
											"end": 7012,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6704,
											"end": 7012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6704,
											"end": 7012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7018,
											"end": 7164,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 7018,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7115,
											"end": 7121,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7110,
											"end": 7113,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7105,
											"end": 7108,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7092,
											"end": 7122,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 7156,
											"end": 7157,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7147,
											"end": 7153,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7142,
											"end": 7145,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7138,
											"end": 7154,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7131,
											"end": 7158,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7018,
											"end": 7164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7018,
											"end": 7164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7018,
											"end": 7164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7018,
											"end": 7164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7248,
											"end": 7253,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 7289,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 7331,
											"end": 7337,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7289,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 7289,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7289,
											"end": 7338,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 7289,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7273,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 7273,
											"end": 7339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7273,
											"end": 7339,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 7273,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7264,
											"end": 7339,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7264,
											"end": 7339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7362,
											"end": 7368,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7355,
											"end": 7360,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7393,
											"end": 7398,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7405,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7438,
											"end": 7441,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7424,
											"end": 7427,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7420,
											"end": 7436,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7414,
											"end": 7526,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7414,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 7414,
											"end": 7526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 7445,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 7445,
											"end": 7524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7524,
											"name": "tag",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 7445,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7414,
											"end": 7526,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 7414,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7535,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7577,
											"end": 7580,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7572,
											"end": 7575,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7535,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 7535,
											"end": 7589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7535,
											"end": 7589,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 7535,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7254,
											"end": 7595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7615,
											"end": 7955,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 7615,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7671,
											"end": 7676,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7720,
											"end": 7723,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7713,
											"end": 7717,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7705,
											"end": 7711,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7697,
											"end": 7724,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7687,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 7687,
											"end": 7809,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7728,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 7728,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 7728,
											"end": 7807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7728,
											"end": 7807,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 7728,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7687,
											"end": 7809,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 7687,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7832,
											"end": 7852,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7870,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 7945,
											"end": 7948,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7930,
											"end": 7934,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7922,
											"end": 7928,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7870,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 7870,
											"end": 7949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7870,
											"end": 7949,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 7870,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7861,
											"end": 7949,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7861,
											"end": 7949,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7677,
											"end": 7955,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7615,
											"end": 7955,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7615,
											"end": 7955,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7615,
											"end": 7955,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7615,
											"end": 7955,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7615,
											"end": 7955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7961,
											"end": 8470,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 7961,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8030,
											"end": 8036,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8067,
											"end": 8076,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8058,
											"end": 8065,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8054,
											"end": 8077,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8050,
											"end": 8082,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8166,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 8047,
											"end": 8166,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8085,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 8085,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 8085,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8085,
											"end": 8164,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 8085,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8166,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 8047,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8233,
											"end": 8234,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8222,
											"end": 8231,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8218,
											"end": 8235,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8205,
											"end": 8236,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8255,
											"end": 8261,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8252,
											"end": 8282,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8249,
											"end": 8366,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8249,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 8249,
											"end": 8366,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 8285,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 8285,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8364,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 8285,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8249,
											"end": 8366,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 8249,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8390,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 8445,
											"end": 8452,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8436,
											"end": 8442,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8425,
											"end": 8434,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8421,
											"end": 8443,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8390,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 8390,
											"end": 8453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8390,
											"end": 8453,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 8390,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8380,
											"end": 8453,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8380,
											"end": 8453,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8176,
											"end": 8463,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7961,
											"end": 8470,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7961,
											"end": 8470,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7961,
											"end": 8470,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7961,
											"end": 8470,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7961,
											"end": 8470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8476,
											"end": 8594,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 8476,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8563,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 8581,
											"end": 8586,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8563,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 8563,
											"end": 8587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8563,
											"end": 8587,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 8563,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8558,
											"end": 8561,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8551,
											"end": 8588,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8476,
											"end": 8594,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8476,
											"end": 8594,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8476,
											"end": 8594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8600,
											"end": 8822,
											"name": "tag",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 8600,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8693,
											"end": 8697,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8733,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8720,
											"end": 8729,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8716,
											"end": 8734,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8708,
											"end": 8734,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8708,
											"end": 8734,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 8812,
											"end": 8813,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8801,
											"end": 8810,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8797,
											"end": 8814,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 8744,
											"end": 8815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8744,
											"end": 8815,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 8744,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8600,
											"end": 8822,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8600,
											"end": 8822,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8600,
											"end": 8822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8600,
											"end": 8822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8600,
											"end": 8822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8828,
											"end": 8944,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 8828,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8898,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 8913,
											"end": 8918,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8898,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 8898,
											"end": 8919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8898,
											"end": 8919,
											"name": "tag",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 8898,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8891,
											"end": 8896,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8888,
											"end": 8920,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 8878,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 8878,
											"end": 8938,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8934,
											"end": 8935,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8932,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8924,
											"end": 8936,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8878,
											"end": 8938,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 8878,
											"end": 8938,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8828,
											"end": 8944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8828,
											"end": 8944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8993,
											"end": 8998,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9037,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9018,
											"end": 9038,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 9071,
											"end": 9076,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 9047,
											"end": 9077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8950,
											"end": 9083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9154,
											"end": 9160,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9168,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9211,
											"end": 9213,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9199,
											"end": 9208,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9190,
											"end": 9197,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9186,
											"end": 9209,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9182,
											"end": 9214,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 9532,
											"end": 9539,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9523,
											"end": 9529,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9512,
											"end": 9521,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9508,
											"end": 9530,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9490,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 9490,
											"end": 9540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9490,
											"end": 9540,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 9490,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9480,
											"end": 9540,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9480,
											"end": 9540,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9435,
											"end": 9550,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9089,
											"end": 9557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9714,
											"end": 9732,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9706,
											"end": 9712,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9703,
											"end": 9733,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9736,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 9736,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 9736,
											"end": 9754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9736,
											"end": 9754,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 9736,
											"end": 9754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9774,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 9796,
											"end": 9802,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9774,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 9774,
											"end": 9803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9774,
											"end": 9803,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 9774,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9766,
											"end": 9803,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9766,
											"end": 9803,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9858,
											"end": 9862,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9852,
											"end": 9856,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9848,
											"end": 9863,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9563,
											"end": 9870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9953,
											"end": 9958,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9978,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 10035,
											"end": 10041,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 9994,
											"end": 10042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9978,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 9978,
											"end": 10043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9978,
											"end": 10043,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 9978,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9969,
											"end": 10043,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9969,
											"end": 10043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10059,
											"end": 10064,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10073,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10108,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10097,
											"end": 10102,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10093,
											"end": 10109,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10142,
											"end": 10145,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10133,
											"end": 10139,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10128,
											"end": 10131,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10124,
											"end": 10140,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10121,
											"end": 10146,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10149,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 10149,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 10149,
											"end": 10228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10149,
											"end": 10228,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 10149,
											"end": 10228,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10239,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 10286,
											"end": 10292,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10281,
											"end": 10284,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10276,
											"end": 10279,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10239,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 10239,
											"end": 10293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10239,
											"end": 10293,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 10239,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9959,
											"end": 10299,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9876,
											"end": 10299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10373,
											"end": 10378,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10422,
											"end": 10425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10415,
											"end": 10419,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 10407,
											"end": 10413,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10403,
											"end": 10420,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10389,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 10389,
											"end": 10511,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 10430,
											"end": 10509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "tag",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10389,
											"end": 10511,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 10389,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10547,
											"end": 10553,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10554,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10572,
											"end": 10650,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 10646,
											"end": 10649,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10638,
											"end": 10644,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10631,
											"end": 10635,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10623,
											"end": 10629,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10619,
											"end": 10636,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10572,
											"end": 10650,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 10572,
											"end": 10650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10572,
											"end": 10650,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 10572,
											"end": 10650,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10563,
											"end": 10650,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10563,
											"end": 10650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10379,
											"end": 10656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10318,
											"end": 10656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "tag",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10771,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10773,
											"end": 10779,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10787,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10830,
											"end": 10833,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10818,
											"end": 10827,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10809,
											"end": 10816,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10805,
											"end": 10828,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10801,
											"end": 10834,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10837,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 10837,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 10837,
											"end": 10916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10837,
											"end": 10916,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 10837,
											"end": 10916,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10957,
											"end": 10958,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10982,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 11027,
											"end": 11034,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11018,
											"end": 11024,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11007,
											"end": 11016,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11003,
											"end": 11025,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10982,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 10982,
											"end": 11035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10982,
											"end": 11035,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 10982,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10972,
											"end": 11035,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10972,
											"end": 11035,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10928,
											"end": 11045,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11084,
											"end": 11086,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 11155,
											"end": 11162,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11146,
											"end": 11152,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11135,
											"end": 11144,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11131,
											"end": 11153,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 11110,
											"end": 11163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11100,
											"end": 11163,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11100,
											"end": 11163,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11055,
											"end": 11173,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11212,
											"end": 11214,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 11283,
											"end": 11290,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11274,
											"end": 11280,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11263,
											"end": 11272,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11259,
											"end": 11281,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 11238,
											"end": 11291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11228,
											"end": 11291,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11228,
											"end": 11291,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11183,
											"end": 11301,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11368,
											"end": 11370,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11357,
											"end": 11366,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11353,
											"end": 11371,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11340,
											"end": 11372,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 11399,
											"end": 11417,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11391,
											"end": 11397,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11388,
											"end": 11418,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11421,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 11421,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 11421,
											"end": 11500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11421,
											"end": 11500,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 11421,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11526,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 11580,
											"end": 11587,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11571,
											"end": 11577,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11560,
											"end": 11569,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11556,
											"end": 11578,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11526,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 11526,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11526,
											"end": 11588,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 11526,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11516,
											"end": 11588,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11516,
											"end": 11588,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11311,
											"end": 11598,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10662,
											"end": 11605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11679,
											"end": 11685,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11687,
											"end": 11693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11724,
											"end": 11733,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11715,
											"end": 11722,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11711,
											"end": 11734,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11707,
											"end": 11739,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 11742,
											"end": 11821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11862,
											"end": 11863,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 11932,
											"end": 11939,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11923,
											"end": 11929,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11912,
											"end": 11921,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11908,
											"end": 11930,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 11887,
											"end": 11940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11877,
											"end": 11940,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11877,
											"end": 11940,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11833,
											"end": 11950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11989,
											"end": 11991,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 12060,
											"end": 12067,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12051,
											"end": 12057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12040,
											"end": 12049,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12036,
											"end": 12058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 12015,
											"end": 12068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "tag",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12005,
											"end": 12068,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12005,
											"end": 12068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11960,
											"end": 12078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11611,
											"end": 12085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12091,
											"end": 12271,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 12091,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12139,
											"end": 12216,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12136,
											"end": 12137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12129,
											"end": 12217,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12236,
											"end": 12240,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 12233,
											"end": 12234,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12226,
											"end": 12241,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12260,
											"end": 12264,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12257,
											"end": 12258,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12250,
											"end": 12265,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12321,
											"end": 12327,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12359,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 12352,
											"end": 12356,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12348,
											"end": 12360,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12338,
											"end": 12360,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12338,
											"end": 12360,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12405,
											"end": 12406,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12399,
											"end": 12403,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12395,
											"end": 12407,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12482,
											"end": 12486,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 12474,
											"end": 12480,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12470,
											"end": 12487,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12460,
											"end": 12487,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12460,
											"end": 12487,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "tag",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12544,
											"end": 12546,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12536,
											"end": 12542,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12533,
											"end": 12547,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12513,
											"end": 12531,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12510,
											"end": 12548,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 12563,
											"end": 12581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "tag",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12328,
											"end": 12597,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12277,
											"end": 12597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12603,
											"end": 12776,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 12603,
											"end": 12776,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12743,
											"end": 12768,
											"name": "PUSH",
											"source": 14,
											"value": "4E6F7420616E206164646974696F6E616C206F776E6572000000000000000000"
										},
										{
											"begin": 12739,
											"end": 12740,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12731,
											"end": 12737,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12727,
											"end": 12741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12720,
											"end": 12769,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12603,
											"end": 12776,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12603,
											"end": 12776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12782,
											"end": 13148,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 12782,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12924,
											"end": 12927,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12945,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 13009,
											"end": 13011,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 13004,
											"end": 13007,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12945,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 12945,
											"end": 13012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12945,
											"end": 13012,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 12945,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12938,
											"end": 13012,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12938,
											"end": 13012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13021,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 13110,
											"end": 13113,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13021,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 13021,
											"end": 13114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13021,
											"end": 13114,
											"name": "tag",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 13021,
											"end": 13114,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13139,
											"end": 13141,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13134,
											"end": 13137,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13130,
											"end": 13142,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13123,
											"end": 13142,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13123,
											"end": 13142,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12782,
											"end": 13148,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12782,
											"end": 13148,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12782,
											"end": 13148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12782,
											"end": 13148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13154,
											"end": 13573,
											"name": "tag",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 13154,
											"end": 13573,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13320,
											"end": 13324,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13358,
											"end": 13360,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13347,
											"end": 13356,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13335,
											"end": 13361,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13335,
											"end": 13361,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13407,
											"end": 13416,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13401,
											"end": 13405,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13397,
											"end": 13417,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13393,
											"end": 13394,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13382,
											"end": 13391,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13378,
											"end": 13395,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13371,
											"end": 13418,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13435,
											"end": 13566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 13561,
											"end": 13565,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13435,
											"end": 13566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 13435,
											"end": 13566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13435,
											"end": 13566,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 13435,
											"end": 13566,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13427,
											"end": 13566,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13427,
											"end": 13566,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13154,
											"end": 13573,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13154,
											"end": 13573,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13154,
											"end": 13573,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13154,
											"end": 13573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13579,
											"end": 13751,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 13579,
											"end": 13751,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13719,
											"end": 13743,
											"name": "PUSH",
											"source": 14,
											"value": "4D6178696D756D20737570706C79207265616368656400000000000000000000"
										},
										{
											"begin": 13715,
											"end": 13716,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13707,
											"end": 13713,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13703,
											"end": 13717,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13696,
											"end": 13744,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13579,
											"end": 13751,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13579,
											"end": 13751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13757,
											"end": 14123,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 13757,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13899,
											"end": 13902,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13920,
											"end": 13987,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 13984,
											"end": 13986,
											"name": "PUSH",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 13979,
											"end": 13982,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13920,
											"end": 13987,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 13920,
											"end": 13987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13920,
											"end": 13987,
											"name": "tag",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 13920,
											"end": 13987,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13913,
											"end": 13987,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13913,
											"end": 13987,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13996,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 14085,
											"end": 14088,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13996,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 13996,
											"end": 14089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13996,
											"end": 14089,
											"name": "tag",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 13996,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14114,
											"end": 14116,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14109,
											"end": 14112,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14105,
											"end": 14117,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14098,
											"end": 14117,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14098,
											"end": 14117,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13757,
											"end": 14123,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13757,
											"end": 14123,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13757,
											"end": 14123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13757,
											"end": 14123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14129,
											"end": 14548,
											"name": "tag",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 14129,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14295,
											"end": 14299,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14333,
											"end": 14335,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14322,
											"end": 14331,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14310,
											"end": 14336,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14310,
											"end": 14336,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14382,
											"end": 14391,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14376,
											"end": 14380,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14372,
											"end": 14392,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14368,
											"end": 14369,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14357,
											"end": 14366,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14353,
											"end": 14370,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14346,
											"end": 14393,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14410,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 14536,
											"end": 14540,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14410,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 14410,
											"end": 14541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14410,
											"end": 14541,
											"name": "tag",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 14410,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14402,
											"end": 14541,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14402,
											"end": 14541,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14129,
											"end": 14548,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14129,
											"end": 14548,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14129,
											"end": 14548,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14129,
											"end": 14548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14554,
											"end": 14734,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 14554,
											"end": 14734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14602,
											"end": 14679,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14599,
											"end": 14600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14592,
											"end": 14680,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14699,
											"end": 14703,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 14696,
											"end": 14697,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 14689,
											"end": 14704,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14723,
											"end": 14727,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 14720,
											"end": 14721,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14713,
											"end": 14728,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14740,
											"end": 14931,
											"name": "tag",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 14740,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14780,
											"end": 14783,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14799,
											"end": 14819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 14817,
											"end": 14818,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14799,
											"end": 14819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 14799,
											"end": 14819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14799,
											"end": 14819,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 14799,
											"end": 14819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14794,
											"end": 14819,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14794,
											"end": 14819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14833,
											"end": 14853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 14851,
											"end": 14852,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14833,
											"end": 14853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 14833,
											"end": 14853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14833,
											"end": 14853,
											"name": "tag",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 14833,
											"end": 14853,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14828,
											"end": 14853,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14828,
											"end": 14853,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14876,
											"end": 14877,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14873,
											"end": 14874,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14869,
											"end": 14878,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14862,
											"end": 14878,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14862,
											"end": 14878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14897,
											"end": 14900,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14894,
											"end": 14895,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14891,
											"end": 14901,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14888,
											"end": 14924,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14888,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 14888,
											"end": 14924,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 14904,
											"end": 14922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14888,
											"end": 14924,
											"name": "tag",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 14888,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14740,
											"end": 14931,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14740,
											"end": 14931,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14740,
											"end": 14931,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14740,
											"end": 14931,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14740,
											"end": 14931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14937,
											"end": 15115,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 14937,
											"end": 15115,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15077,
											"end": 15107,
											"name": "PUSH",
											"source": 14,
											"value": "43616E6E6F742072656D6F766520636F6E7472616374206F776E657200000000"
										},
										{
											"begin": 15073,
											"end": 15074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15065,
											"end": 15071,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15061,
											"end": 15075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15054,
											"end": 15108,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14937,
											"end": 15115,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14937,
											"end": 15115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15121,
											"end": 15487,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 15121,
											"end": 15487,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15263,
											"end": 15266,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15284,
											"end": 15351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 15348,
											"end": 15350,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 15343,
											"end": 15346,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15284,
											"end": 15351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 15284,
											"end": 15351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15284,
											"end": 15351,
											"name": "tag",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 15284,
											"end": 15351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15277,
											"end": 15351,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15277,
											"end": 15351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15360,
											"end": 15453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 15449,
											"end": 15452,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15360,
											"end": 15453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 15360,
											"end": 15453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15360,
											"end": 15453,
											"name": "tag",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 15360,
											"end": 15453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15478,
											"end": 15480,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15473,
											"end": 15476,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15469,
											"end": 15481,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15462,
											"end": 15481,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15462,
											"end": 15481,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15121,
											"end": 15487,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15121,
											"end": 15487,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15121,
											"end": 15487,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15121,
											"end": 15487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15493,
											"end": 15912,
											"name": "tag",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 15493,
											"end": 15912,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15659,
											"end": 15663,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15697,
											"end": 15699,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15686,
											"end": 15695,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15682,
											"end": 15700,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15674,
											"end": 15700,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15674,
											"end": 15700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15746,
											"end": 15755,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15740,
											"end": 15744,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15736,
											"end": 15756,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15732,
											"end": 15733,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15721,
											"end": 15730,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15717,
											"end": 15734,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15710,
											"end": 15757,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15774,
											"end": 15905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 15900,
											"end": 15904,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15774,
											"end": 15905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 15774,
											"end": 15905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15774,
											"end": 15905,
											"name": "tag",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 15774,
											"end": 15905,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15766,
											"end": 15905,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15766,
											"end": 15905,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15493,
											"end": 15912,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15493,
											"end": 15912,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15493,
											"end": 15912,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15493,
											"end": 15912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15918,
											"end": 16360,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 15918,
											"end": 16360,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16067,
											"end": 16071,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16105,
											"end": 16107,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 16094,
											"end": 16103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16090,
											"end": 16108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16082,
											"end": 16108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16082,
											"end": 16108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16118,
											"end": 16189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 16186,
											"end": 16187,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16175,
											"end": 16184,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16171,
											"end": 16188,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16118,
											"end": 16189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 16118,
											"end": 16189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16118,
											"end": 16189,
											"name": "tag",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 16118,
											"end": 16189,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16199,
											"end": 16271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 16267,
											"end": 16269,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16256,
											"end": 16265,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16252,
											"end": 16270,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16243,
											"end": 16249,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16199,
											"end": 16271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 16199,
											"end": 16271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16199,
											"end": 16271,
											"name": "tag",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 16199,
											"end": 16271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16281,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 16349,
											"end": 16351,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16338,
											"end": 16347,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16334,
											"end": 16352,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16325,
											"end": 16331,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16281,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 16281,
											"end": 16353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16281,
											"end": 16353,
											"name": "tag",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 16281,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15918,
											"end": 16360,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 15918,
											"end": 16360,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15918,
											"end": 16360,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15918,
											"end": 16360,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15918,
											"end": 16360,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15918,
											"end": 16360,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15918,
											"end": 16360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16366,
											"end": 16507,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 16366,
											"end": 16507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16415,
											"end": 16419,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16438,
											"end": 16441,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16430,
											"end": 16441,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16430,
											"end": 16441,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16461,
											"end": 16464,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16458,
											"end": 16459,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16451,
											"end": 16465,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16495,
											"end": 16499,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16492,
											"end": 16493,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16482,
											"end": 16500,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 16474,
											"end": 16500,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16474,
											"end": 16500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16366,
											"end": 16507,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16366,
											"end": 16507,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16366,
											"end": 16507,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16366,
											"end": 16507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16513,
											"end": 16606,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 16513,
											"end": 16606,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16550,
											"end": 16556,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16597,
											"end": 16599,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16592,
											"end": 16594,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 16585,
											"end": 16590,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16581,
											"end": 16595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16577,
											"end": 16600,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 16567,
											"end": 16600,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16567,
											"end": 16600,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16513,
											"end": 16606,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16513,
											"end": 16606,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16513,
											"end": 16606,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16513,
											"end": 16606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16612,
											"end": 16719,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 16612,
											"end": 16719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16656,
											"end": 16664,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16706,
											"end": 16711,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16700,
											"end": 16704,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16696,
											"end": 16712,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 16675,
											"end": 16712,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16675,
											"end": 16712,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16612,
											"end": 16719,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16612,
											"end": 16719,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16612,
											"end": 16719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16612,
											"end": 16719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16612,
											"end": 16719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16725,
											"end": 17118,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 16725,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16794,
											"end": 16800,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16844,
											"end": 16845,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 16832,
											"end": 16842,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16828,
											"end": 16846,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 16867,
											"end": 16964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 16897,
											"end": 16963,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16886,
											"end": 16895,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16867,
											"end": 16964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 16867,
											"end": 16964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16867,
											"end": 16964,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 16867,
											"end": 16964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16985,
											"end": 17024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 17015,
											"end": 17023,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17004,
											"end": 17013,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16985,
											"end": 17024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 16985,
											"end": 17024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16985,
											"end": 17024,
											"name": "tag",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 16985,
											"end": 17024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16973,
											"end": 17024,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 16973,
											"end": 17024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17057,
											"end": 17061,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17053,
											"end": 17062,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 17046,
											"end": 17051,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17042,
											"end": 17063,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 17033,
											"end": 17063,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 17033,
											"end": 17063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17106,
											"end": 17110,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17096,
											"end": 17104,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17092,
											"end": 17111,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 17085,
											"end": 17090,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17082,
											"end": 17112,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 17072,
											"end": 17112,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17072,
											"end": 17112,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16801,
											"end": 17118,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16801,
											"end": 17118,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16725,
											"end": 17118,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 16725,
											"end": 17118,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16725,
											"end": 17118,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16725,
											"end": 17118,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16725,
											"end": 17118,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16725,
											"end": 17118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17124,
											"end": 17184,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 17124,
											"end": 17184,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17152,
											"end": 17155,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17173,
											"end": 17178,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17166,
											"end": 17178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17166,
											"end": 17178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17124,
											"end": 17184,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17124,
											"end": 17184,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17124,
											"end": 17184,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17124,
											"end": 17184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17190,
											"end": 17332,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 17190,
											"end": 17332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17240,
											"end": 17249,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17273,
											"end": 17326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 17291,
											"end": 17325,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 17300,
											"end": 17324,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 17318,
											"end": 17323,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17300,
											"end": 17324,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 17300,
											"end": 17324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17300,
											"end": 17324,
											"name": "tag",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 17300,
											"end": 17324,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17291,
											"end": 17325,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 17291,
											"end": 17325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17291,
											"end": 17325,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 17291,
											"end": 17325,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17273,
											"end": 17326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 17273,
											"end": 17326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17273,
											"end": 17326,
											"name": "tag",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 17273,
											"end": 17326,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17260,
											"end": 17326,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17260,
											"end": 17326,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17190,
											"end": 17332,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17190,
											"end": 17332,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17190,
											"end": 17332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17190,
											"end": 17332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17338,
											"end": 17413,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 17338,
											"end": 17413,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17381,
											"end": 17384,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17407,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17395,
											"end": 17407,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17395,
											"end": 17407,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17338,
											"end": 17413,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17338,
											"end": 17413,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17338,
											"end": 17413,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17338,
											"end": 17413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17419,
											"end": 17688,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 17419,
											"end": 17688,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17529,
											"end": 17568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 17560,
											"end": 17567,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17529,
											"end": 17568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 17529,
											"end": 17568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17529,
											"end": 17568,
											"name": "tag",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 17529,
											"end": 17568,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17590,
											"end": 17681,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 17639,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 17663,
											"end": 17679,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17639,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 17639,
											"end": 17680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17639,
											"end": 17680,
											"name": "tag",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 17639,
											"end": 17680,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17631,
											"end": 17637,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17624,
											"end": 17628,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17618,
											"end": 17629,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 17590,
											"end": 17681,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 17590,
											"end": 17681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17590,
											"end": 17681,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 17590,
											"end": 17681,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17584,
											"end": 17588,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17577,
											"end": 17682,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 17495,
											"end": 17688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17419,
											"end": 17688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17419,
											"end": 17688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17419,
											"end": 17688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17419,
											"end": 17688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17694,
											"end": 17767,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 17694,
											"end": 17767,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17739,
											"end": 17742,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17694,
											"end": 17767,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17694,
											"end": 17767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17773,
											"end": 17962,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 17773,
											"end": 17962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17850,
											"end": 17882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 17850,
											"end": 17882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 17850,
											"end": 17882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17850,
											"end": 17882,
											"name": "tag",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 17850,
											"end": 17882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17891,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 17949,
											"end": 17955,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17941,
											"end": 17947,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17935,
											"end": 17939,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17891,
											"end": 17956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 17891,
											"end": 17956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17891,
											"end": 17956,
											"name": "tag",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 17891,
											"end": 17956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17826,
											"end": 17962,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17773,
											"end": 17962,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17773,
											"end": 17962,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17773,
											"end": 17962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17968,
											"end": 18154,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 17968,
											"end": 18154,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18028,
											"end": 18148,
											"name": "tag",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 18028,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18045,
											"end": 18048,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18038,
											"end": 18043,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18035,
											"end": 18049,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18028,
											"end": 18148,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18028,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 18028,
											"end": 18148,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18099,
											"end": 18138,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 18136,
											"end": 18137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18129,
											"end": 18134,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18099,
											"end": 18138,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 18099,
											"end": 18138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18099,
											"end": 18138,
											"name": "tag",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 18099,
											"end": 18138,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18072,
											"end": 18073,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18065,
											"end": 18070,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18061,
											"end": 18074,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18052,
											"end": 18074,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18052,
											"end": 18074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18028,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 18028,
											"end": 18148,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18028,
											"end": 18148,
											"name": "tag",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 18028,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17968,
											"end": 18154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17968,
											"end": 18154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17968,
											"end": 18154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18160,
											"end": 18703,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 18160,
											"end": 18703,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18261,
											"end": 18263,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 18256,
											"end": 18259,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18253,
											"end": 18264,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 18250,
											"end": 18696,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18250,
											"end": 18696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 18250,
											"end": 18696,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18295,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 18327,
											"end": 18332,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18295,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 18295,
											"end": 18333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18295,
											"end": 18333,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 18295,
											"end": 18333,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18379,
											"end": 18408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 18397,
											"end": 18407,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18379,
											"end": 18408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 18379,
											"end": 18408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18379,
											"end": 18408,
											"name": "tag",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 18379,
											"end": 18408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18369,
											"end": 18377,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18365,
											"end": 18409,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18562,
											"end": 18564,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18550,
											"end": 18560,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18547,
											"end": 18565,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18544,
											"end": 18593,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18544,
											"end": 18593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 18544,
											"end": 18593,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18583,
											"end": 18591,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18568,
											"end": 18591,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18568,
											"end": 18591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18544,
											"end": 18593,
											"name": "tag",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 18544,
											"end": 18593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18606,
											"end": 18686,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 18662,
											"end": 18684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 18680,
											"end": 18683,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18662,
											"end": 18684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 18662,
											"end": 18684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18662,
											"end": 18684,
											"name": "tag",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 18662,
											"end": 18684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18652,
											"end": 18660,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18648,
											"end": 18685,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18635,
											"end": 18646,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18606,
											"end": 18686,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 18606,
											"end": 18686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18606,
											"end": 18686,
											"name": "tag",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 18606,
											"end": 18686,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18265,
											"end": 18696,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18265,
											"end": 18696,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18250,
											"end": 18696,
											"name": "tag",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 18250,
											"end": 18696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18160,
											"end": 18703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18160,
											"end": 18703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18160,
											"end": 18703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18160,
											"end": 18703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18709,
											"end": 18826,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 18709,
											"end": 18826,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18763,
											"end": 18771,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18813,
											"end": 18818,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18807,
											"end": 18811,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18803,
											"end": 18819,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 18782,
											"end": 18819,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18782,
											"end": 18819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18709,
											"end": 18826,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18709,
											"end": 18826,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18709,
											"end": 18826,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18709,
											"end": 18826,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18709,
											"end": 18826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18832,
											"end": 19001,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 18832,
											"end": 19001,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18876,
											"end": 18882,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18909,
											"end": 18960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 18957,
											"end": 18958,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18953,
											"end": 18959,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 18945,
											"end": 18950,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18942,
											"end": 18943,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 18938,
											"end": 18951,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 18909,
											"end": 18960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 18909,
											"end": 18960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18909,
											"end": 18960,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 18909,
											"end": 18960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18905,
											"end": 18961,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 18990,
											"end": 18994,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18984,
											"end": 18988,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18980,
											"end": 18995,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18883,
											"end": 19001,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18832,
											"end": 19001,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18832,
											"end": 19001,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18832,
											"end": 19001,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18832,
											"end": 19001,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18832,
											"end": 19001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19006,
											"end": 19301,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 19006,
											"end": 19301,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19082,
											"end": 19086,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19228,
											"end": 19257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 19253,
											"end": 19256,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19247,
											"end": 19251,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19228,
											"end": 19257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 19228,
											"end": 19257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19228,
											"end": 19257,
											"name": "tag",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 19228,
											"end": 19257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19220,
											"end": 19257,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19220,
											"end": 19257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19290,
											"end": 19293,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19287,
											"end": 19288,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 19283,
											"end": 19294,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 19277,
											"end": 19281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19274,
											"end": 19295,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 19266,
											"end": 19295,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19266,
											"end": 19295,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19006,
											"end": 19301,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19006,
											"end": 19301,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19006,
											"end": 19301,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19006,
											"end": 19301,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19006,
											"end": 19301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19306,
											"end": 20701,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 19306,
											"end": 20701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19423,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 19456,
											"end": 19459,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19423,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 19423,
											"end": 19460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19423,
											"end": 19460,
											"name": "tag",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 19423,
											"end": 19460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19525,
											"end": 19543,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19517,
											"end": 19523,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19514,
											"end": 19544,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19511,
											"end": 19567,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19511,
											"end": 19567,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 19511,
											"end": 19567,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19547,
											"end": 19565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 19547,
											"end": 19565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 19547,
											"end": 19565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19547,
											"end": 19565,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 19547,
											"end": 19565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19511,
											"end": 19567,
											"name": "tag",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 19511,
											"end": 19567,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19591,
											"end": 19629,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 19623,
											"end": 19627,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19617,
											"end": 19628,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 19591,
											"end": 19629,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 19591,
											"end": 19629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19591,
											"end": 19629,
											"name": "tag",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 19591,
											"end": 19629,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19676,
											"end": 19743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 19736,
											"end": 19742,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19728,
											"end": 19734,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19722,
											"end": 19726,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19676,
											"end": 19743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 19676,
											"end": 19743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19676,
											"end": 19743,
											"name": "tag",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 19676,
											"end": 19743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19770,
											"end": 19771,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19794,
											"end": 19798,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19781,
											"end": 19798,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19781,
											"end": 19798,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19826,
											"end": 19828,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 19818,
											"end": 19824,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19815,
											"end": 19829,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19843,
											"end": 19844,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 19838,
											"end": 20456,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19838,
											"end": 20456,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 19838,
											"end": 20456,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 19838,
											"end": 20456,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20501,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20517,
											"end": 20523,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20514,
											"end": 20591,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20514,
											"end": 20591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 20514,
											"end": 20591,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20566,
											"end": 20575,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20561,
											"end": 20564,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 20557,
											"end": 20576,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20551,
											"end": 20577,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 20542,
											"end": 20577,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20542,
											"end": 20577,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20514,
											"end": 20591,
											"name": "tag",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 20514,
											"end": 20591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20617,
											"end": 20684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 20677,
											"end": 20683,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 20670,
											"end": 20675,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20617,
											"end": 20684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 20617,
											"end": 20684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20617,
											"end": 20684,
											"name": "tag",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 20617,
											"end": 20684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20611,
											"end": 20615,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20604,
											"end": 20685,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 20473,
											"end": 20695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19808,
											"end": 20695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 19808,
											"end": 20695,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19838,
											"end": 20456,
											"name": "tag",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 19838,
											"end": 20456,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19890,
											"end": 19894,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 19886,
											"end": 19895,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 19878,
											"end": 19884,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19874,
											"end": 19896,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 19924,
											"end": 19961,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 19956,
											"end": 19960,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 19924,
											"end": 19961,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 19924,
											"end": 19961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19924,
											"end": 19961,
											"name": "tag",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 19924,
											"end": 19961,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19983,
											"end": 19984,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19997,
											"end": 20205,
											"name": "tag",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 19997,
											"end": 20205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20011,
											"end": 20018,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20008,
											"end": 20009,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20005,
											"end": 20019,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 19997,
											"end": 20205,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19997,
											"end": 20205,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 19997,
											"end": 20205,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20090,
											"end": 20099,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20085,
											"end": 20088,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 20081,
											"end": 20100,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20101,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 20067,
											"end": 20073,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20060,
											"end": 20102,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 20141,
											"end": 20142,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 20133,
											"end": 20139,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20129,
											"end": 20143,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20119,
											"end": 20143,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20119,
											"end": 20143,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20188,
											"end": 20190,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20177,
											"end": 20186,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 20173,
											"end": 20191,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20160,
											"end": 20191,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 20160,
											"end": 20191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20034,
											"end": 20038,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20031,
											"end": 20032,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20027,
											"end": 20039,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20022,
											"end": 20039,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20022,
											"end": 20039,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19997,
											"end": 20205,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 19997,
											"end": 20205,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19997,
											"end": 20205,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 19997,
											"end": 20205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20233,
											"end": 20239,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20224,
											"end": 20231,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20221,
											"end": 20240,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 20218,
											"end": 20397,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20218,
											"end": 20397,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 20218,
											"end": 20397,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20291,
											"end": 20300,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20286,
											"end": 20289,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 20282,
											"end": 20301,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20276,
											"end": 20302,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 20334,
											"end": 20382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 20376,
											"end": 20380,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 20368,
											"end": 20374,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 20364,
											"end": 20381,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 20353,
											"end": 20362,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20334,
											"end": 20382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 20334,
											"end": 20382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20334,
											"end": 20382,
											"name": "tag",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 20334,
											"end": 20382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20326,
											"end": 20332,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20319,
											"end": 20383,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 20241,
											"end": 20397,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20218,
											"end": 20397,
											"name": "tag",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 20218,
											"end": 20397,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20443,
											"end": 20444,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 20439,
											"end": 20440,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 20431,
											"end": 20437,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 20427,
											"end": 20441,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 20423,
											"end": 20445,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20417,
											"end": 20421,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 20410,
											"end": 20446,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 19845,
											"end": 20456,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19845,
											"end": 20456,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19845,
											"end": 20456,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19808,
											"end": 20695,
											"name": "tag",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 19808,
											"end": 20695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19808,
											"end": 20695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19398,
											"end": 20701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19398,
											"end": 20701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19398,
											"end": 20701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19306,
											"end": 20701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19306,
											"end": 20701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19306,
											"end": 20701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20707,
											"end": 20855,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 20707,
											"end": 20855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20809,
											"end": 20820,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20846,
											"end": 20849,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20831,
											"end": 20849,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20831,
											"end": 20849,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20707,
											"end": 20855,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20707,
											"end": 20855,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20707,
											"end": 20855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20707,
											"end": 20855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20707,
											"end": 20855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20861,
											"end": 21251,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 20861,
											"end": 21251,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20967,
											"end": 20970,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20995,
											"end": 21034,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 21028,
											"end": 21033,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20995,
											"end": 21034,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 20995,
											"end": 21034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20995,
											"end": 21034,
											"name": "tag",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 20995,
											"end": 21034,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21050,
											"end": 21139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 21132,
											"end": 21138,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21127,
											"end": 21130,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 21050,
											"end": 21139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 21050,
											"end": 21139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21050,
											"end": 21139,
											"name": "tag",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 21050,
											"end": 21139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21043,
											"end": 21139,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 21043,
											"end": 21139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21148,
											"end": 21213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 21206,
											"end": 21212,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21201,
											"end": 21204,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 21194,
											"end": 21198,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21187,
											"end": 21192,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 21183,
											"end": 21199,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21148,
											"end": 21213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 21148,
											"end": 21213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21148,
											"end": 21213,
											"name": "tag",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 21148,
											"end": 21213,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21238,
											"end": 21244,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21233,
											"end": 21236,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21229,
											"end": 21245,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21222,
											"end": 21245,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21222,
											"end": 21245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20971,
											"end": 21251,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20861,
											"end": 21251,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20861,
											"end": 21251,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20861,
											"end": 21251,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20861,
											"end": 21251,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20861,
											"end": 21251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21257,
											"end": 21692,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 21257,
											"end": 21692,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21437,
											"end": 21440,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21459,
											"end": 21554,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 21550,
											"end": 21553,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21541,
											"end": 21547,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 21459,
											"end": 21554,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 21459,
											"end": 21554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21459,
											"end": 21554,
											"name": "tag",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 21459,
											"end": 21554,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21452,
											"end": 21554,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21452,
											"end": 21554,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21571,
											"end": 21666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 21662,
											"end": 21665,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21653,
											"end": 21659,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21571,
											"end": 21666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 21571,
											"end": 21666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21571,
											"end": 21666,
											"name": "tag",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 21571,
											"end": 21666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21564,
											"end": 21666,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21564,
											"end": 21666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21683,
											"end": 21686,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21676,
											"end": 21686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21676,
											"end": 21686,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21257,
											"end": 21692,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 21257,
											"end": 21692,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21257,
											"end": 21692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21257,
											"end": 21692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21257,
											"end": 21692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21257,
											"end": 21692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21698,
											"end": 21863,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 21698,
											"end": 21863,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21838,
											"end": 21855,
											"name": "PUSH",
											"source": 14,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 21834,
											"end": 21835,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21826,
											"end": 21832,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21822,
											"end": 21836,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21815,
											"end": 21856,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21698,
											"end": 21863,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21698,
											"end": 21863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21869,
											"end": 22235,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 21869,
											"end": 22235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22011,
											"end": 22014,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22032,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 22096,
											"end": 22098,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 22091,
											"end": 22094,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22032,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 22032,
											"end": 22099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22032,
											"end": 22099,
											"name": "tag",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 22032,
											"end": 22099,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22025,
											"end": 22099,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22025,
											"end": 22099,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22108,
											"end": 22201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 22197,
											"end": 22200,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22108,
											"end": 22201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 22108,
											"end": 22201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22108,
											"end": 22201,
											"name": "tag",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 22108,
											"end": 22201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22226,
											"end": 22228,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22221,
											"end": 22224,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22217,
											"end": 22229,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22210,
											"end": 22229,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22210,
											"end": 22229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21869,
											"end": 22235,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21869,
											"end": 22235,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21869,
											"end": 22235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21869,
											"end": 22235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22241,
											"end": 22660,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 22241,
											"end": 22660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22407,
											"end": 22411,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22445,
											"end": 22447,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22434,
											"end": 22443,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22430,
											"end": 22448,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22422,
											"end": 22448,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22422,
											"end": 22448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22494,
											"end": 22503,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22488,
											"end": 22492,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22484,
											"end": 22504,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 22480,
											"end": 22481,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22469,
											"end": 22478,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22465,
											"end": 22482,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22458,
											"end": 22505,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22522,
											"end": 22653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 22648,
											"end": 22652,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22522,
											"end": 22653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 22522,
											"end": 22653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22522,
											"end": 22653,
											"name": "tag",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 22522,
											"end": 22653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22514,
											"end": 22653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22514,
											"end": 22653,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22241,
											"end": 22660,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22241,
											"end": 22660,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22241,
											"end": 22660,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22241,
											"end": 22660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22666,
											"end": 22764,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 22666,
											"end": 22764,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22717,
											"end": 22723,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22751,
											"end": 22756,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22745,
											"end": 22757,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 22735,
											"end": 22757,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22735,
											"end": 22757,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22666,
											"end": 22764,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22666,
											"end": 22764,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22666,
											"end": 22764,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22666,
											"end": 22764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22770,
											"end": 22938,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 22770,
											"end": 22938,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22853,
											"end": 22864,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22887,
											"end": 22893,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22882,
											"end": 22885,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22875,
											"end": 22894,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22927,
											"end": 22931,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22922,
											"end": 22925,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22918,
											"end": 22932,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22903,
											"end": 22932,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22903,
											"end": 22932,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22770,
											"end": 22938,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22770,
											"end": 22938,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22770,
											"end": 22938,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22770,
											"end": 22938,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22770,
											"end": 22938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22944,
											"end": 23317,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 22944,
											"end": 23317,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23030,
											"end": 23033,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23058,
											"end": 23096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 23090,
											"end": 23095,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23058,
											"end": 23096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 23058,
											"end": 23096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23058,
											"end": 23096,
											"name": "tag",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 23058,
											"end": 23096,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23112,
											"end": 23182,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 23175,
											"end": 23181,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23170,
											"end": 23173,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 23112,
											"end": 23182,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 23112,
											"end": 23182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23112,
											"end": 23182,
											"name": "tag",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 23112,
											"end": 23182,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23105,
											"end": 23182,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 23105,
											"end": 23182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23191,
											"end": 23256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 23249,
											"end": 23255,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23244,
											"end": 23247,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 23237,
											"end": 23241,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23230,
											"end": 23235,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 23226,
											"end": 23242,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23191,
											"end": 23256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 23191,
											"end": 23256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23191,
											"end": 23256,
											"name": "tag",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 23191,
											"end": 23256,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23281,
											"end": 23310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "686"
										},
										{
											"begin": 23303,
											"end": 23309,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23281,
											"end": 23310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 23281,
											"end": 23310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23281,
											"end": 23310,
											"name": "tag",
											"source": 14,
											"value": "686"
										},
										{
											"begin": 23281,
											"end": 23310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23276,
											"end": 23279,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23272,
											"end": 23311,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23265,
											"end": 23311,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23265,
											"end": 23311,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23034,
											"end": 23317,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22944,
											"end": 23317,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22944,
											"end": 23317,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22944,
											"end": 23317,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22944,
											"end": 23317,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22944,
											"end": 23317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23323,
											"end": 23963,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 23323,
											"end": 23963,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23518,
											"end": 23522,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23556,
											"end": 23559,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 23545,
											"end": 23554,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23541,
											"end": 23560,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23533,
											"end": 23560,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23533,
											"end": 23560,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23570,
											"end": 23641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 23638,
											"end": 23639,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23627,
											"end": 23636,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23623,
											"end": 23640,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23614,
											"end": 23620,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 23570,
											"end": 23641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 23570,
											"end": 23641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23570,
											"end": 23641,
											"name": "tag",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 23570,
											"end": 23641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23651,
											"end": 23723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 23719,
											"end": 23721,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23708,
											"end": 23717,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23704,
											"end": 23722,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23695,
											"end": 23701,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 23651,
											"end": 23723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 23651,
											"end": 23723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23651,
											"end": 23723,
											"name": "tag",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 23651,
											"end": 23723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23733,
											"end": 23805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 23801,
											"end": 23803,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 23790,
											"end": 23799,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23777,
											"end": 23783,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 23733,
											"end": 23805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 23733,
											"end": 23805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23733,
											"end": 23805,
											"name": "tag",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 23733,
											"end": 23805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23852,
											"end": 23861,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23846,
											"end": 23850,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23842,
											"end": 23862,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23837,
											"end": 23839,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 23826,
											"end": 23835,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23822,
											"end": 23840,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23815,
											"end": 23863,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23880,
											"end": 23956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 23951,
											"end": 23955,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23942,
											"end": 23948,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23880,
											"end": 23956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 23880,
											"end": 23956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23880,
											"end": 23956,
											"name": "tag",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 23880,
											"end": 23956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23872,
											"end": 23956,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23872,
											"end": 23956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23323,
											"end": 23963,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 23323,
											"end": 23963,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 23323,
											"end": 23963,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23323,
											"end": 23963,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23323,
											"end": 23963,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23323,
											"end": 23963,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23323,
											"end": 23963,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23323,
											"end": 23963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23969,
											"end": 24110,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 23969,
											"end": 24110,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24025,
											"end": 24030,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24056,
											"end": 24062,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24050,
											"end": 24063,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 24041,
											"end": 24063,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24041,
											"end": 24063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24072,
											"end": 24104,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 24098,
											"end": 24103,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24072,
											"end": 24104,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 24072,
											"end": 24104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24072,
											"end": 24104,
											"name": "tag",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 24072,
											"end": 24104,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23969,
											"end": 24110,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23969,
											"end": 24110,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23969,
											"end": 24110,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23969,
											"end": 24110,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23969,
											"end": 24110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24116,
											"end": 24465,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 24116,
											"end": 24465,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24185,
											"end": 24191,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24234,
											"end": 24236,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24222,
											"end": 24231,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24213,
											"end": 24220,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24209,
											"end": 24232,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 24205,
											"end": 24237,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 24202,
											"end": 24321,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 24202,
											"end": 24321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 24202,
											"end": 24321,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 24240,
											"end": 24319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 24240,
											"end": 24319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 24240,
											"end": 24319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24240,
											"end": 24319,
											"name": "tag",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 24240,
											"end": 24319,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24202,
											"end": 24321,
											"name": "tag",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 24202,
											"end": 24321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24360,
											"end": 24361,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24385,
											"end": 24448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 24440,
											"end": 24447,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24431,
											"end": 24437,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24420,
											"end": 24429,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24416,
											"end": 24438,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24385,
											"end": 24448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 24385,
											"end": 24448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24385,
											"end": 24448,
											"name": "tag",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 24385,
											"end": 24448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24375,
											"end": 24448,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24375,
											"end": 24448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24331,
											"end": 24458,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24116,
											"end": 24465,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24116,
											"end": 24465,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24116,
											"end": 24465,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24116,
											"end": 24465,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24116,
											"end": 24465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24471,
											"end": 24651,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 24471,
											"end": 24651,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24519,
											"end": 24596,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24516,
											"end": 24517,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24509,
											"end": 24597,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24616,
											"end": 24620,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 24613,
											"end": 24614,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 24606,
											"end": 24621,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24640,
											"end": 24644,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 24637,
											"end": 24638,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24630,
											"end": 24645,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 24989,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 24657,
											"end": 24989,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24778,
											"end": 24782,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24816,
											"end": 24818,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 24805,
											"end": 24814,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24801,
											"end": 24819,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24793,
											"end": 24819,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24793,
											"end": 24819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24829,
											"end": 24900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 24897,
											"end": 24898,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24886,
											"end": 24895,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24882,
											"end": 24899,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24873,
											"end": 24879,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24829,
											"end": 24900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 24829,
											"end": 24900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24829,
											"end": 24900,
											"name": "tag",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 24829,
											"end": 24900,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24910,
											"end": 24982,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 24978,
											"end": 24980,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24967,
											"end": 24976,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24963,
											"end": 24981,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24954,
											"end": 24960,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24910,
											"end": 24982,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 24910,
											"end": 24982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24910,
											"end": 24982,
											"name": "tag",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 24910,
											"end": 24982,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 24989,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 24989,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 24989,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 24989,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 24989,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24657,
											"end": 24989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/EnigmaticAuraNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addOwner(address)": "7065cb48",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isAdditionalOwner(address)": "c8b7ec3d",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isTokenMinted(uint256)": "8f96a7cb",
							"mint()": "1249c58b",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"removeOwner(address)": "173825d9",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseURI(string)": "55f804b3",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdditionalOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isTokenMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerToRemove\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EnigmaticAuraNFT.sol\":\"EnigmaticAuraNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/EnigmaticAuraNFT.sol\":{\"keccak256\":\"0xb368fb4d8dcfb19a420e703e6d140de6decbec1ba893d59c3bd2126d78cb040d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b180b3a962a8bb4133cbf4bd89cfa98ce8fb1d50430a3b1dd854530833bc27c\",\"dweb:/ipfs/QmdkuWRHPN6ZpZuDD4XA3rWrgHdxPTUf5TskF1ah7wWWg1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 8,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 3026,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)1492_storage"
							},
							{
								"astId": 3035,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_name",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 3038,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							},
							{
								"astId": 3041,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_maxSupply",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 3043,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_baseTokenURI",
								"offset": 0,
								"slot": "11",
								"type": "t_string_storage"
							},
							{
								"astId": 3047,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_mintedTokens",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 3051,
								"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
								"label": "_additionalOwners",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1492_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1491,
										"contract": "contracts/EnigmaticAuraNFT.sol:EnigmaticAuraNFT",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1487,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1486
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"ERC165": [
							1839
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							1851
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1456
						],
						"IERC721Receiver": [
							1428
						],
						"Strings": [
							1815
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1411,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1429,
							"src": "172:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1428,
										"src": "180:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1457,
							"src": "227:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1456,
										"src": "235:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1487,
							"src": "293:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "301:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1816,
							"src": "342:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1815,
										"src": "350:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1840,
							"src": "391:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 297,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1851,
										"src": "399:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 298,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1839,
										"src": "408:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 285,
							"src": "461:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"804:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "804:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"813:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1839,
										"src": "813:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC721",
										"nameLocations": [
											"821:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "821:7:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1456,
										"src": "830:15:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								237,
								1456,
								1410,
								1839,
								1851,
								1486
							],
							"name": "ERC721",
							"nameLocation": "794:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 315,
									"libraryName": {
										"id": 313,
										"name": "Strings",
										"nameLocations": [
											"873:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1815,
										"src": "873:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:2",
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "917:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "964:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "993:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 322,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:2",
										"keyType": {
											"id": 320,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1051:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 326,
										"keyName": "owner",
										"keyNameLocation": "1067:5:2",
										"keyType": {
											"id": 324,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 325,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1109:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 330,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:2",
										"keyType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1175:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 336,
										"keyName": "owner",
										"keyNameLocation": "1191:5:2",
										"keyType": {
											"id": 332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 335,
											"keyName": "operator",
											"keyNameLocation": "1216:8:2",
											"keyType": {
												"id": 333,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 334,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1437:57:2",
										"statements": [
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1447:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1455:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:2"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1470:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1480:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 354,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1393:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1414:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:2"
									},
									"scope": 1293,
									"src": "1381:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1838,
										1850
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1669:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1698:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 367,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "1718:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 366,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1410",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1754:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 373,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "1774:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1456_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1456_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 372,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1456",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 380,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1842:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 378,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1293_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1838,
															"src": "1818:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 364,
												"id": 383,
												"nodeType": "Return",
												"src": "1679:175:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 359,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1839,
												"src": "1637:6:2"
											},
											{
												"id": 360,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1851,
												"src": "1645:7:2"
											}
										],
										"src": "1628:25:2"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1588:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 356,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1663:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:2"
									},
									"scope": 1293,
									"src": "1561:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1992:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 394,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "2002:87:2",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "2027:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 399,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 405,
															"nodeType": "RevertStatement",
															"src": "2041:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 408,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2105:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 410,
													"indexExpression": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2115:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 411,
												"nodeType": "Return",
												"src": "2098:23:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1939:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1983:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:2"
									},
									"scope": 1293,
									"src": "1920:208:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2257:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2288:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2274:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 420,
												"id": 424,
												"nodeType": "Return",
												"src": "2267:29:2"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2202:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2248:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:2"
									},
									"scope": 1293,
									"src": "2185:118:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "2425:29:2",
										"statements": [
											{
												"expression": {
													"id": 432,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2442:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "2435:12:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2410:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:2"
									},
									"scope": 1293,
									"src": "2365:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1447
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2580:31:2",
										"statements": [
											{
												"expression": {
													"id": 441,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2597:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "2590:14:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2565:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:2"
									},
									"scope": 1293,
									"src": "2518:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2756:176:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "2780:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2766:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:2"
											},
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "2799:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 456,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 458,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "2823:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 463,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2856:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 471,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2892:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 472,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "2901:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1628,
																	"src": "2901:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 468,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 478,
												"nodeType": "Return",
												"src": "2843:82:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2695:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2741:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:2"
									},
									"scope": 1293,
									"src": "2677:255:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3240:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "3250:9:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3225:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:2"
									},
									"scope": 1293,
									"src": "3174:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1383
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "3384:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3403:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3407:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 500,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3416:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 497,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1096,
														"src": "3394:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3340:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3352:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:2"
									},
									"scope": 1293,
									"src": "3323:113:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3573:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3583:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3636:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3623:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 512,
												"id": 520,
												"nodeType": "Return",
												"src": "3616:28:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3564:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:2"
									},
									"scope": 1293,
									"src": "3497:154:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1391
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3793:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 531,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3822:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3836:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3846:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 530,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3803:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3745:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3763:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:2"
									},
									"scope": 1293,
									"src": "3718:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4022:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 548,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4039:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 550,
														"indexExpression": {
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4058:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4065:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "4032:42:2"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3954:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3969:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4016:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:2"
									},
									"scope": 1293,
									"src": "3928:153:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "4223:498:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "4237:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "4233:87:2",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "4255:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 572,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 571,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "4269:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "4538:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 580,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4570:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4574:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "4583:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "4562:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 589,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "4610:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 590,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "4627:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "4606:109:2",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "4633:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "4675:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "4681:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 595,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "4690:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "4647:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4165:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4179:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4191:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:2"
									},
									"scope": 1293,
									"src": "4143:578:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "4863:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4890:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "4896:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 611,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															619,
															645
														],
														"referencedDeclaration": 645,
														"src": "4873:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4813:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4827:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4839:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:2"
									},
									"scope": 1293,
									"src": "4787:132:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5088:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5111:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5117:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5121:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5098:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5162:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5168:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5172:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5181:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5139:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:2"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5011:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5037:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5054:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:2"
									},
									"scope": 1293,
									"src": "4985:208:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "5782:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 653,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 652,
												"id": 656,
												"nodeType": "Return",
												"src": "5792:23:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5725:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5773:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:2"
									},
									"scope": 1293,
									"src": "5707:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6017:48:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 666,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "6034:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 668,
													"indexExpression": {
														"id": 667,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6050:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 665,
												"id": 669,
												"nodeType": "Return",
												"src": "6027:31:2"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5960:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6008:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:2"
									},
									"scope": 1293,
									"src": "5938:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "6485:163:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 683,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "6514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 684,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 689,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "6552:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 690,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "6561:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 693,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "6589:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 694,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "6596:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 692,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6572:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 698,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "6621:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 697,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "6608:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 700,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "6633:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 703,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 705,
												"nodeType": "Return",
												"src": "6495:146:2"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6399:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6414:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6431:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6479:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:2"
									},
									"scope": 1293,
									"src": "6376:272:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "7179:271:2",
										"statements": [
											{
												"condition": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 718,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "7208:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 719,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "7215:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 720,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7224:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 717,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7194:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "7189:255:2",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "7234:210:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "7252:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 739,
																"nodeType": "Block",
																"src": "7350:84:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 735,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "7402:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 736,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7411:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 734,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 738,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:2"
																	}
																]
															},
															"id": 740,
															"nodeType": "IfStatement",
															"src": "7248:186:2",
															"trueBody": {
																"id": 733,
																"nodeType": "Block",
																"src": "7273:71:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 730,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7321:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 729,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 732,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7108:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7123:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7140:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:2"
									},
									"scope": 1293,
									"src": "7082:368:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "8167:78:2",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:2",
												"statements": [
													{
														"expression": {
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 752,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "8201:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 754,
																"indexExpression": {
																	"id": 753,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "8211:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "8223:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 757,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8135:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 748,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:2"
									},
									"scope": 1293,
									"src": "8092:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "8933:700:2",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "8943:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 772,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 775,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "8967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "8958:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 778,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "9035:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 779,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 791,
												"nodeType": "IfStatement",
												"src": "9031:86:2",
												"trueBody": {
													"id": 790,
													"nodeType": "Block",
													"src": "9055:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "9086:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 786,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9092:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 787,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9098:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 784,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "9069:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 789,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "9161:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 819,
												"nodeType": "IfStatement",
												"src": "9157:256:2",
												"trueBody": {
													"id": 818,
													"nodeType": "Block",
													"src": "9181:232:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 803,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9298:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 804,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 798,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1096,
																		1162
																	],
																	"referencedDeclaration": 1162,
																	"src": "9277:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 810,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:2"
														},
														{
															"id": 817,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 811,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9368:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 813,
																			"indexExpression": {
																				"id": 812,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "9378:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 816,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9427:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "9423:107:2",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "9445:85:2",
													"statements": [
														{
															"id": 832,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:2",
															"statements": [
																{
																	"expression": {
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 826,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9487:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 828,
																			"indexExpression": {
																				"id": 827,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "9497:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 831,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 835,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9540:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 837,
														"indexExpression": {
															"id": 836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9559:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 842,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "9586:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "9592:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9596:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "9577:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "9572:32:2"
											},
											{
												"expression": {
													"id": 847,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "9622:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 771,
												"id": 848,
												"nodeType": "Return",
												"src": "9615:11:2"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8855:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8867:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8884:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8924:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:2"
									},
									"scope": 1293,
									"src": "8838:795:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "10008:274:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "10022:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 859,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "10018:87:2",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "10040:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 865,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 864,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10061:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "10054:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "10114:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 873,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [
														{
															"id": 876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10146:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "10150:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 875,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "10138:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "10184:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "10180:96:2",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "10213:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 891,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 890,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10234:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 896,
															"nodeType": "RevertStatement",
															"src": "10227:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9970:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:2"
									},
									"scope": 1293,
									"src": "9955:327:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "10690:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "10710:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "10714:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 941,
														"src": "10700:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10652:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10664:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:2"
									},
									"scope": 1293,
									"src": "10633:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "11038:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11054:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11058:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "11048:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11111:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11115:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 937,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "11124:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "11076:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:2"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10973:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10985:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11002:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:2"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:2"
									},
									"scope": 1293,
									"src": "10954:182:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "11503:186:2",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "11513:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 947,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "11557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 949,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "11537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "11591:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "11587:96:2",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "11620:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 968,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "11664:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 967,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11641:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "RevertStatement",
															"src": "11634:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "11477:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:2"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:2"
									},
									"scope": 1293,
									"src": "11462:227:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "12084:389:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "12098:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 985,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "12094:87:2",
												"trueBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "12116:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 991,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 990,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12137:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 996,
															"nodeType": "RevertStatement",
															"src": "12130:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "12190:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 999,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "12222:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "12226:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1001,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "12214:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "12260:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1011,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1021,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "12362:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1022,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "12379:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1031,
													"nodeType": "IfStatement",
													"src": "12358:109:2",
													"trueBody": {
														"id": 1030,
														"nodeType": "Block",
														"src": "12385:82:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1025,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "12427:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1026,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "12433:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1027,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "12442:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1024,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12406:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1029,
																"nodeType": "RevertStatement",
																"src": "12399:57:2"
															}
														]
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "12256:211:2",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "12289:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1017,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "12333:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1016,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12310:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "RevertStatement",
															"src": "12303:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12032:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12046:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12058:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:2"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:2"
									},
									"scope": 1293,
									"src": "12013:460:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "13481:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13505:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "13511:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "13515:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1044,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1052,
															1078
														],
														"referencedDeclaration": 1078,
														"src": "13491:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:2"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13429:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13443:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:2"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:2"
									},
									"scope": 1293,
									"src": "13406:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "13873:102:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13893:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13899:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "13883:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13944:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13950:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13954:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1074,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "13963:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1070,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "13921:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:2"
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13808:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13820:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13837:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:2"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:2"
									},
									"scope": 1293,
									"src": "13771:204:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "14488:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1089,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "14507:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "14511:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1091,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14520:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1088,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1162,
														"src": "14498:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:2"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14436:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14448:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14465:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:2"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:2"
									},
									"scope": 1293,
									"src": "14418:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "14814:568:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "14880:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1109,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "14893:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "14876:460:2",
												"trueBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "14913:423:2",
													"statements": [
														{
															"assignments": [
																1117
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1117,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "14927:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1121,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1119,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "14957:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1118,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "14943:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1122,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15093:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1128,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "15115:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1129,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15124:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1133,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "15150:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1134,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "15157:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1132,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "15133:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1143,
															"nodeType": "IfStatement",
															"src": "15089:142:2",
															"trueBody": {
																"id": 1142,
																"nodeType": "Block",
																"src": "15164:67:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1139,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "15211:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1138,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15189:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1141,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1144,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "15249:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1152,
															"nodeType": "IfStatement",
															"src": "15245:81:2",
															"trueBody": {
																"id": 1151,
																"nodeType": "Block",
																"src": "15260:66:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1146,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "15292:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1147,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "15299:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1148,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "15303:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1145,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "15283:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1150,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1155,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "15346:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1157,
														"indexExpression": {
															"id": 1156,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "15362:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1158,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "15373:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:2"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14738:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14767:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14781:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:2"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:2"
									},
									"scope": 1293,
									"src": "14720:662:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "15684:219:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "15698:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "15694:91:2",
												"trueBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "15722:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "15765:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1178,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15743:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1181,
															"nodeType": "RevertStatement",
															"src": "15736:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1184,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "15794:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1187,
															"indexExpression": {
																"id": 1185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "15813:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"id": 1186,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15820:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1189,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "15832:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1193,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "15870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15877:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "15887:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1192,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "15855:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "15850:46:2"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15619:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15634:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15652:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:2"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:2"
									},
									"scope": 1293,
									"src": "15591:312:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "16210:169:2",
										"statements": [
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "16220:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "16245:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "16236:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "16267:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "16263:88:2",
												"trueBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "16288:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1220,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "16332:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1219,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16309:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1222,
															"nodeType": "RevertStatement",
															"src": "16302:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1225,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1208,
													"src": "16367:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1226,
												"nodeType": "Return",
												"src": "16360:12:2"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16161:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16201:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:2"
									},
									"scope": 1293,
									"src": "16138:241:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "17020:680:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1240,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "17034:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "17030:664:2",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "17054:640:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1269,
																		"nodeType": "Block",
																		"src": "17168:162:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1258,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "17190:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1259,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1428,
																								"src": "17200:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1427,
																							"src": "17200:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1268,
																				"nodeType": "IfStatement",
																				"src": "17186:130:2",
																				"trueBody": {
																					"id": 1267,
																					"nodeType": "Block",
																					"src": "17243:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1264,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17294:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1263,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17272:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1265,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1266,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1270,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1257,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1256,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1270,
																				"src": "17153:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1255,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:2"
																	},
																	"src": "17144:186:2"
																},
																{
																	"block": {
																		"id": 1286,
																		"nodeType": "Block",
																		"src": "17359:325:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1274,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1272,
																							"src": "17381:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1284,
																					"nodeType": "Block",
																					"src": "17480:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:2",
																								"nodeType": "YulBlock",
																								"src": "17566:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:2",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:2"
																													},
																													"nativeSrc": "17599:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:2"
																													},
																													"nativeSrc": "17616:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:2"
																											},
																											"nativeSrc": "17592:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:2"
																										},
																										"nativeSrc": "17592:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1283,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:2"
																						}
																					]
																				},
																				"id": 1285,
																				"nodeType": "IfStatement",
																				"src": "17377:293:2",
																				"trueBody": {
																					"id": 1282,
																					"nodeType": "Block",
																					"src": "17401:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1279,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17452:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1278,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17430:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1280,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1281,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1287,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1273,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1272,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1287,
																				"src": "17338:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1271,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:2"
																	},
																	"src": "17331:353:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1249,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "17109:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1251,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "17123:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "17129:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "17138:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1246,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "17088:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1245,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "17072:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1428",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "17072:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1288,
															"nodeType": "TryStatement",
															"src": "17068:616:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16950:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16964:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16976:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16993:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:2"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:2"
									},
									"scope": 1293,
									"src": "16918:782:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1294,
							"src": "776:16926:2",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "107:17596:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1851
						],
						"IERC721": [
							1410
						]
					},
					"id": 1411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1411,
							"sourceUnit": 1852,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1296,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1851,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1299,
										"name": "IERC165",
										"nameLocations": [
											"287:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1851,
										"src": "287:7:3"
									},
									"id": 1300,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1298,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								1851
							],
							"name": "IERC721",
							"nameLocation": "276:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1309,
									"name": "Transfer",
									"nameLocation": "400:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "409:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "431:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "451:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:3"
									},
									"src": "394:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1318,
									"name": "Approval",
									"nameLocation": "587:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "596:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "619:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "645:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:3"
									},
									"src": "581:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1327,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "819:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "842:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "868:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:3"
									},
									"src": "798:85:3"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:3"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1027:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:3"
									},
									"scope": 1410,
									"src": "970:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1203:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:3"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1243:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:3"
									},
									"scope": 1410,
									"src": "1186:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1860:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1874:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1903:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:3"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:3"
									},
									"scope": 1410,
									"src": "1834:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2701:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:3"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:3"
									},
									"scope": 1410,
									"src": "2649:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3492:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3506:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:3"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:3"
									},
									"scope": 1410,
									"src": "3470:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4036:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:3"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 1410,
									"src": "4007:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4415:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:3"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:3"
									},
									"scope": 1410,
									"src": "4388:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4628:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4668:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:3"
									},
									"scope": 1410,
									"src": "4607:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4876:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4917:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:3"
									},
									"scope": 1410,
									"src": "4835:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "266:4659:3",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "108:4818:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1428
						]
					},
					"id": 1429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1428,
							"linearizedBaseContracts": [
								1428
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "867:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "893:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "915:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "940:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:4"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "984:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1424,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:4"
									},
									"scope": 1428,
									"src": "832:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1429,
							"src": "295:699:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1410
						],
						"IERC721Metadata": [
							1456
						]
					},
					"id": 1457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1411,
							"src": "153:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1431,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "161:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1434,
										"name": "IERC721",
										"nameLocations": [
											"357:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "357:7:5"
									},
									"id": 1435,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1433,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1456,
							"linearizedBaseContracts": [
								1456,
								1410,
								1851
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:5"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "473:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:5"
									},
									"scope": 1456,
									"src": "434:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:5"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "600:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:5"
									},
									"scope": 1456,
									"src": "559:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:5"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:5"
									},
									"scope": 1456,
									"src": "716:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1457,
							"src": "328:463:5",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "127:665:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1466,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1486,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1475,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1486,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1481,
												"id": 1483,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1486,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1560
						]
					},
					"id": 1561,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1489,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:7",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1560,
							"linearizedBaseContracts": [
								1560
							],
							"name": "Counters",
							"nameLocation": "432:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1492,
									"members": [
										{
											"constant": false,
											"id": 1491,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1492,
											"src": "786:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1490,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:7",
									"nodeType": "StructDefinition",
									"scope": 1560,
									"src": "447:374:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "901:38:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1500,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "918:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:7",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1491,
													"src": "918:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1499,
												"id": 1502,
												"nodeType": "Return",
												"src": "911:21:7"
											}
										]
									},
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "844:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1494,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1493,
														"name": "Counter",
														"nameLocations": [
															"844:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1492,
														"src": "844:7:7"
													},
													"referencedDeclaration": 1492,
													"src": "844:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:7"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "892:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:7"
									},
									"scope": 1560,
									"src": "827:112:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "998:70:7",
										"statements": [
											{
												"id": 1516,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:7",
												"statements": [
													{
														"expression": {
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1510,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "1032:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:7",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1491,
																"src": "1032:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1515,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:7"
													}
												]
											}
										]
									},
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "964:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1506,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1505,
														"name": "Counter",
														"nameLocations": [
															"964:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1492,
														"src": "964:7:7"
													},
													"referencedDeclaration": 1492,
													"src": "964:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:7"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:7"
									},
									"scope": 1560,
									"src": "945:123:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "1127:176:7",
										"statements": [
											{
												"assignments": [
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1545,
														"src": "1137:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1528,
												"initialValue": {
													"expression": {
														"id": 1526,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "1153:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:7",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1491,
													"src": "1153:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1530,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "1185:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:7"
											},
											{
												"id": 1544,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:7",
												"statements": [
													{
														"expression": {
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1536,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "1260:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1538,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:7",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1491,
																"src": "1260:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1539,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "1277:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1543,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:7"
													}
												]
											}
										]
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1093:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1520,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1519,
														"name": "Counter",
														"nameLocations": [
															"1093:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1492,
														"src": "1093:7:7"
													},
													"referencedDeclaration": 1492,
													"src": "1093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:7"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:7"
									},
									"scope": 1560,
									"src": "1074:229:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "1358:35:7",
										"statements": [
											{
												"expression": {
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1552,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "1368:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1554,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:7",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1491,
														"src": "1368:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:7"
											}
										]
									},
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1324:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1548,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1547,
														"name": "Counter",
														"nameLocations": [
															"1324:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1492,
														"src": "1324:7:7"
													},
													"referencedDeclaration": 1492,
													"src": "1324:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:7"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:7"
									},
									"scope": 1560,
									"src": "1309:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1561,
							"src": "424:971:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2905
						],
						"SignedMath": [
							3010
						],
						"Strings": [
							1815
						]
					},
					"id": 1816,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1562,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1564,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1816,
							"sourceUnit": 2906,
							"src": "127:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1563,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2905,
										"src": "135:4:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1566,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1816,
							"sourceUnit": 3011,
							"src": "165:49:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1565,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3010,
										"src": "173:10:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1567,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1815,
							"linearizedBaseContracts": [
								1815
							],
							"name": "Strings",
							"nameLocation": "259:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1570,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1815,
									"src": "273:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1568,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1569,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1573,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1815,
									"src": "335:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1571,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1572,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:8",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1580,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "520:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:8"
									},
									"src": "470:66:8"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "708:627:8",
										"statements": [
											{
												"id": 1626,
												"nodeType": "UncheckedBlock",
												"src": "718:611:8",
												"statements": [
													{
														"assignments": [
															1589
														],
														"declarations": [
															{
																"constant": false,
																"id": 1589,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1626,
																"src": "742:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1588,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1596,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1592,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "770:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1590,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2905,
																		"src": "759:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2905_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:8",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2725,
																	"src": "759:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:8"
													},
													{
														"assignments": [
															1598
														],
														"declarations": [
															{
																"constant": false,
																"id": 1598,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1626,
																"src": "794:20:8",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1597,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1603,
														"initialValue": {
															"arguments": [
																{
																	"id": 1601,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "828:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1599,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:8"
													},
													{
														"assignments": [
															1605
														],
														"declarations": [
															{
																"constant": false,
																"id": 1605,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1626,
																"src": "849:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1604,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1606,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:8"
													},
													{
														"AST": {
															"nativeSrc": "930:67:8",
															"nodeType": "YulBlock",
															"src": "930:67:8",
															"statements": [
																{
																	"nativeSrc": "948:35:8",
																	"nodeType": "YulAssignment",
																	"src": "948:35:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:8",
																						"nodeType": "YulLiteral",
																						"src": "971:2:8",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:8"
																				},
																				"nativeSrc": "967:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:8"
																		},
																		"nativeSrc": "955:28:8",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:8"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:8"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1598,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1589,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1605,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:8",
																"valueSize": 1
															}
														],
														"id": 1607,
														"nodeType": "InlineAssembly",
														"src": "921:76:8"
													},
													{
														"body": {
															"id": 1622,
															"nodeType": "Block",
															"src": "1023:269:8",
															"statements": [
																{
																	"expression": {
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:8",
																		"subExpression": {
																			"id": 1609,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1605,
																			"src": "1041:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1611,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:8"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:8",
																		"nodeType": "YulBlock",
																		"src": "1124:86:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:8",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:8",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:8"
																									},
																									"nativeSrc": "1164:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:8"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:8"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:8"
																							},
																							"nativeSrc": "1159:32:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:8",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:8"
																					},
																					"nativeSrc": "1146:46:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:8"
																				},
																				"nativeSrc": "1146:46:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:8"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1570,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1605,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1583,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:8",
																			"valueSize": 1
																		}
																	],
																	"id": 1612,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:8"
																},
																{
																	"expression": {
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1613,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "1227:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1616,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "1260:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1621,
																	"nodeType": "IfStatement",
																	"src": "1256:21:8",
																	"trueBody": {
																		"id": 1620,
																		"nodeType": "Break",
																		"src": "1272:5:8"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1623,
														"nodeType": "WhileStatement",
														"src": "1010:282:8"
													},
													{
														"expression": {
															"id": 1624,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "1312:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1587,
														"id": 1625,
														"nodeType": "Return",
														"src": "1305:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "655:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:8"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "693:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:8"
									},
									"scope": 1815,
									"src": "637:698:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "1511:92:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1639,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "1542:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:8",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1648,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "1588:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1646,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3010,
																			"src": "1573:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3010_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:8",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3009,
																		"src": "1573:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1645,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "1564:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1636,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:8",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1635,
												"id": 1652,
												"nodeType": "Return",
												"src": "1521:75:8"
											}
										]
									},
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:8",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "1459:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1630,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:8"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "1496:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1633,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:8"
									},
									"scope": 1815,
									"src": "1435:168:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1673,
										"nodeType": "Block",
										"src": "1782:100:8",
										"statements": [
											{
												"id": 1672,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1663,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "1835:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1666,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1657,
																				"src": "1854:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1664,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2905,
																				"src": "1842:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2905_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:8",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2847,
																			"src": "1842:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1662,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1674,
																	1757,
																	1777
																],
																"referencedDeclaration": 1757,
																"src": "1823:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1661,
														"id": 1671,
														"nodeType": "Return",
														"src": "1816:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "1729:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:8"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "1767:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1659,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:8"
									},
									"scope": 1815,
									"src": "1708:174:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "2095:435:8",
										"statements": [
											{
												"assignments": [
													1685
												],
												"declarations": [
													{
														"constant": false,
														"id": 1685,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1756,
														"src": "2105:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1687,
												"initialValue": {
													"id": 1686,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1677,
													"src": "2126:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:8"
											},
											{
												"assignments": [
													1689
												],
												"declarations": [
													{
														"constant": false,
														"id": 1689,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1756,
														"src": "2141:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1688,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1698,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1693,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "2177:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1690,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:8"
											},
											{
												"expression": {
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1699,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "2198:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1701,
														"indexExpression": {
															"hexValue": "30",
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:8"
											},
											{
												"expression": {
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1705,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "2223:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1707,
														"indexExpression": {
															"hexValue": "31",
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:8"
											},
											{
												"body": {
													"id": 1739,
													"nodeType": "Block",
													"src": "2293:95:8",
													"statements": [
														{
															"expression": {
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1725,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1689,
																		"src": "2307:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1727,
																	"indexExpression": {
																		"id": 1726,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1712,
																		"src": "2314:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1728,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "2319:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1732,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1729,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1685,
																			"src": "2330:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1734,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:8"
														},
														{
															"expression": {
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1735,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "2361:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1738,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1719,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "2281:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1740,
												"initializationExpression": {
													"assignments": [
														1712
													],
													"declarations": [
														{
															"constant": false,
															"id": 1712,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1740,
															"src": "2253:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1711,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1718,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1714,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1679,
																"src": "2269:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:8",
														"subExpression": {
															"id": 1722,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "2290:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1724,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1741,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "2401:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1750,
												"nodeType": "IfStatement",
												"src": "2397:96:8",
												"trueBody": {
													"id": 1749,
													"nodeType": "Block",
													"src": "2418:75:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1745,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "2468:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1746,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1679,
																		"src": "2475:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1744,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "2439:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1748,
															"nodeType": "RevertStatement",
															"src": "2432:50:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1753,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "2516:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1751,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1683,
												"id": 1755,
												"nodeType": "Return",
												"src": "2502:21:8"
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "2026:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "2041:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:8"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "2080:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1681,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:8"
									},
									"scope": 1815,
									"src": "2005:525:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "2762:75:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1770,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1760,
																			"src": "2807:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1768,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1766,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1773,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "2815:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1765,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1674,
															1757,
															1777
														],
														"referencedDeclaration": 1757,
														"src": "2779:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1775,
												"nodeType": "Return",
												"src": "2772:58:8"
											}
										]
									},
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:8"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2747:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1762,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:8"
									},
									"scope": 1815,
									"src": "2689:148:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1813,
										"nodeType": "Block",
										"src": "2992:104:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1789,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "3015:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1787,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1794,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1782,
																		"src": "3034:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1792,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1801,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "3063:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1799,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1798,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1807,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1782,
																			"src": "3086:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1805,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1804,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1786,
												"id": 1812,
												"nodeType": "Return",
												"src": "3002:87:8"
											}
										]
									},
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:8",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "2929:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1779,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "2946:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1781,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:8"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "2986:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1784,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:8"
									},
									"scope": 1815,
									"src": "2914:182:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1816,
							"src": "251:2847:8",
							"usedErrors": [
								1580
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1839
						],
						"IERC165": [
							1851
						]
					},
					"id": 1840,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1817,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1819,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1840,
							"sourceUnit": 1852,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1818,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1851,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1821,
										"name": "IERC165",
										"nameLocations": [
											"687:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1851,
										"src": "687:7:9"
									},
									"id": 1822,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1820,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1839,
							"linearizedBaseContracts": [
								1839,
								1851
							],
							"name": "ERC165",
							"nameLocation": "677:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1850
									],
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "844:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1830,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "861:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1832,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1851_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1851_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1831,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1851",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1829,
												"id": 1836,
												"nodeType": "Return",
												"src": "854:47:9"
											}
										]
									},
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "789:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1824,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:9"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "838:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:9"
									},
									"scope": 1839,
									"src": "762:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1840,
							"src": "659:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1851
						]
					},
					"id": 1852,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1841,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1842,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1851,
							"linearizedBaseContracts": [
								1851
							],
							"name": "IERC165",
							"nameLocation": "431:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "817:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1844,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:10"
									},
									"returnParameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "860:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:10"
									},
									"scope": 1851,
									"src": "790:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1852,
							"src": "421:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2905
						]
					},
					"id": 2906,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1853,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1854,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2905,
							"linearizedBaseContracts": [
								2905
							],
							"name": "Math",
							"nameLocation": "211:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:11",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1857,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:11"
									},
									"src": "277:29:11"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1862,
									"members": [
										{
											"id": 1858,
											"name": "Floor",
											"nameLocation": "336:5:11",
											"nodeType": "EnumValue",
											"src": "336:5:11"
										},
										{
											"id": 1859,
											"name": "Ceil",
											"nameLocation": "379:4:11",
											"nodeType": "EnumValue",
											"src": "379:4:11"
										},
										{
											"id": 1860,
											"name": "Trunc",
											"nameLocation": "421:5:11",
											"nodeType": "EnumValue",
											"src": "421:5:11"
										},
										{
											"id": 1861,
											"name": "Expand",
											"nameLocation": "451:6:11",
											"nodeType": "EnumValue",
											"src": "451:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:11",
									"nodeType": "EnumDefinition",
									"src": "312:169:11"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "661:140:11",
										"statements": [
											{
												"id": 1892,
												"nodeType": "UncheckedBlock",
												"src": "671:124:11",
												"statements": [
													{
														"assignments": [
															1875
														],
														"declarations": [
															{
																"constant": false,
																"id": 1875,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1892,
																"src": "695:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1874,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1879,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1876,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "707:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1877,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "711:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1880,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1875,
																"src": "730:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1881,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "734:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1887,
														"nodeType": "IfStatement",
														"src": "726:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1885,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1873,
															"id": 1886,
															"nodeType": "Return",
															"src": "737:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1889,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "782:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1890,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1873,
														"id": 1891,
														"nodeType": "Return",
														"src": "768:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "646:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "652:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:11"
									},
									"scope": 2905,
									"src": "585:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "984:113:11",
										"statements": [
											{
												"id": 1920,
												"nodeType": "UncheckedBlock",
												"src": "994:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1906,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "1022:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1907,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "1026:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1913,
														"nodeType": "IfStatement",
														"src": "1018:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1911,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1905,
															"id": 1912,
															"nodeType": "Return",
															"src": "1029:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1915,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "1074:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1916,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1899,
																		"src": "1078:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1918,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1905,
														"id": 1919,
														"nodeType": "Return",
														"src": "1060:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "924:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "935:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:11"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "969:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "975:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:11"
									},
									"scope": 2905,
									"src": "908:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "1283:417:11",
										"statements": [
											{
												"id": 1962,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1934,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "1551:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1941,
														"nodeType": "IfStatement",
														"src": "1547:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1939,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1933,
															"id": 1940,
															"nodeType": "Return",
															"src": "1559:16:11"
														}
													},
													{
														"assignments": [
															1943
														],
														"declarations": [
															{
																"constant": false,
																"id": 1943,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1962,
																"src": "1589:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1942,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1947,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1944,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "1601:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1945,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1927,
																"src": "1605:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1948,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "1624:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1949,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1925,
																	"src": "1628:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1951,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1927,
																"src": "1633:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1957,
														"nodeType": "IfStatement",
														"src": "1620:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1933,
															"id": 1956,
															"nodeType": "Return",
															"src": "1636:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1959,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "1681:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1960,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1933,
														"id": 1961,
														"nodeType": "Return",
														"src": "1667:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1923,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1223:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1234:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:11"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1268:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1274:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:11"
									},
									"scope": 2905,
									"src": "1207:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "1887:114:11",
										"statements": [
											{
												"id": 1990,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1976,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "1925:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1983,
														"nodeType": "IfStatement",
														"src": "1921:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1981,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1975,
															"id": 1982,
															"nodeType": "Return",
															"src": "1933:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1985,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1967,
																		"src": "1978:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1986,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1969,
																		"src": "1982:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1988,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1975,
														"id": 1989,
														"nodeType": "Return",
														"src": "1964:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "1827:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "1838:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:11"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "1872:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "1878:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:11"
									},
									"scope": 2905,
									"src": "1811:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2019,
										"nodeType": "Block",
										"src": "2198:114:11",
										"statements": [
											{
												"id": 2018,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2004,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "2236:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2011,
														"nodeType": "IfStatement",
														"src": "2232:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2009,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2003,
															"id": 2010,
															"nodeType": "Return",
															"src": "2244:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2013,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1995,
																		"src": "2289:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2014,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1997,
																		"src": "2293:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2016,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2003,
														"id": 2017,
														"nodeType": "Return",
														"src": "2275:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "2138:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "2149:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:11"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "2183:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1999,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "2189:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:11"
									},
									"scope": 2905,
									"src": "2122:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "2449:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2030,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "2466:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2031,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "2470:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2034,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2025,
														"src": "2478:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:11",
													"trueExpression": {
														"id": 2033,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2023,
														"src": "2474:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2029,
												"id": 2036,
												"nodeType": "Return",
												"src": "2459:20:11"
											}
										]
									},
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2395:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2406:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:11"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2440:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:11"
									},
									"scope": 2905,
									"src": "2382:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2055,
										"nodeType": "Block",
										"src": "2624:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2048,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "2641:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2049,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "2645:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2052,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "2653:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:11",
													"trueExpression": {
														"id": 2051,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "2649:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2047,
												"id": 2054,
												"nodeType": "Return",
												"src": "2634:20:11"
											}
										]
									},
									"documentation": {
										"id": 2039,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "2570:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "2581:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:11"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "2615:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:11"
									},
									"scope": 2905,
									"src": "2557:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "2845:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2066,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2059,
																	"src": "2900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2067,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "2904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2069,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2070,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2059,
																		"src": "2910:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2071,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2061,
																		"src": "2914:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2073,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2065,
												"id": 2077,
												"nodeType": "Return",
												"src": "2892:28:11"
											}
										]
									},
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "2791:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "2802:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:11"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "2836:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:11"
									},
									"scope": 2905,
									"src": "2774:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "3219:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2089,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2084,
														"src": "3233:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2097,
												"nodeType": "IfStatement",
												"src": "3229:127:11",
												"trueBody": {
													"id": 2096,
													"nodeType": "Block",
													"src": "3241:115:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2092,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "3340:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2093,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2084,
																	"src": "3344:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2088,
															"id": 2095,
															"nodeType": "Return",
															"src": "3333:12:11"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2098,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "3444:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2102,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2082,
																			"src": "3458:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2105,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2106,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2084,
																"src": "3467:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2088,
												"id": 2111,
												"nodeType": "Return",
												"src": "3437:35:11"
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "3165:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "3176:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:11"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "3210:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:11"
									},
									"scope": 2905,
									"src": "3148:331:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2238,
										"nodeType": "Block",
										"src": "3901:4018:11",
										"statements": [
											{
												"id": 2237,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:11",
												"statements": [
													{
														"assignments": [
															2126
														],
														"declarations": [
															{
																"constant": false,
																"id": 2126,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2237,
																"src": "4232:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2125,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2130,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2127,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2116,
																"src": "4248:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2128,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "4252:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:11"
													},
													{
														"assignments": [
															2132
														],
														"declarations": [
															{
																"constant": false,
																"id": 2132,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2237,
																"src": "4312:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2131,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2133,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:11"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:11",
															"nodeType": "YulBlock",
															"src": "4392:122:11",
															"statements": [
																{
																	"nativeSrc": "4410:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:11"
																				},
																				"nativeSrc": "4433:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:11"
																		},
																		"nativeSrc": "4420:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:11",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:11",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:11"
																				},
																				"nativeSrc": "4470:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:11"
																				},
																				"nativeSrc": "4486:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:11"
																		},
																		"nativeSrc": "4466:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2126,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2126,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2132,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2116,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2118,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:11",
																"valueSize": 1
															}
														],
														"id": 2134,
														"nodeType": "InlineAssembly",
														"src": "4383:131:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2135,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2132,
																"src": "4595:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2143,
														"nodeType": "IfStatement",
														"src": "4591:368:11",
														"trueBody": {
															"id": 2142,
															"nodeType": "Block",
															"src": "4607:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2138,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "4925:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2139,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2120,
																			"src": "4933:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2124,
																	"id": 2141,
																	"nodeType": "Return",
																	"src": "4918:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2144,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2120,
																"src": "5065:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2145,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2132,
																"src": "5080:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2151,
														"nodeType": "IfStatement",
														"src": "5061:88:11",
														"trueBody": {
															"id": 2150,
															"nodeType": "Block",
															"src": "5087:62:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2147,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1857,
																			"src": "5112:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2149,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:11"
																}
															]
														}
													},
													{
														"assignments": [
															2153
														],
														"declarations": [
															{
																"constant": false,
																"id": 2153,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2237,
																"src": "5404:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2152,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2154,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:11"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:11",
															"nodeType": "YulBlock",
															"src": "5444:291:11",
															"statements": [
																{
																	"nativeSrc": "5513:38:11",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:11"
																		},
																		"nativeSrc": "5526:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:11",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:11"
																				},
																				"nativeSrc": "5653:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:11"
																		},
																		"nativeSrc": "5642:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:11",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:11"
																		},
																		"nativeSrc": "5700:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2120,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2126,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2126,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2126,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2132,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2132,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2153,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2153,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2153,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2116,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2118,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:11",
																"valueSize": 1
															}
														],
														"id": 2155,
														"nodeType": "InlineAssembly",
														"src": "5435:300:11"
													},
													{
														"assignments": [
															2157
														],
														"declarations": [
															{
																"constant": false,
																"id": 2157,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2237,
																"src": "5939:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2156,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2164,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2158,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2120,
																"src": "5954:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2160,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2120,
																			"src": "5973:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2162,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:11"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:11",
															"nodeType": "YulBlock",
															"src": "6008:362:11",
															"statements": [
																{
																	"nativeSrc": "6073:37:11",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:11"
																		},
																		"nativeSrc": "6088:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:11",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:11"
																		},
																		"nativeSrc": "6186:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:11",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:11"
																						},
																						"nativeSrc": "6333:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:11"
																				},
																				"nativeSrc": "6329:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:11"
																		},
																		"nativeSrc": "6325:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2120,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2120,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2126,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2126,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2157,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2157,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2157,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2157,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2157,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:11",
																"valueSize": 1
															}
														],
														"id": 2165,
														"nodeType": "InlineAssembly",
														"src": "5999:371:11"
													},
													{
														"expression": {
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2166,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "6436:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2167,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2132,
																	"src": "6445:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2168,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "6453:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2171,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:11"
													},
													{
														"assignments": [
															2173
														],
														"declarations": [
															{
																"constant": false,
																"id": 2173,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2237,
																"src": "6775:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2172,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2180,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2175,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2120,
																			"src": "6798:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2177,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:11"
													},
													{
														"expression": {
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2181,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2173,
																"src": "7031:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2183,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2120,
																		"src": "7046:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2184,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2173,
																		"src": "7060:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2188,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:11"
													},
													{
														"expression": {
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2189,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2173,
																"src": "7100:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2191,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2120,
																		"src": "7115:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2192,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2173,
																		"src": "7129:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2196,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:11"
													},
													{
														"expression": {
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2197,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2173,
																"src": "7170:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2199,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2120,
																		"src": "7185:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2200,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2173,
																		"src": "7199:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2204,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:11"
													},
													{
														"expression": {
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2205,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2173,
																"src": "7240:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2207,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2120,
																		"src": "7255:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2208,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2173,
																		"src": "7269:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2212,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:11"
													},
													{
														"expression": {
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2213,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2173,
																"src": "7310:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2215,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2120,
																		"src": "7325:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2216,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2173,
																		"src": "7339:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2220,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:11"
													},
													{
														"expression": {
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2221,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2173,
																"src": "7381:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2223,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2120,
																		"src": "7396:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2224,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2173,
																		"src": "7410:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2228,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:11"
													},
													{
														"expression": {
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2229,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "7851:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2230,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2126,
																	"src": "7860:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2231,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "7868:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2234,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:11"
													},
													{
														"expression": {
															"id": 2235,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2123,
															"src": "7896:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2124,
														"id": 2236,
														"nodeType": "Return",
														"src": "7889:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2114,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "3819:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "3830:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "3841:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:11"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "3885:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:11"
									},
									"scope": 2905,
									"src": "3803:4116:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2281,
										"nodeType": "Block",
										"src": "8161:192:11",
										"statements": [
											{
												"assignments": [
													2255
												],
												"declarations": [
													{
														"constant": false,
														"id": 2255,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2281,
														"src": "8171:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2254,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2261,
												"initialValue": {
													"arguments": [
														{
															"id": 2257,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "8195:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2258,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "8198:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2259,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "8201:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2256,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2239,
															2282
														],
														"referencedDeclaration": 2239,
														"src": "8188:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2263,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "8244:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1862",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1862",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2262,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2904,
															"src": "8227:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1862_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2266,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "8264:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2267,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2244,
																	"src": "8267:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2268,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2246,
																	"src": "8270:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2265,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2278,
												"nodeType": "IfStatement",
												"src": "8223:101:11",
												"trueBody": {
													"id": 2277,
													"nodeType": "Block",
													"src": "8288:36:11",
													"statements": [
														{
															"expression": {
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2273,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "8302:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2276,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2279,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2255,
													"src": "8340:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2253,
												"id": 2280,
												"nodeType": "Return",
												"src": "8333:13:11"
											}
										]
									},
									"documentation": {
										"id": 2240,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "8067:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "8078:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "8089:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "8110:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1862",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2248,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2247,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1862,
														"src": "8110:8:11"
													},
													"referencedDeclaration": 1862,
													"src": "8110:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1862",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:11"
									},
									"returnParameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "8152:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:11"
									},
									"scope": 2905,
									"src": "8051:302:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "8644:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2290,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2285,
														"src": "8658:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2296,
												"nodeType": "IfStatement",
												"src": "8654:45:11",
												"trueBody": {
													"id": 2295,
													"nodeType": "Block",
													"src": "8666:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2289,
															"id": 2294,
															"nodeType": "Return",
															"src": "8680:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2298
												],
												"declarations": [
													{
														"constant": false,
														"id": 2298,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2393,
														"src": "9378:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2297,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2307,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2301,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2285,
																			"src": "9406:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2300,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2561,
																			2596
																		],
																		"referencedDeclaration": 2561,
																		"src": "9401:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2305,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:11"
											},
											{
												"id": 2392,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:11",
												"statements": [
													{
														"expression": {
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2308,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "9839:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2309,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2298,
																				"src": "9849:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2310,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2285,
																					"src": "9858:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2311,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2298,
																					"src": "9862:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2314,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2318,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:11"
													},
													{
														"expression": {
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2319,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "9888:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2320,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2298,
																				"src": "9898:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2321,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2285,
																					"src": "9907:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2322,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2298,
																					"src": "9911:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2329,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:11"
													},
													{
														"expression": {
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2330,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "9937:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2331,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2298,
																				"src": "9947:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2332,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2285,
																					"src": "9956:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2333,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2298,
																					"src": "9960:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2336,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2340,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:11"
													},
													{
														"expression": {
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2341,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "9986:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2342,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2298,
																				"src": "9996:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2343,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2285,
																					"src": "10005:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2344,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2298,
																					"src": "10009:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2347,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2351,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:11"
													},
													{
														"expression": {
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2352,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "10035:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2353,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2298,
																				"src": "10045:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2354,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2285,
																					"src": "10054:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2355,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2298,
																					"src": "10058:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2358,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2362,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:11"
													},
													{
														"expression": {
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2363,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "10084:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2364,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2298,
																				"src": "10094:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2365,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2285,
																					"src": "10103:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2366,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2298,
																					"src": "10107:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2369,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2373,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:11"
													},
													{
														"expression": {
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2374,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "10133:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2375,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2298,
																				"src": "10143:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2376,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2285,
																					"src": "10152:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2377,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2298,
																					"src": "10156:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2380,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2384,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2386,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2298,
																	"src": "10193:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2387,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2285,
																		"src": "10201:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2388,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "10205:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2385,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "10189:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2289,
														"id": 2391,
														"nodeType": "Return",
														"src": "10182:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2283,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "8601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:11"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "8635:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:11"
									},
									"scope": 2905,
									"src": "8587:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2428,
										"nodeType": "Block",
										"src": "10405:164:11",
										"statements": [
											{
												"id": 2427,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:11",
												"statements": [
													{
														"assignments": [
															2406
														],
														"declarations": [
															{
																"constant": false,
																"id": 2406,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2427,
																"src": "10439:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2405,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2410,
														"initialValue": {
															"arguments": [
																{
																	"id": 2408,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2397,
																	"src": "10461:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2407,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2394,
																	2429
																],
																"referencedDeclaration": 2394,
																"src": "10456:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2411,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "10484:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2413,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2400,
																						"src": "10511:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1862",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1862",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2412,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2904,
																					"src": "10494:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1862_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2417,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2415,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2406,
																						"src": "10524:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2416,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2406,
																						"src": "10533:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2418,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2397,
																					"src": "10542:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2424,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2404,
														"id": 2426,
														"nodeType": "Return",
														"src": "10477:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2395,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "10343:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "10354:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1862",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2399,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2398,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1862,
														"src": "10354:8:11"
													},
													"referencedDeclaration": 1862,
													"src": "10354:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1862",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:11"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "10396:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:11"
									},
									"scope": 2905,
									"src": "10329:240:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "10760:922:11",
										"statements": [
											{
												"assignments": [
													2438
												],
												"declarations": [
													{
														"constant": false,
														"id": 2438,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2560,
														"src": "10770:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2440,
												"initialValue": {
													"hexValue": "30",
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:11"
											},
											{
												"id": 2557,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2441,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "10826:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2455,
														"nodeType": "IfStatement",
														"src": "10822:99:11",
														"trueBody": {
															"id": 2454,
															"nodeType": "Block",
															"src": "10844:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "10862:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2449,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:11"
																},
																{
																	"expression": {
																		"id": 2452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2450,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "10893:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2453,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2456,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "10938:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2470,
														"nodeType": "IfStatement",
														"src": "10934:96:11",
														"trueBody": {
															"id": 2469,
															"nodeType": "Block",
															"src": "10955:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2461,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "10973:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2464,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:11"
																},
																{
																	"expression": {
																		"id": 2467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2465,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "11003:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2468,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2471,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "11047:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2485,
														"nodeType": "IfStatement",
														"src": "11043:96:11",
														"trueBody": {
															"id": 2484,
															"nodeType": "Block",
															"src": "11064:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2476,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "11082:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2479,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:11"
																},
																{
																	"expression": {
																		"id": 2482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2480,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "11112:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2483,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2486,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "11156:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2500,
														"nodeType": "IfStatement",
														"src": "11152:96:11",
														"trueBody": {
															"id": 2499,
															"nodeType": "Block",
															"src": "11173:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2491,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "11191:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2494,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:11"
																},
																{
																	"expression": {
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2495,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "11221:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2498,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2501,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "11265:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2515,
														"nodeType": "IfStatement",
														"src": "11261:93:11",
														"trueBody": {
															"id": 2514,
															"nodeType": "Block",
															"src": "11281:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2506,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "11299:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2509,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:11"
																},
																{
																	"expression": {
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2510,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "11328:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2513,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2516,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "11371:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2530,
														"nodeType": "IfStatement",
														"src": "11367:93:11",
														"trueBody": {
															"id": 2529,
															"nodeType": "Block",
															"src": "11387:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2521,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "11405:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2524,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:11"
																},
																{
																	"expression": {
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2525,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "11434:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2528,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2531,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "11477:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2545,
														"nodeType": "IfStatement",
														"src": "11473:93:11",
														"trueBody": {
															"id": 2544,
															"nodeType": "Block",
															"src": "11493:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2536,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "11511:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2539,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:11"
																},
																{
																	"expression": {
																		"id": 2542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2540,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "11540:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2543,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "11583:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2556,
														"nodeType": "IfStatement",
														"src": "11579:64:11",
														"trueBody": {
															"id": 2555,
															"nodeType": "Block",
															"src": "11599:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2551,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "11617:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2554,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2558,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2438,
													"src": "11669:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2436,
												"id": 2559,
												"nodeType": "Return",
												"src": "11662:13:11"
											}
										]
									},
									"documentation": {
										"id": 2430,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "10713:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:11"
									},
									"returnParameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "10751:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:11"
									},
									"scope": 2905,
									"src": "10699:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2595,
										"nodeType": "Block",
										"src": "11915:168:11",
										"statements": [
											{
												"id": 2594,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:11",
												"statements": [
													{
														"assignments": [
															2573
														],
														"declarations": [
															{
																"constant": false,
																"id": 2573,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2594,
																"src": "11949:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2572,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2577,
														"initialValue": {
															"arguments": [
																{
																	"id": 2575,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2564,
																	"src": "11971:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2574,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2561,
																	2596
																],
																"referencedDeclaration": 2561,
																"src": "11966:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2578,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2573,
																"src": "11998:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2580,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2567,
																						"src": "12025:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1862",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1862",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2579,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2904,
																					"src": "12008:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1862_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2584,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2582,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2583,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2573,
																						"src": "12043:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2585,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2564,
																					"src": "12052:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2591,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2571,
														"id": 2593,
														"nodeType": "Return",
														"src": "11991:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2562,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "11849:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "11864:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1862",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2565,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1862,
														"src": "11864:8:11"
													},
													"referencedDeclaration": 1862,
													"src": "11864:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1862",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:11"
									},
									"returnParameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "11906:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:11"
									},
									"scope": 2905,
									"src": "11835:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2724,
										"nodeType": "Block",
										"src": "12276:854:11",
										"statements": [
											{
												"assignments": [
													2605
												],
												"declarations": [
													{
														"constant": false,
														"id": 2605,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2724,
														"src": "12286:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2607,
												"initialValue": {
													"hexValue": "30",
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:11"
											},
											{
												"id": 2721,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2608,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2599,
																"src": "12342:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2624,
														"nodeType": "IfStatement",
														"src": "12338:103:11",
														"trueBody": {
															"id": 2623,
															"nodeType": "Block",
															"src": "12361:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2613,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2599,
																			"src": "12379:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2615,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2618,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:11"
																},
																{
																	"expression": {
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2619,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "12414:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2622,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2625,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2599,
																"src": "12458:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2641,
														"nodeType": "IfStatement",
														"src": "12454:103:11",
														"trueBody": {
															"id": 2640,
															"nodeType": "Block",
															"src": "12477:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2630,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2599,
																			"src": "12495:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2631,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2635,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:11"
																},
																{
																	"expression": {
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2636,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "12530:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2639,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2642,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2599,
																"src": "12574:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2658,
														"nodeType": "IfStatement",
														"src": "12570:103:11",
														"trueBody": {
															"id": 2657,
															"nodeType": "Block",
															"src": "12593:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2647,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2599,
																			"src": "12611:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2648,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2649,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2652,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:11"
																},
																{
																	"expression": {
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2653,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "12646:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2656,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2659,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2599,
																"src": "12690:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2675,
														"nodeType": "IfStatement",
														"src": "12686:100:11",
														"trueBody": {
															"id": 2674,
															"nodeType": "Block",
															"src": "12708:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2664,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2599,
																			"src": "12726:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2669,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:11"
																},
																{
																	"expression": {
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2670,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "12760:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2673,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2676,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2599,
																"src": "12803:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2692,
														"nodeType": "IfStatement",
														"src": "12799:100:11",
														"trueBody": {
															"id": 2691,
															"nodeType": "Block",
															"src": "12821:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2681,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2599,
																			"src": "12839:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2686,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:11"
																},
																{
																	"expression": {
																		"id": 2689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2687,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "12873:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2690,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2693,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2599,
																"src": "12916:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2709,
														"nodeType": "IfStatement",
														"src": "12912:100:11",
														"trueBody": {
															"id": 2708,
															"nodeType": "Block",
															"src": "12934:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2698,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2599,
																			"src": "12952:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2703,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:11"
																},
																{
																	"expression": {
																		"id": 2706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2704,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "12986:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2707,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2710,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2599,
																"src": "13029:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2720,
														"nodeType": "IfStatement",
														"src": "13025:66:11",
														"trueBody": {
															"id": 2719,
															"nodeType": "Block",
															"src": "13047:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2715,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "13065:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2718,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2722,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2605,
													"src": "13117:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2603,
												"id": 2723,
												"nodeType": "Return",
												"src": "13110:13:11"
											}
										]
									},
									"documentation": {
										"id": 2597,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "12229:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:11"
									},
									"returnParameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "12267:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:11"
									},
									"scope": 2905,
									"src": "12214:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2759,
										"nodeType": "Block",
										"src": "13365:170:11",
										"statements": [
											{
												"id": 2758,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:11",
												"statements": [
													{
														"assignments": [
															2737
														],
														"declarations": [
															{
																"constant": false,
																"id": 2737,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2758,
																"src": "13399:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2736,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2741,
														"initialValue": {
															"arguments": [
																{
																	"id": 2739,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2728,
																	"src": "13422:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2738,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2725,
																	2760
																],
																"referencedDeclaration": 2725,
																"src": "13416:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2742,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2737,
																"src": "13449:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2744,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2731,
																						"src": "13476:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1862",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1862",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2743,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2904,
																					"src": "13459:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1862_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2750,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2748,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2746,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2747,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2737,
																						"src": "13495:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2749,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2728,
																					"src": "13504:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2755,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2735,
														"id": 2757,
														"nodeType": "Return",
														"src": "13442:76:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2726,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "13299:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "13314:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1862",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2729,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1862,
														"src": "13314:8:11"
													},
													"referencedDeclaration": 1862,
													"src": "13314:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1862",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:11"
									},
									"returnParameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "13356:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:11"
									},
									"scope": 2905,
									"src": "13284:251:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2846,
										"nodeType": "Block",
										"src": "13855:600:11",
										"statements": [
											{
												"assignments": [
													2769
												],
												"declarations": [
													{
														"constant": false,
														"id": 2769,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2846,
														"src": "13865:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2768,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2771,
												"initialValue": {
													"hexValue": "30",
													"id": 2770,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:11"
											},
											{
												"id": 2843,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2772,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2763,
																	"src": "13921:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2786,
														"nodeType": "IfStatement",
														"src": "13917:98:11",
														"trueBody": {
															"id": 2785,
															"nodeType": "Block",
															"src": "13939:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2777,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "13957:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2780,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:11"
																},
																{
																	"expression": {
																		"id": 2783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2781,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "13988:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2784,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2787,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2763,
																	"src": "14032:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2801,
														"nodeType": "IfStatement",
														"src": "14028:95:11",
														"trueBody": {
															"id": 2800,
															"nodeType": "Block",
															"src": "14049:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2792,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "14067:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2795,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:11"
																},
																{
																	"expression": {
																		"id": 2798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2796,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "14097:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2799,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2802,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2763,
																	"src": "14140:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2816,
														"nodeType": "IfStatement",
														"src": "14136:95:11",
														"trueBody": {
															"id": 2815,
															"nodeType": "Block",
															"src": "14157:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2807,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "14175:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2810,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:11"
																},
																{
																	"expression": {
																		"id": 2813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2811,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "14205:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2814,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2817,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2763,
																	"src": "14248:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2831,
														"nodeType": "IfStatement",
														"src": "14244:95:11",
														"trueBody": {
															"id": 2830,
															"nodeType": "Block",
															"src": "14265:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2822,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "14283:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2825,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:11"
																},
																{
																	"expression": {
																		"id": 2828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2826,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "14313:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2829,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2832,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2763,
																	"src": "14356:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2842,
														"nodeType": "IfStatement",
														"src": "14352:64:11",
														"trueBody": {
															"id": 2841,
															"nodeType": "Block",
															"src": "14372:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2837,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "14390:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2840,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2844,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2769,
													"src": "14442:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2767,
												"id": 2845,
												"nodeType": "Return",
												"src": "14435:13:11"
											}
										]
									},
									"documentation": {
										"id": 2761,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "13808:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:11"
									},
									"returnParameters": {
										"id": 2767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "13846:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:11"
									},
									"scope": 2905,
									"src": "13792:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2884,
										"nodeType": "Block",
										"src": "14692:177:11",
										"statements": [
											{
												"id": 2883,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:11",
												"statements": [
													{
														"assignments": [
															2859
														],
														"declarations": [
															{
																"constant": false,
																"id": 2859,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2883,
																"src": "14726:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2858,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2863,
														"initialValue": {
															"arguments": [
																{
																	"id": 2861,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2850,
																	"src": "14750:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2860,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2847,
																	2885
																],
																"referencedDeclaration": 2847,
																"src": "14743:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2864,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2859,
																"src": "14777:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2866,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2853,
																						"src": "14804:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1862",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1862",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2865,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2904,
																					"src": "14787:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1862_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2873,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2868,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2871,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2869,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2859,
																									"src": "14823:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2870,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2872,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2874,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2850,
																					"src": "14838:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2880,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2857,
														"id": 2882,
														"nodeType": "Return",
														"src": "14770:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2848,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "14626:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "14641:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1862",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2851,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1862,
														"src": "14641:8:11"
													},
													"referencedDeclaration": 1862,
													"src": "14641:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1862",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:11"
									},
									"returnParameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "14683:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:11"
									},
									"scope": 2905,
									"src": "14610:259:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2903,
										"nodeType": "Block",
										"src": "15067:48:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2896,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "15090:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1862",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1862",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2894,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2893,
												"id": 2902,
												"nodeType": "Return",
												"src": "15077:31:11"
											}
										]
									},
									"documentation": {
										"id": 2886,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "15019:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1862",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2887,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1862,
														"src": "15019:8:11"
													},
													"referencedDeclaration": 1862,
													"src": "15019:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1862",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:11"
									},
									"returnParameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "15061:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:11"
									},
									"scope": 2905,
									"src": "14993:122:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2906,
							"src": "203:14914:11",
							"usedErrors": [
								1857
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3010
						]
					},
					"id": 3011,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2907,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2908,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:12",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3010,
							"linearizedBaseContracts": [
								3010
							],
							"name": "SignedMath",
							"nameLocation": "224:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2925,
										"nodeType": "Block",
										"src": "376:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2918,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2911,
															"src": "393:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2919,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2913,
															"src": "397:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2922,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2913,
														"src": "405:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:12",
													"trueExpression": {
														"id": 2921,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2911,
														"src": "401:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2917,
												"id": 2924,
												"nodeType": "Return",
												"src": "386:20:12"
											}
										]
									},
									"documentation": {
										"id": 2909,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:12",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "325:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2910,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "335:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2912,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:12"
									},
									"returnParameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "368:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2915,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:12"
									},
									"scope": 3010,
									"src": "312:101:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2943,
										"nodeType": "Block",
										"src": "555:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2936,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2929,
															"src": "572:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2937,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2931,
															"src": "576:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2940,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2931,
														"src": "584:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:12",
													"trueExpression": {
														"id": 2939,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2929,
														"src": "580:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2935,
												"id": 2942,
												"nodeType": "Return",
												"src": "565:20:12"
											}
										]
									},
									"documentation": {
										"id": 2927,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:12",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "504:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2928,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2931,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "514:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2930,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:12"
									},
									"returnParameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "547:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2933,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:12"
									},
									"scope": 3010,
									"src": "491:101:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2987,
										"nodeType": "Block",
										"src": "797:162:12",
										"statements": [
											{
												"assignments": [
													2955
												],
												"declarations": [
													{
														"constant": false,
														"id": 2955,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 2987,
														"src": "859:8:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2954,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2968,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2956,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2947,
																	"src": "871:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2957,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2949,
																	"src": "875:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2959,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2960,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2947,
																				"src": "882:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2961,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2949,
																				"src": "886:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2963,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2966,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2969,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2955,
														"src": "911:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2974,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2955,
																						"src": "931:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2973,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2972,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2970,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2979,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2947,
																				"src": "945:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2980,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2949,
																				"src": "949:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2982,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2984,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2953,
												"id": 2986,
												"nodeType": "Return",
												"src": "904:48:12"
											}
										]
									},
									"documentation": {
										"id": 2945,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:12",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2947,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "746:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2946,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2949,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "756:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2948,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:12"
									},
									"returnParameters": {
										"id": 2953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "789:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2951,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:12"
									},
									"scope": 3010,
									"src": "729:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3008,
										"nodeType": "Block",
										"src": "1103:158:12",
										"statements": [
											{
												"id": 3007,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2998,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2991,
																			"src": "1228:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:12",
																		"subExpression": {
																			"id": 3002,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2991,
																			"src": "1242:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:12",
																	"trueExpression": {
																		"id": 3001,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2991,
																		"src": "1237:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2996,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2995,
														"id": 3006,
														"nodeType": "Return",
														"src": "1213:31:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2989,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:12",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2991,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "1061:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2990,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:12"
									},
									"returnParameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "1094:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:12"
									},
									"scope": 3010,
									"src": "1048:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3011,
							"src": "216:1047:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:12"
				},
				"id": 12
			},
			"contracts/EnigmaticAuraNFT.sol": {
				"ast": {
					"absolutePath": "contracts/EnigmaticAuraNFT.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"Counters": [
							1560
						],
						"ERC165": [
							1839
						],
						"ERC721": [
							1293
						],
						"EnigmaticAuraNFT": [
							3259
						],
						"IERC165": [
							1851
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1456
						],
						"IERC721Receiver": [
							1428
						],
						"Ownable": [
							147
						],
						"Strings": [
							1815
						]
					},
					"id": 3260,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3012,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3013,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3260,
							"sourceUnit": 1294,
							"src": "60:57:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3014,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3260,
							"sourceUnit": 148,
							"src": "119:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3015,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3260,
							"sourceUnit": 1561,
							"src": "173:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3016,
										"name": "ERC721",
										"nameLocations": [
											"258:6:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "258:6:13"
									},
									"id": 3017,
									"nodeType": "InheritanceSpecifier",
									"src": "258:6:13"
								},
								{
									"baseName": {
										"id": 3018,
										"name": "Ownable",
										"nameLocations": [
											"266:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "266:7:13"
									},
									"id": 3019,
									"nodeType": "InheritanceSpecifier",
									"src": "266:7:13"
								}
							],
							"canonicalName": "EnigmaticAuraNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3259,
							"linearizedBaseContracts": [
								3259,
								147,
								1293,
								237,
								1456,
								1410,
								1839,
								1851,
								1486
							],
							"name": "EnigmaticAuraNFT",
							"nameLocation": "238:16:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3023,
									"libraryName": {
										"id": 3020,
										"name": "Counters",
										"nameLocations": [
											"287:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1560,
										"src": "287:8:13"
									},
									"nodeType": "UsingForDirective",
									"src": "281:36:13",
									"typeName": {
										"id": 3022,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3021,
											"name": "Counters.Counter",
											"nameLocations": [
												"300:8:13",
												"309:7:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1492,
											"src": "300:16:13"
										},
										"referencedDeclaration": 1492,
										"src": "300:16:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3026,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "348:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 3259,
									"src": "323:40:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1492_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3025,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3024,
											"name": "Counters.Counter",
											"nameLocations": [
												"323:8:13",
												"332:7:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1492,
											"src": "323:16:13"
										},
										"referencedDeclaration": 1492,
										"src": "323:16:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1492_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe",
									"id": 3032,
									"name": "Minted",
									"nameLocation": "425:6:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "448:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "432:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3030,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "463:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "455:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:40:13"
									},
									"src": "419:53:13"
								},
								{
									"constant": false,
									"id": 3035,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "523:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 3259,
									"src": "508:39:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3033,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "508:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "454e49474d415449432041555241",
										"id": 3034,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "531:16:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9df0c3f9987a363818bd13e325d522f6034d7d15d7f3c081e6f41472939f286f",
											"typeString": "literal_string \"ENIGMATIC AURA\""
										},
										"value": "ENIGMATIC AURA"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3038,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "569:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 3259,
									"src": "554:29:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3036,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "554:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4541",
										"id": 3037,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "579:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ec8f39a9d06e1df9ba0885a782fcb0ed3abe58643f52c0c5f26d6fb2c9ca0433",
											"typeString": "literal_string \"EA\""
										},
										"value": "EA"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3041,
									"mutability": "mutable",
									"name": "_maxSupply",
									"nameLocation": "639:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 3259,
									"src": "623:33:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3039,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "623:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36363636",
										"id": 3040,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "652:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6666_by_1",
											"typeString": "int_const 6666"
										},
										"value": "6666"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3043,
									"mutability": "mutable",
									"name": "_baseTokenURI",
									"nameLocation": "710:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3259,
									"src": "695:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3042,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "695:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3047,
									"mutability": "mutable",
									"name": "_mintedTokens",
									"nameLocation": "825:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3259,
									"src": "792:46:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 3046,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3044,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "800:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "792:24:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3045,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "811:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3051,
									"mutability": "mutable",
									"name": "_additionalOwners",
									"nameLocation": "906:17:13",
									"nodeType": "VariableDeclaration",
									"scope": 3259,
									"src": "873:50:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3050,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3048,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "881:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "873:24:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3049,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "892:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3068,
										"nodeType": "Block",
										"src": "964:121:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3054,
																	"name": "_additionalOwners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3051,
																	"src": "983:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3057,
																"indexExpression": {
																	"expression": {
																		"id": 3055,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1001:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1005:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1001:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "983:29:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3058,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1016:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1020:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1016:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3060,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "1030:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1030:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1016:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "983:54:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616e206164646974696f6e616c206f776e6572",
															"id": 3064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1039:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e",
																"typeString": "literal_string \"Not an additional owner\""
															},
															"value": "Not an additional owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c7126fb6ee0b44696f3c89c38029a394fa496afcf805c6e67b132854f88274e",
																"typeString": "literal_string \"Not an additional owner\""
															}
														],
														"id": 3053,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "975:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "975:90:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3066,
												"nodeType": "ExpressionStatement",
												"src": "975:90:13"
											},
											{
												"id": 3067,
												"nodeType": "PlaceholderStatement",
												"src": "1076:1:13"
											}
										]
									},
									"id": 3069,
									"name": "onlyAdditionalOwners",
									"nameLocation": "941:20:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:2:13"
									},
									"src": "932:153:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3091,
										"nodeType": "Block",
										"src": "1200:121:13",
										"statements": [
											{
												"expression": {
													"id": 3085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3083,
														"name": "_baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3043,
														"src": "1211:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3084,
														"name": "baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3071,
														"src": "1227:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1211:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3086,
												"nodeType": "ExpressionStatement",
												"src": "1211:28:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307836644237373331386334454237344132393645343131373941323237303046383436353866413836",
															"id": 3088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1270:42:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x6dB77318c4EB74A296E41179A22700F84658fA86"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3087,
														"name": "_addAdditionalOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3196,
														"src": "1250:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1250:63:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3090,
												"nodeType": "ExpressionStatement",
												"src": "1250:63:13"
											}
										]
									},
									"id": 3092,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3076,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3035,
													"src": "1162:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												{
													"id": 3077,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3038,
													"src": "1169:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												}
											],
											"id": 3078,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3075,
												"name": "ERC721",
												"nameLocations": [
													"1155:6:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "1155:6:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1155:22:13"
										},
										{
											"arguments": [
												{
													"id": 3080,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3073,
													"src": "1186:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3081,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3079,
												"name": "Ownable",
												"nameLocations": [
													"1178:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1178:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1178:21:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "baseTokenURI",
												"nameLocation": "1119:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "1105:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3070,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1105:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1141:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "1133:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:50:13"
									},
									"returnParameters": {
										"id": 3082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1200:0:13"
									},
									"scope": 3259,
									"src": "1093:228:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3137,
										"nodeType": "Block",
										"src": "1396:312:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3098,
																		"name": "_tokenIdCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3026,
																		"src": "1415:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$1492_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 3099,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1431:7:13",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1504,
																	"src": "1415:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1492_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1492_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 3100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1415:25:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 3101,
																"name": "_maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3041,
																"src": "1443:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1415:38:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178696d756d20737570706c792072656163686564",
															"id": 3103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1455:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2",
																"typeString": "literal_string \"Maximum supply reached\""
															},
															"value": "Maximum supply reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2",
																"typeString": "literal_string \"Maximum supply reached\""
															}
														],
														"id": 3097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1407:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:73:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3105,
												"nodeType": "ExpressionStatement",
												"src": "1407:73:13"
											},
											{
												"assignments": [
													3107
												],
												"declarations": [
													{
														"constant": false,
														"id": 3107,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1499:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 3137,
														"src": "1491:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1491:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3113,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 3108,
																"name": "_tokenIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3026,
																"src": "1509:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$1492_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 3109,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1525:7:13",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1504,
															"src": "1509:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1492_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1492_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 3110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1509:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 3111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1537:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1509:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1491:47:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3115,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1559:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1563:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1559:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3117,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3107,
															"src": "1571:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3114,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 915,
														"src": "1549:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1549:30:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3119,
												"nodeType": "ExpressionStatement",
												"src": "1549:30:13"
											},
											{
												"expression": {
													"id": 3124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3120,
															"name": "_mintedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3047,
															"src": "1590:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3122,
														"indexExpression": {
															"id": 3121,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3107,
															"src": "1604:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1590:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1615:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1590:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3125,
												"nodeType": "ExpressionStatement",
												"src": "1590:29:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3126,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3026,
															"src": "1630:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1492_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3128,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1646:9:13",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1518,
														"src": "1630:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1492_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1492_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1630:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3130,
												"nodeType": "ExpressionStatement",
												"src": "1630:27:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3132,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1680:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1684:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1680:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3134,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3107,
															"src": "1692:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3131,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3032,
														"src": "1673:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1673:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3136,
												"nodeType": "EmitStatement",
												"src": "1668:32:13"
											}
										]
									},
									"functionSelector": "1249c58b",
									"id": 3138,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3094,
												"name": "onlyAdditionalOwners",
												"nameLocations": [
													"1375:20:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3069,
												"src": "1375:20:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1375:20:13"
										}
									],
									"name": "mint",
									"nameLocation": "1359:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1363:2:13"
									},
									"returnParameters": {
										"id": 3096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1396:0:13"
									},
									"scope": 3259,
									"src": "1350:358:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3149,
										"nodeType": "Block",
										"src": "1826:48:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3145,
														"name": "_mintedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3047,
														"src": "1844:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 3147,
													"indexExpression": {
														"id": 3146,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3140,
														"src": "1858:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1844:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3144,
												"id": 3148,
												"nodeType": "Return",
												"src": "1837:29:13"
											}
										]
									},
									"functionSelector": "8f96a7cb",
									"id": 3150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTokenMinted",
									"nameLocation": "1766:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3140,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1788:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "1780:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:17:13"
									},
									"returnParameters": {
										"id": 3144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "1820:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1820:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:6:13"
									},
									"scope": 3259,
									"src": "1757:117:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3161,
										"nodeType": "Block",
										"src": "1987:47:13",
										"statements": [
											{
												"expression": {
													"id": 3159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3157,
														"name": "_baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3043,
														"src": "1998:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3158,
														"name": "baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3152,
														"src": "2014:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1998:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3160,
												"nodeType": "ExpressionStatement",
												"src": "1998:28:13"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 3162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3154,
												"name": "onlyOwner",
												"nameLocations": [
													"1977:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1977:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1977:9:13"
										}
									],
									"name": "setBaseURI",
									"nameLocation": "1929:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "baseTokenURI",
												"nameLocation": "1954:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "1940:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3151,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1940:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1939:28:13"
									},
									"returnParameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:0:13"
									},
									"scope": 3259,
									"src": "1920:114:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3173,
										"nodeType": "Block",
										"src": "2126:48:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3170,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3164,
															"src": "2157:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3169,
														"name": "_addAdditionalOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3196,
														"src": "2137:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:29:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3172,
												"nodeType": "ExpressionStatement",
												"src": "2137:29:13"
											}
										]
									},
									"functionSelector": "7065cb48",
									"id": 3174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3166,
												"name": "onlyOwner",
												"nameLocations": [
													"2116:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2116:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2116:9:13"
										}
									],
									"name": "addOwner",
									"nameLocation": "2080:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3164,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2097:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "2089:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2088:18:13"
									},
									"returnParameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:13"
									},
									"scope": 3259,
									"src": "2071:103:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3195,
										"nodeType": "Block",
										"src": "2288:114:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3180,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3176,
																"src": "2307:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2327:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2319:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3181,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2319:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 3184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2319:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2307:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 3186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2331:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 3179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2299:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2299:50:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3188,
												"nodeType": "ExpressionStatement",
												"src": "2299:50:13"
											},
											{
												"expression": {
													"id": 3193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3189,
															"name": "_additionalOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3051,
															"src": "2360:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3191,
														"indexExpression": {
															"id": 3190,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3176,
															"src": "2378:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2360:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2390:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2360:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3194,
												"nodeType": "ExpressionStatement",
												"src": "2360:34:13"
											}
										]
									},
									"id": 3196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addAdditionalOwner",
									"nameLocation": "2241:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2269:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3196,
												"src": "2261:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2260:18:13"
									},
									"returnParameters": {
										"id": 3178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2288:0:13"
									},
									"scope": 3259,
									"src": "2232:170:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3217,
										"nodeType": "Block",
										"src": "2555:135:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3204,
																"name": "ownerToRemove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3198,
																"src": "2574:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3205,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "2591:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 3206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2591:7:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2574:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742072656d6f766520636f6e7472616374206f776e6572",
															"id": 3208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2600:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad",
																"typeString": "literal_string \"Cannot remove contract owner\""
															},
															"value": "Cannot remove contract owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfab66761df8ab80049c79745b1d20f48a3ab4eccb316671d6e499ec19287cad",
																"typeString": "literal_string \"Cannot remove contract owner\""
															}
														],
														"id": 3203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2566:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:65:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3210,
												"nodeType": "ExpressionStatement",
												"src": "2566:65:13"
											},
											{
												"expression": {
													"id": 3215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3211,
															"name": "_additionalOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3051,
															"src": "2642:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3213,
														"indexExpression": {
															"id": 3212,
															"name": "ownerToRemove",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3198,
															"src": "2660:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2642:32:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2677:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2642:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3216,
												"nodeType": "ExpressionStatement",
												"src": "2642:40:13"
											}
										]
									},
									"functionSelector": "173825d9",
									"id": 3218,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3200,
												"name": "onlyOwner",
												"nameLocations": [
													"2545:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2545:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2545:9:13"
										}
									],
									"name": "removeOwner",
									"nameLocation": "2501:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3198,
												"mutability": "mutable",
												"name": "ownerToRemove",
												"nameLocation": "2521:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "2513:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2513:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2512:23:13"
									},
									"returnParameters": {
										"id": 3202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2555:0:13"
									},
									"scope": 3259,
									"src": "2492:198:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3229,
										"nodeType": "Block",
										"src": "2834:52:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3225,
														"name": "_additionalOwners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3051,
														"src": "2852:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3227,
													"indexExpression": {
														"id": 3226,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3220,
														"src": "2870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2852:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3224,
												"id": 3228,
												"nodeType": "Return",
												"src": "2845:33:13"
											}
										]
									},
									"functionSelector": "c8b7ec3d",
									"id": 3230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdditionalOwner",
									"nameLocation": "2770:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3220,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2796:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "2788:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:17:13"
									},
									"returnParameters": {
										"id": 3224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "2828:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2828:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2827:6:13"
									},
									"scope": 3259,
									"src": "2761:125:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										489
									],
									"body": {
										"id": 3238,
										"nodeType": "Block",
										"src": "3012:39:13",
										"statements": [
											{
												"expression": {
													"id": 3236,
													"name": "_baseTokenURI",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3043,
													"src": "3030:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 3235,
												"id": 3237,
												"nodeType": "Return",
												"src": "3023:20:13"
											}
										]
									},
									"id": 3239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "2954:8:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3232,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2979:8:13"
									},
									"parameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2962:2:13"
									},
									"returnParameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3239,
												"src": "2997:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2997:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2996:15:13"
									},
									"scope": 3259,
									"src": "2945:106:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3257,
										"nodeType": "Block",
										"src": "3151:67:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3252,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3196:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_EnigmaticAuraNFT_$3259",
																			"typeString": "contract EnigmaticAuraNFT"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_EnigmaticAuraNFT_$3259",
																			"typeString": "contract EnigmaticAuraNFT"
																		}
																	],
																	"id": 3251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3188:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3250,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3188:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 3253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3188:13:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3202:7:13",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3188:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3246,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "3170:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3170:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3162:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3162:8:13",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3162:16:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3179:8:13",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3162:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3162:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3256,
												"nodeType": "ExpressionStatement",
												"src": "3162:48:13"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 3258,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3241,
												"name": "onlyOwner",
												"nameLocations": [
													"3141:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3141:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3141:9:13"
										}
									],
									"name": "withdraw",
									"nameLocation": "3121:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3129:2:13"
									},
									"returnParameters": {
										"id": 3243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3151:0:13"
									},
									"scope": 3259,
									"src": "3112:106:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3260,
							"src": "229:2992:13",
							"usedErrors": [
								13,
								18,
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								24,
								1309,
								1318,
								1327,
								3032
							]
						}
					],
					"src": "33:3190:13"
				},
				"id": 13
			}
		}
	}
}